{"version":3,"sources":["components/profile/Profile.js","apps/ProfileApp.js","apps/MailApp.js","Home.js","Auth.js","Router.js","index.js","openweb/openweb.js","assets/anon.png","assets/gray_near_logo.svg","assets/encryptionOn.png","assets/encryptionOff.png","near/config.js"],"names":["Profile","props","state","displayName","profileUrl","bio","loading","found","window","profileComponentCache","profileCache","app","OpenWebApp","nearConfig","init","this","ready","then","updateProfile","accountId","console","log","Promise","all","getFrom","values","catch","e","setState","fetchProfile","profile","prevProps","className","role","OverlayTrigger","placement","delay","show","hide","overlay","src","anon","alt","React","Component","ProfilePopover","Popover","id","Title","as","Content","ProfileApp","keys","reduce","acc","key","chainValues","initialized","map","get","i","Object","assign","value","length","forEach","set","f","sourceImage","Image","reader","FileReader","readAsDataURL","onload","canvas","document","createElement","aspect","naturalWidth","naturalHeight","width","Math","round","max","height","ctx","getContext","imageSmoothingQuality","fillStyle","fillRect","drawImage","options","toDataURL","sort","a","b","handleChange","event","target","result","onClick","logOut","htmlFor","placeholder","disabled","onChange","type","onFilesChange","onError","onFilesError","multiple","accepts","minFileSize","clickable","save","MailApp","receiverId","subject","content","sending","profileFetchTimeoutId","profileFetchIndex","numLetters","unread","expandedId","theirPublicKey64","inbox","textarea","createRef","letter","messageId","undefined","filter","push","time","read","onNewMail","version","num","allMigrations","encrypted","resolve","storeEncryptionPublicKey","migrateFrom","modifyLetter","fetchMessages","appId","encryptionKey","stateChange","toLowerCase","replace","profileLoading","fetchTimeoutId","clearTimeout","pullMessage","message","setTimeout","inner","JSON","parse","isEncrypted","fromAppId","decryptMessage","sender","decryptedMessage","trunc","newNumLetters","warn","error","stringify","encryptMessage","sendMessage","startsWith","Date","toLocaleDateString","join","split","s","current","focus","setSelectionRange","scrollLeft","scrollTop","remove","encryptionEnabled","encryptionIcon","encryptionOn","encryptionOff","title","expanded","deleteLetter","replyTo","selectLetter","receiverClass","ref","rows","sendMail","Letter","t","toLocaleString","d","getDate","hour","getHours","minute","getMinutes","toString","padStart","daytime","timeFormat","Home","requestSignOut","wallet","signOut","signedOutFlow","isSignedIn","location","search","includes","origin","pathname","login","apps","logs","signedInFlow","bind","requestSignIn","checkSignIn","initOpenWebApp","nearlib","walletAccount","concat","getAccountId","near","connection","account","code_hash","fetch","data","arrayBuffer","buf","deployContract","Uint8Array","viewMethods","changeMethods","contract","new","masterContract","graph","mail","getAccessPublicKey","pk","args","public_key","serialize","SCHEMA","app_id","add_app_key","onKeyAdded","forceRenderTabPanel","nearlogo","Auth","queryString","pub_key","authorized","new_app_id","new_pub_key","res","Router","basename","process","hashType","exact","path","component","nearInitPromise","async","getConfig","deps","keyStore","BrowserLocalStorageKeyStore","ReactDOM","render","getElementById","config","_config","blocking","parseEncryptionKey","nacl","Buffer","keyKey","localStorage","getItem","keyPair","fromSecretKey","from","setItem","secretKey","_key","_keyStore","_near","_account","_contract","_networkId","networkId","_ready","_innerInit","getKey","getPublicKey","_tmpKey","accessKey","fromRandom","publicKey","getEncryptionPublicKey","Error","setKey","call","msg64","nonce","nonceLength","copy","box","decodedBuf","open","str","fullBuf","theirPublicKey","publicKeyLength","decryptSecretBox","forceReady","wrappedCall","encryptSecretBox","num_messages","pull_message","getTheirPublicKey","encryptBox","decryptBox","send_message","receiver_id","module","exports","env","nodeUrl","contractName","walletUrl","keyPath","HOME","masterAccount","Cookies","require","cookieConfig","getJSON","nearPages"],"mappings":"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","file":"static/js/main.a6caafbb.chunk.js","sourcesContent":["import React from \"react\";\nimport anon from \"../../assets/anon.png\";\nimport {OpenWebApp} from \"../../openweb/openweb\";\nimport Popover from \"react-bootstrap/Popover\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\n\nconst profileAppId = \"profile\";\n\nexport class Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayName: \"\",\n      profileUrl: null,\n      bio: \"\",\n      loading: true,\n      found: false,\n    }\n    if (!window.profileComponentCache) {\n      window.profileComponentCache = {\n        profileCache: {},\n        app: new OpenWebApp(profileAppId, null, window.nearConfig),\n      };\n      window.profileComponentCache.app.init();\n    }\n\n    this.profileCache = window.profileComponentCache.profileCache;\n    this.app = window.profileComponentCache.app;\n  }\n\n  componentDidMount() {\n    this.app.ready().then(() => this.updateProfile(this.props.accountId));\n  }\n\n  async fetchProfile(accountId) {\n    if (accountId in this.profileCache) {\n      return await this.profileCache[accountId];\n    } else {\n      console.log(\"Fetching profile for \" + accountId);\n      this.profileCache[accountId] = Promise.all([\n        this.app.getFrom(accountId, 'displayName'),\n        this.app.getFrom(accountId, 'profileUrl'),\n        this.app.getFrom(accountId, 'bio'),\n      ]).then((values) => {\n        return {\n          displayName: values[0] || \"\",\n          profileUrl: values[1],\n          bio: values[2] || \"\",\n          loading: false,\n        };\n      }).catch((e) => false);\n      return await this.profileCache[accountId];\n    }\n  }\n\n  updateProfile(accountId) {\n    this.setState({\n      displayName: \"\",\n      profileUrl: null,\n      bio: \"\",\n      loading: true,\n      found: false,\n    });\n    this.fetchProfile(this.props.accountId).then((profile) => {\n      if (profile) {\n        this.setState({\n          displayName: profile.displayName,\n          profileUrl: profile.profileUrl,\n          bio: profile.bio,\n          loading: false,\n          found: true,\n        });\n      } else {\n        this.setState({\n          loading: false,\n          found: false,\n        });\n      }\n    })\n\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.accountId !== prevProps.accountId) {\n      this.updateProfile(this.props.accountId);\n    }\n  }\n\n  render() {\n    return this.state.loading ? (\n      <div className=\"profile\">\n        <div className=\"spinner-grow\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    ) : this.state.found ? (\n      <OverlayTrigger\n        placement=\"auto\"\n        delay={{ show: 250, hide: 400 }}\n\n        overlay={<ProfilePopover\n          displayName={this.props.displayName || this.state.displayName}\n          profileUrl={this.props.profileUrl || this.state.profileUrl}\n          bio={this.props.bio || this.state.bio}\n          accountId={this.props.accountId}\n        />}\n      >\n        <div className=\"profile\">\n          <img className=\"profile-image\" src={this.props.profileUrl || this.state.profileUrl || anon} alt={`Profile picture of @${this.props.accountId}`}/>\n          <span className=\"profile-name\">\n            <span className=\"profile-display-name\">{this.props.displayName || this.state.displayName}</span>\n            <span className=\"profile-account-id\">{\"(@\" + this.props.accountId + \")\"}</span>\n          </span>\n        </div>\n      </OverlayTrigger>\n    ) : null;\n  }\n}\n\nclass ProfilePopover extends React.Component {\n  render() {\n    return <Popover id=\"popover-basic\" {...this.props}>\n      <Popover.Title as=\"h3\">{this.props.displayName}</Popover.Title>\n      <Popover.Content>\n        <div>\n          <img className=\"profile-image\" src={this.props.profileUrl || anon} alt={`Profile picture of @${this.props.accountId}`}/>\n          <span className=\"profile-account-id\">{\"@\" + this.props.accountId}</span>\n        </div>\n        <div>\n          {this.props.bio}\n        </div>\n      </Popover.Content>\n    </Popover>;\n  }\n}","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport Files from \"react-files\";\nimport {Profile} from \"../components/profile/Profile\";\n\nconst uploadResizeWidth = 96;\nconst uploadResizeHeight = 96;\n\nexport class ProfileApp extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const keys = [\n      \"displayName\",\n      \"profileUrl\",\n      \"bio\",\n    ];\n    this.state = keys.reduce((acc, key) => {\n      acc[key] = \"\";\n      acc.chainValues[key] = null;\n      return acc;\n    }, {\n      keys,\n      chainValues: {},\n      initialized: false,\n    });\n  }\n\n  async init() {\n    console.log(\"init profile\");\n    this.setState({\n      initialized: true,\n    });\n    const values = await Promise.all(this.state.keys.map((key) => this.props.app.get(key)));\n    console.log(values);\n    const chainValues = this.state.keys.reduce((acc, key, i) => {\n      acc[key] = values[i] || \"\";\n      return acc;\n    }, {});\n    this.setState(Object.assign({chainValues}, chainValues));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      this.init();\n    }\n  }\n\n  handleChange(key, value) {\n    console.log(value.length);\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  async save() {\n    console.log(\"Saving\");\n    const chainValues = Object.assign({}, this.state.chainValues);\n    this.state.keys.forEach(key => {\n      if (this.state.chainValues[key] !== this.state[key]) {\n        chainValues[key] = this.state[key];\n        this.props.app.set(key, this.state[key]).then(() => {\n          console.log(\"Updated key `\" + key + \"` to value `\" + this.state[key] + '`');\n        });\n      }\n    });\n    this.setState({\n      chainValues\n    })\n  }\n\n  async onFilesChange(f) {\n    let sourceImage = new Image();\n    let reader = new FileReader();\n\n    reader.readAsDataURL(f[0]);\n\n    sourceImage.onload = () => {\n      // Create a canvas with the desired dimensions\n      let canvas = document.createElement(\"canvas\");\n      const aspect = sourceImage.naturalWidth / sourceImage.naturalHeight;\n      const width = Math.round(uploadResizeWidth * Math.max(1, aspect));\n      const height = Math.round(uploadResizeHeight * Math.max(1, 1 / aspect));\n      canvas.width = uploadResizeWidth;\n      canvas.height = uploadResizeHeight;\n      const ctx = canvas.getContext(\"2d\");\n\n      // Scale and draw the source image to the canvas\n      ctx.imageSmoothingQuality = \"high\";\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, uploadResizeWidth, uploadResizeHeight);\n      ctx.drawImage(sourceImage, (uploadResizeWidth - width) / 2, (uploadResizeHeight - height) / 2, width, height);\n\n      // Convert the canvas to a data URL in PNG format\n      const options = [\n        canvas.toDataURL('image/jpeg', 0.92),\n        canvas.toDataURL('image/webp', 0.92),\n        canvas.toDataURL('image/png')\n      ];\n      options.sort((a, b) => a.length - b.length);\n\n      this.handleChange('profileUrl', options[0]);\n    }\n\n    reader.onload = function(event) {\n      sourceImage.src = event.target.result;\n    };\n  }\n\n  async onFilesError(e, f) {\n    console.log(e, f);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <button className=\"float-right\" onClick={this.props.logOut}>Log out</button>\n          <Profile\n            accountId={this.props.app && this.props.app.accountId}\n            profileUrl={this.state.profileUrl}\n            displayName={this.state.displayName}\n            bio={this.state.bio}\n          />\n        </div>\n        <hr/>\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"displayName\">Display Name</label>\n            <input placeholder=\"The REAL Satoshi\" id=\"displayName\" className=\"form-control\" disabled={!this.props.app} value={this.state.displayName} onChange={(e) => this.handleChange('displayName', e.target.value)} />\n          </div>\n          <label htmlFor=\"profileUrl\">Profile URL</label>\n          <div className=\"input-group\">\n            <input placeholder={\"https://metanear.com\" + anon} id=\"profileUrl\" className=\"form-control\" disabled={!this.props.app} value={this.state.profileUrl}\n                   onChange={(e) => this.handleChange('profileUrl', e.target.value)}/>\n            <div className=\"input-group-append\">\n              <Files\n                type=\"button\"\n                className='btn btn-outline-primary'\n                onChange={(f) => this.onFilesChange(f)}\n                onError={(e, f) => this.onFilesError(e, f)}\n                multiple={false}\n                accepts={['image/*']}\n                minFileSize={1}\n                clickable\n              >\n                Click to upload\n              </Files>\n            </div>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"bio\">Bio</label>\n            <textarea placeholder=\"I'm working on Bitcoin, so bankers can go home.\" id=\"bio\" className=\"form-control\" disabled={!this.props.app} value={this.state.bio} onChange={(e) => this.handleChange('bio', e.target.value)} />\n          </div>\n          <div className=\"form-group\">\n            <button onClick={() => this.save()}>Save changes</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport encryptionOn from \"../assets/encryptionOn.png\";\nimport encryptionOff from \"../assets/encryptionOff.png\";\nimport {encryptionKey} from \"../openweb/openweb\";\nimport {Profile} from \"../components/profile/Profile\";\n\nconst RE = \"Re: \";\nconst currentVersion = 2;\n\nexport class MailApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      receiverId: \"\",\n      subject: \"\",\n      content: \"\",\n      sending: false,\n      profileFetchTimeoutId: null,\n      profileFetchIndex: 0,\n      numLetters: 0,\n      unread: 0,\n      expandedId: -1,\n      theirPublicKey64: null,\n      inbox: [],\n    }\n    this.textarea = React.createRef();\n    this.profileCache = {};\n  }\n\n  modifyLetter(letter, messageId) {\n    if (messageId === undefined) {\n      if (!letter) {\n        return;\n      }\n      messageId = letter.messageId;\n    }\n    const inbox = this.state.inbox.filter((a) => a.messageId !== messageId);\n    if (letter) {\n      inbox.push(letter);\n    }\n    inbox.sort((a, b) => b.time - a.time);\n    const unread = inbox.reduce((acc, letter) => acc + (letter.read ? 0: 1), 0);\n    this.setState({\n      inbox,\n      unread,\n    });\n    this.props.onNewMail(unread);\n  }\n\n  async migrateFrom(version) {\n    if (version === 0) {\n      console.log(\"Migrating from version #0\");\n      let num = 0;\n      try {\n        num = await this.props.app.get('numLetters');\n      } catch (e) {\n        // whatever. Probably died during migration.\n      }\n      const allMigrations = [];\n      for (let i = 0; i < num; ++i) {\n        allMigrations.push(this.props.app.get('letter_' + i).then((letter) => {\n          if (letter) {\n            return this.props.app.set('letter_' + i, letter, {encrypted: true}).then(() => {\n              console.log(\"Migrated letter #\" + i);\n            })\n          }\n          return Promise.resolve();\n        }).catch((e) => console.log(\"Can't migrate letter #\", i, e)));\n      }\n      await Promise.all(allMigrations);\n      await this.props.app.set('numLetters', num, { encrypted: true });\n      version++;\n    }\n    if (version === 1) {\n      console.log(\"Migrating from version #1\");\n      await this.props.app.storeEncryptionPublicKey();\n      version++;\n    }\n    await this.props.app.set('version', version, { encrypted: true });\n  }\n\n  async init() {\n    console.log(\"init\");\n    this.setState({\n      initialized: true,\n    });\n    const version = await this.props.app.get('version', { encrypted: true }) || 0;\n    if (version < currentVersion) {\n      await this.migrateFrom(version);\n    }\n    const num = await this.props.app.get('numLetters', { encrypted: true }) || 0;\n    this.setState({\n      numLetters: num,\n    });\n    for (let i = Math.max(0, num - 10); i < num; ++i) {\n      this.props.app.get('letter_' + i, {encrypted: true}).then((letter) => this.modifyLetter(letter));\n    }\n    this.fetchMessages();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      this.init();\n    }\n  }\n\n  async fetchProfile(accountId) {\n    if (accountId in this.profileCache) {\n      return await this.profileCache[accountId];\n    } else {\n      console.log(\"Fetching profile for \" + accountId);\n      this.profileCache[accountId] = Promise.all([\n        this.props.app.getFrom(accountId, 'displayName',  { appId: 'profile' }),\n        this.props.app.getFrom(accountId, 'profileUrl', { appId: 'profile' }),\n        this.props.app.getFrom(accountId, encryptionKey),\n      ]).then((values) => {\n        return {\n          displayName: values[0] || \"\",\n          profileUrl: values[1],\n          theirPublicKey64: values[2],\n        };\n      }).catch((e) => false);\n      return await this.profileCache[accountId];\n    }\n  }\n\n  handleChange(key, value) {\n    const stateChange = {\n      [key]: value,\n    };\n    if (key === 'receiverId') {\n      value = value.toLowerCase().replace(/[^a-z0-9\\-_.]/, '');\n      stateChange[key] = value;\n      const profileFetchIndex = this.state.profileFetchIndex + 1;\n      stateChange.profileFetchIndex = profileFetchIndex;\n      stateChange.profile = null;\n      if (value) {\n        stateChange.profileLoading = true;\n        this.fetchProfile(value).then((profile) => {\n          if (this.state.profileFetchIndex !== profileFetchIndex) {\n            return;\n          }\n          this.setState({\n            profileLoading: false,\n            profile,\n          });\n        });\n      } else {\n        stateChange.profileLoading = false;\n      }\n    }\n    this.setState(stateChange);\n  }\n\n  async fetchMessages() {\n    if (!this.props.app) {\n      return;\n    }\n    if (this.fetchTimeoutId) {\n      clearTimeout(this.fetchTimeoutId);\n      this.fetchTimeoutId = null;\n    }\n    console.log(\"Fetching messages\");\n    const message = await this.props.app.pullMessage();\n    if (!message) {\n      this.fetchTimeoutId = setTimeout(() => { this.fetchMessages() }, 60 * 1000);\n      return;\n    }\n    try {\n      console.log(message);\n      let inner = JSON.parse(message.message);\n      const isEncrypted = inner.type === 'encrypted';\n      const fromAppId = inner.fromAppId || this.props.app.appId;\n      if (isEncrypted) {\n        const decryptedMessage = await this.props.app.decryptMessage(inner.content, {\n          accountId: message.sender,\n          appId: inner.fromAppId,\n        });\n        inner = JSON.parse(decryptedMessage);\n      }\n      if (inner.type === 'mail') {\n        const letter = {\n          messageId: this.state.numLetters,\n          isEncrypted,\n          fromAppId,\n          sender: message.sender,\n          subject: inner.subject,\n          content: inner.content,\n          time: Math.trunc(message.time / 1000000),\n        }\n        const newNumLetters = this.state.numLetters + 1;\n        this.setState({\n          numLetters: newNumLetters,\n        });\n\n        this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n          console.log(\"Saved the letter: \", letter);\n        });\n        this.props.app.set(\"numLetters\", newNumLetters, {encrypted: true}).then(() => {\n            console.log(\"Saved the new number of letters: \", newNumLetters);\n        });\n        this.modifyLetter(letter);\n      } else {\n        console.warn(\"Unknown message\", message);\n      }\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.fetchMessages()\n    }\n  }\n\n  async sendMail() {\n    if (!this.state.profile) {\n      return;\n    }\n    console.log(\"Sending mail\");\n    this.setState({\n      sending: true,\n    });\n    try {\n      let message = JSON.stringify({\n        type: \"mail\",\n        subject: this.state.subject,\n        content: this.state.content,\n      });\n      if (this.state.profile.theirPublicKey64) {\n        const content = await this.props.app.encryptMessage(message, {\n          theirPublicKey64: this.state.profile.theirPublicKey64,\n        });\n        message = JSON.stringify({\n          type: \"encrypted\",\n          fromAppId: this.props.app.appId,\n          content,\n        })\n      }\n      await this.props.app.sendMessage(this.state.receiverId, message);\n      this.setState({\n        subject: \"\",\n        content: \"\",\n      })\n    } catch (e) {\n      console.log(\"Failed to send the message\", e);\n    } finally {\n      this.setState({\n        sending: false,\n      });\n      this.fetchMessages();\n    };\n  }\n\n  receiverClass() {\n    if (!this.state.receiverId || this.state.profileLoading) {\n      return \"form-control\";\n    } else if (this.state.profile) {\n      return \"form-control is-valid\";\n    } else {\n      return \"form-control is-invalid\";\n    }\n  }\n\n  replyTo(letter, displayName) {\n    this.handleChange(\"receiverId\", letter.sender);\n    this.setState({\n      subject: (letter.subject.startsWith(RE) ? \"\" : RE) + letter.subject,\n      content: [\n        \"\",\n        \"\",\n        [\"On\", new Date(letter.time).toLocaleDateString(), displayName, \"@\" + letter.sender, \"wrote:\"].join(' '),\n        ...letter.content.split(/\\r?\\n/).map(s => \"| \" + s)\n      ].join(\"\\n\"),\n    }, () => {\n      this.textarea.current.focus();\n      this.textarea.current.setSelectionRange(0, 0);\n      this.textarea.current.scrollLeft = 0;\n      this.textarea.current.scrollTop = 0;\n    });\n  }\n\n  selectLetter(letter) {\n    this.setState({\n      expandedId: (this.state.expandedId === letter.messageId) ? -1 : letter.messageId,\n    });\n    if (!letter.read) {\n      letter = JSON.parse(JSON.stringify(letter));\n      letter.read = true;\n      this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n        console.log(\"Saved the letter: \", letter);\n      });\n      this.modifyLetter(letter);\n    }\n  }\n\n  deleteLetter(letter) {\n    this.props.app.remove(\"letter_\" + letter.messageId).then(() => {\n      console.log(\"Deleted the letter: \", letter);\n    });\n    this.modifyLetter(null, letter.messageId);\n  }\n\n  render() {\n    const encryptionEnabled = this.state.profile && this.state.profile.theirPublicKey64;\n    const encryptionIcon = this.state.profile &&\n      <img className=\"encryption-icon\" src={encryptionEnabled ? encryptionOn : encryptionOff}\n          title={encryptionEnabled ? \"Encryption is ON\" : \"Not secure! Encryption is OFF\"}/>;\n    const profile = <Profile accountId={this.state.receiverId} />;\n    const inbox = true || this.props.app ?\n      this.state.inbox.map((letter, i) => <Letter\n          key={letter.messageId}\n          fetchProfile={(a) => this.fetchProfile(a)}\n          letter={letter}\n          expanded={letter.messageId === this.state.expandedId}\n          deleteLetter={(letter) => this.deleteLetter(letter)}\n          replyTo={(letter, displayName) => this.replyTo(letter, displayName)}\n          selectLetter={(letter) => this.selectLetter(letter)}/>) :\n      null;\n    return (\n      <div>\n        Inbox <button className=\"btn btn-sm\" onClick={() => this.fetchMessages()}>🔄</button>\n        <div>\n          {inbox}\n        </div>\n        <h3>Send</h3>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label className=\"sr-only\" htmlFor=\"toAccountId\">To Account ID</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">@</div>\n                </div>\n                <input type=\"text\" className={this.receiverClass()} id=\"toAccountId\" placeholder=\"To Account ID\" value={this.state.receiverId} disabled={!this.props.app} onChange={(e) => this.handleChange('receiverId', e.target.value)} />\n              </div>\n            </div>\n          </div>\n          {profile}\n        </div>\n        <div className=\"form-group\">\n          <label className=\"sr-only\" htmlFor=\"subject\">Subject</label>\n          <input type=\"text\" className=\"form-control\" id=\"subject\" placeholder=\"Subject\" disabled={!this.props.app} value={this.state.subject} onChange={(e) => this.handleChange('subject', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <textarea ref={this.textarea} id=\"content\" className=\"form-control\" rows=\"7\" disabled={!this.props.app} value={this.state.content} onChange={(e) => this.handleChange('content', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <button className={\"form-control form-control-lg btn \" + (this.state.profile && !encryptionEnabled ? \"btn-danger\" : \"btn-primary\")} disabled={!this.state.profile || this.state.sending} onClick={() => this.sendMail()}>\n            Send {encryptionIcon}</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport class Letter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: {\n        profileUrl: null,\n        displayName: '@' + props.letter.sender,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchProfile(this.props.letter.sender).then((profile) => {\n      this.setState({\n        profile,\n      })\n    });\n  }\n\n  onClick() {\n    this.props.selectLetter(this.props.letter);\n  }\n\n  render() {\n    const profile = (\n      <div className=\"col-sm-6 col-md-4 col-lg-4 letter-profile\">\n        <Profile accountId={this.props.letter.sender}/>\n      </div>\n    );\n    const subject = (\n      <div className=\"col-sm-4 col-md\">\n        <div className=\"letter-subject\">{this.props.letter.subject}</div>\n      </div>\n    );\n    const time = this.props.expanded ? (\n      <div className=\"col-sm-2 col-lg-2\">\n        <div className=\"letter-time\">{longTimeFormat(this.props.letter.time)}</div>\n      </div>\n    ) : (\n      <div className=\"col-sm-2 col-lg-1 d-none d-md-block\">\n        <div className=\"letter-time\">{timeFormat(this.props.letter.time)}</div>\n      </div>\n    );\n    if (this.props.expanded) {\n      return (\n        <div className=\"letter letter-expanded\">\n          <div className=\"row letter-expanded-header\" onClick={() => this.onClick()}>\n            {profile}\n            {subject}\n            {time}\n          </div>\n          <div className=\"letter-content-expanded\">\n            <pre>{this.props.letter.content}</pre>\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <button className=\"btn btn-primary\" onClick={() => this.props.replyTo(this.props.letter, this.state.profile.displayName)}>Reply</button>\n              </div>\n              <div className=\"col-sm\">\n                <button className=\"btn btn-danger float-right\" onClick={() => this.props.deleteLetter(this.props.letter)}>DELETE THIS!</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={\"row letter letter-small\" + (this.props.letter.read ? \" letter-read\" : \" letter-unread\")} onClick={() => this.onClick()}>\n          {profile}\n          {subject}\n          <div className=\"col-sm d-none d-lg-block\">\n            <div className=\"letter-content\">{this.props.letter.content}</div>\n          </div>\n          {time}\n        </div>\n      );\n    }\n  }\n}\n\nfunction longTimeFormat(t) {\n  return new Date(t).toLocaleString();\n}\n\nfunction timeFormat(t) {\n  const d = new Date(t);\n  const now = new Date();\n  if (now.getDate() === d.getDate()) {\n    const hour = d.getHours() % 12;\n    const minute = d.getMinutes().toString().padStart(2, '0');\n    const daytime = d.getHours() >= 12 ? \"PM\" : \"AM\";\n    return `${hour}:${minute} ${daytime}`;\n  } else {\n    return d.toLocaleDateString();\n  }\n}\n","import React, { Component } from 'react';\nimport nearlogo from './assets/gray_near_logo.svg';\nimport './css/App.css';\nimport * as nearlib from \"nearlib\";\nimport { OpenWebApp } from './openweb/openweb.js';\nimport { ProfileApp } from \"./apps/ProfileApp\";\nimport { MailApp } from \"./apps/MailApp\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport {Profile} from \"./components/profile/Profile\";\n\nconst GAS = 2_000_000_000_000_000;\nconst TITLE = \"Open Web Home - NEAR\"\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: false,\n      apps: {},\n      logs: [],\n      unread: 0,\n      loading: false,\n    }\n    this.signedInFlow = this.signedInFlow.bind(this);\n    this.requestSignIn = this.requestSignIn.bind(this);\n    this.requestSignOut = this.requestSignOut.bind(this);\n    this.signedOutFlow = this.signedOutFlow.bind(this);\n    this.checkSignIn = this.checkSignIn.bind(this);\n    this.initOpenWebApp = this.initOpenWebApp.bind(this);\n    window.nearlib = nearlib;\n  }\n\n  componentDidMount() {\n    this.checkSignIn();\n  }\n\n  async checkSignIn() {\n    let loggedIn = window.walletAccount.isSignedIn();\n    if (loggedIn) {\n      await this.signedInFlow();\n    } else {\n      this.signedOutFlow();\n    }\n  }\n\n  log(message) {\n    console.log(message);\n    this.setState({\n      logs: this.state.logs.concat([message])\n    })\n  }\n\n  async signedInFlow() {\n    console.log(\"come in sign in flow\")\n    const accountId = await this.props.wallet.getAccountId()\n    this.setState({\n      login: true,\n      loading: true,\n      accountId,\n    })\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    if (window.location.search.includes(\"all_keys\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    // Initializing our contract APIs by contract name and configuration.\n\n    this.log(\"Connecting to account...\");\n    const account = await new nearlib.Account(window.near.connection, accountId);\n    this.log(\"Querying state...\");\n    let state = await account.state();\n    /*\n    await new Promise((resolve, reject) =>{\n      setTimeout(() => {\n        resolve();\n      }, 5000);\n    })\n     */\n    console.log(state);\n    if (state.code_hash !== 'C8UmYSqATkuyhheJ7i7ryxPjfZL4nV8PfkovdMKitsmJ') {\n      this.log(\"Going to deploy the code\");\n      // no code. Need to deploy.\n      this.log(\"Downloading started...\");\n      let data = await fetch('/open_web.wasm');\n      let buf = await data.arrayBuffer();\n      this.log(\"Downloading done. Deploying contract...\");\n      await account.deployContract(new Uint8Array(buf));\n      if (state.code_hash === '11111111111111111111111111111111') {\n        this.log(\"Deploying done. Initializing contract...\");\n        // Gotta init it.\n        let contract = await new nearlib.Contract(account, accountId, {\n          viewMethods: [],\n          // Change methods can modify the state. But you don't receive the returned value when called.\n          changeMethods: ['new'],\n          // Sender is the account ID to initialize transactions.\n          sender: accountId\n        });\n        console.log(await contract.new());\n      }\n      this.log(\"The contract is deployed\");\n    }\n\n    const masterContract = await new nearlib.Contract(account, accountId, {\n      // View methods are read only. They don't modify the state, but usually return some value.\n      viewMethods: ['apps'],\n      // Change methods can modify the state. But you don't receive the returned value when called.\n      changeMethods: ['add_app_key', 'remove_app_key'],\n      // Sender is the account ID to initialize transactions.\n      sender: accountId\n    });\n\n    this.masterContract = masterContract;\n    window.masterContract = masterContract;\n    this.log(\"Fetching authorized apps...\");\n    console.log(\"Apps:\", await masterContract.apps());\n\n    // this.initOpenWebApp = this.initOpenWebApp.bind(this);\n    \n    this.log(\"Initializing local apps...\");\n    const apps = {\n      profile: await this.initOpenWebApp('profile', accountId),\n      graph: await this.initOpenWebApp('graph', accountId),\n      mail: await this.initOpenWebApp('mail', accountId)\n    };\n    window.apps = apps;\n    this.apps = apps;\n    this.setState({\n      apps,\n      loading: false,\n    })\n    console.log(apps);\n  }\n\n  async initOpenWebApp(appId, accountId) {\n    this.log(\"Initializing app: \" + appId + \" ...\");\n    const app = new OpenWebApp(appId, accountId, window.nearConfig);\n    await app.init();\n    if (!await app.ready()) {\n      let pk = await app.getAccessPublicKey();\n      this.log(\"Authorizing app for key \" + pk.toString() + \" ...\");\n      const args = {\n        public_key: [...nearlib.utils.serialize.serialize(nearlib.transactions.SCHEMA, pk)],\n        app_id: appId,\n      };\n      await this.masterContract.add_app_key(args, GAS);\n      await app.onKeyAdded();\n    }\n    this.log(\"Done\");\n    return app;\n  }\n\n  async requestSignIn() {\n    const appTitle = 'Open Web Home';\n    await this.props.wallet.requestSignIn(\n      \"\",\n      appTitle\n    )\n  }\n\n  requestSignOut = () => {\n    this.props.wallet.signOut();\n    setTimeout(this.signedOutFlow, 500);\n    console.log(\"after sign out\", this.props.wallet.isSignedIn())\n  }\n\n\n  signedOutFlow = () => {\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    this.setState({\n      login: false,\n    })\n  }\n\n  render() {\n    document.title = (this.state.unread ? `(${this.state.unread}) ` : \"\") + TITLE;\n    if (!this.state.login) {\n      return <div className=\"App-header\">\n        <div>\n          <div className=\"image-wrapper\">\n            <img className=\"logo\" src={nearlogo} alt=\"NEAR logo\"/>\n          </div>\n          <h1>Hello ?</h1>\n          <div>\n            <button onClick={this.requestSignIn}>Log in with NEAR</button>\n          </div>\n        </div>\n      </div>\n    } else {\n      return <div>\n        {this.state.loading && (\n          <div className=\"loading-div\">\n            <div className=\"spinner-grow loading-spinner\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n            <pre className=\"text-left\">\n            {this.state.logs.join(\"\\n\")}\n          </pre>\n          </div>\n        )}\n        <div className={\"apps\" + (this.state.loading ? \" d-none\" : \"\")}>\n          <Tabs forceRenderTabPanel={true}>\n            <TabList>\n              <Tab>Profile</Tab>\n              <Tab>Mail {this.state.unread ? `(${this.state.unread})` : \"\"}</Tab>\n            </TabList>\n\n            <TabPanel>\n              <ProfileApp app={this.state.apps.profile} logOut={this.requestSignOut}/>\n            </TabPanel>\n            <TabPanel>\n              <MailApp app={this.state.apps.mail} onNewMail={(unread) => this.setState({unread})}/>\n            </TabPanel>\n          </Tabs>\n        </div>\n      </div>\n    }\n  }\n}\n","import React from \"react\";\nimport queryString from 'query-string';\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    const values = queryString.parse(this.props.location.search);\n    let {app_id, pub_key} = values;\n    if (app_id && pub_key) {\n      this.state = {\n        authorized:false,\n        new_app_id:app_id,\n        new_pub_key:pub_key\n      };\n    } else {\n      this.state = {\n        authorized:false,\n        new_app_id:\"\",\n        new_pub_key:\"\"\n      }\n    }\n  }\n\n componentDidMount() {\n    if (!this.props.loading && this.state.new_app_id && this.state.new_pub_key) {\n      this.props.initOpenWebApp(this.state.new_app_id, this.state.new_pub_key)\n        .then(res => {\n          this.setState({\n            authorized: true\n          })\n        });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      // this.init();\n    }\n  }\n  \n  // async fetchProfile(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  // async registerNewApp(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  render() {\n    return (\n      <div>\n        {this.state.authorized ? \n        <div>\n          <p>App <strong>{this.state.new_app_id}</strong> was added</p>\n          <p> Using the public key: {this.state.new_pub_key} </p>\n        </div> :\n        \"You need pass a key in order to add an app\"\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport { Home } from './Home';\nimport { Auth } from './Auth';\n\nclass Router extends Component {\n  render() {\n    return (\n      <HashRouter basename={process.env.PUBLIC_URL} hashType=\"noslash\">\n        <Switch>\n          <Route exact path=\"/\" component={() => <Home {...this.props}/>} />\n          <Route path=\"/auth\" component={() => <Auth {...this.props}/>} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport getConfig from './near/config.js';\nimport * as nearlib from 'nearlib';\n\n// Initializing contract\nasync function InitContract() {\n    window.nearConfig = getConfig('development')\n    console.log(\"nearConfig\", window.nearConfig);\n\n    // Initializing connection to the NEAR DevNet.\n    window.near = await nearlib.connect(Object.assign({ deps: { keyStore: new nearlib.keyStores.BrowserLocalStorageKeyStore() } }, window.nearConfig));\n    \n    // Needed to access wallet login\n    window.walletAccount = new nearlib.WalletAccount(window.near);\n    \n    // Getting the Account ID. If unauthorized yet, it's just empty string.\n    window.accountId = window.walletAccount.getAccountId();\n\n}\n\nwindow.nearInitPromise = InitContract().then(() => {\n    ReactDOM.render(<Router contract={window.contract} wallet={window.walletAccount}/>,\n      document.getElementById('root')\n    );\n  }).catch(console.error)","import * as nearlib from \"nearlib\";\nimport * as nacl from \"tweetnacl\";\n\nconst GAS = 2_000_000_000_000_000;\n\nexport const encryptionKey = \"encryptionKey\";\n\n/**\n  a class representing the OpenWebApp API\n\n  this API supports local contract methods\n  - get: gets a value from local storage\n  - set: sets a value on local storage\n  - remove: deletes a value from local storage\n\n  and remote contract methods\n  - pull: reads a message from a remote contract\n  - post / send: sends a message to a remote contract\n */\nexport class OpenWebApp {\n  constructor(appId, accountId, config) {\n    this.appId = appId;\n    this.accountId = accountId;\n    this._config = config;\n    this.blocking = Promise.resolve();\n    this.parseEncryptionKey();\n    window.nacl = nacl;\n    window.Buffer = Buffer;\n  }\n\n  /**\n    read private key from local storage\n    - if found, recreate the related key pair\n    - if not found, create a new key pair and save it to local storage\n   */\n  parseEncryptionKey() {\n    const keyKey = \"enc_key:\" + this.accountId + \":\" + this.appId + \":\";\n    let key = localStorage.getItem(keyKey);\n    if (key) {\n      key = nacl.box.keyPair.fromSecretKey(Buffer.from(key, 'base64'));\n    } else {\n      key = new nacl.box.keyPair();\n      localStorage.setItem(keyKey, Buffer.from(key.secretKey).toString('base64'));\n    }\n    this._key = key;\n  }\n\n  async _innerInit() {\n    this._keyStore = new nearlib.keyStores.BrowserLocalStorageKeyStore(\n      localStorage, \"app:\" + this.appId,\n    );\n    this._near = await nearlib.connect(Object.assign({ deps: { keyStore:  this._keyStore } }, this._config));\n    this._account = new nearlib.Account(this._near.connection, this.accountId);\n    this._contract = new nearlib.Contract(this._account, this.accountId, {\n      viewMethods: ['get', 'apps', 'num_messages'],\n      changeMethods: ['set', 'remove', 'pull_message', 'send_message'],\n      sender: this.accountId\n    });\n    this._networkId = this._config.networkId;\n    return true;\n  }\n\n  /**\n    initialize the client-side application with a BrowserLocalStorageKeyStore\n    and a connection to the NEAR platform, binding OpenWebContract methods:\n\n    - get, set, remove: local invocation methods for controlling the state of local applications\n    - pull_message, send_message: remote invocation methods for communicating with contracts of other users\n    - apps, num_messages: convenience methods for listing all apps on the OpenWeb and messages for a specific app\n   */\n  async init() {\n    return this._ready || (this._ready = this._innerInit());\n  }\n\n  /**\n    helper method to check if the user is logged in with the app\n   */\n  async ready() {\n    return this.init();\n  }\n\n  /**\n    produce a public key on the user account\n    @return {string} existing (or create new) public key for the current account\n   */\n  async getAccessPublicKey() {\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    if (key) {\n      return key.getPublicKey();\n    }\n    if (this._tmpKey) {\n      return this._tmpKey.getPublicKey();\n    }\n    const accessKey = nearlib.KeyPair.fromRandom('ed25519');\n    this._tmpKey = accessKey;\n    return accessKey.getPublicKey();\n  }\n\n  getEncryptionPublicKey() {\n    return Buffer.from(this._key.publicKey).toString('base64')\n  }\n\n  async storeEncryptionPublicKey() {\n    return this.set(encryptionKey, this.getEncryptionPublicKey());\n  }\n\n  /**\n    capture new keys in the keystore\n   */\n  async onKeyAdded() {\n    if (!this._tmpKey) {\n      throw new Error('The key is not initialized yet');\n    }\n    await this._keyStore.setKey(this._networkId, this.accountId, this._tmpKey);\n    this._tmpKey = null;\n  }\n\n  /**\n   * enforces that the app is ready\n   * @returns {Promise<void>}\n   */\n  async forceReady() {\n    if (!await this.ready()) {\n      throw new Error('Not ready yet');\n    }\n  }\n\n  /**\n    wrap a call in a Promise for async handling?\n\n    @param {Function} call the function to be wrapped in a Promise\n    @return {Promise} the Promise to return\n   */\n  wrappedCall(call) {\n    this.blocking = this.blocking.then(() => call()).catch(() => call());\n    return this.blocking;\n  }\n\n  /**\n    unbox encrypted messages with our secret key\n    @param {string} msg64 encrypted message encoded as Base64\n    @return {string} decoded contents of the box\n   */\n  decryptSecretBox(msg64) {\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.secretbox.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.secretbox.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.secretbox.open(box, nonce, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n    box an unencrypted message with our secret key\n    @param {string} str the message to wrap in a box\n    @return {string} base64 encoded box of incoming message\n   */\n  encryptSecretBox(str) {\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.secretbox.nonceLength);\n    const box = nacl.secretbox(buf, nonce, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.secretbox.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.secretbox.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n   unbox encrypted messages with our secret key\n   @param {string} msg64 encrypted message encoded as Base64\n   @param {Uint8Array} theirPublicKey the public key to use to verify the message\n   @return {string} decoded contents of the box\n   */\n  decryptBox(msg64, theirPublicKey) {\n    if (theirPublicKey.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Given encryption public key is invalid.\");\n    }\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.box.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.box.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.box.open(box, nonce, theirPublicKey, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n   box an unencrypted message with their public key and sign it with our secret key\n   @param {string} str the message to wrap in a box\n   @param {Uint8Array} theirPublicKey the public key to use to encrypt the message\n   @returns {string} base64 encoded box of incoming message\n   */\n  encryptBox(str, theirPublicKey) {\n    if (theirPublicKey.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Given encryption public key is invalid.\");\n    }\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.box.nonceLength);\n    const box = nacl.box(buf, nonce, theirPublicKey, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.box.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.box.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n    get data from a local app.  apps can decide whether or not to encrypt their contents\n\n    @param {string} key the key used to store a value in the app\n    @param {object} options to specify:\n    - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n    - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned by the local app\n   */\n  async get(key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    let str = await this._contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    get a value from a remote app installed on another account\n\n    @param {string} accountId account from which to get a value\n    @param {string} key the key to use to identify the value\n    @param {object} options to specify:\n     - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n     - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned from the remote app\n   */\n  async getFrom(accountId, key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    const account = new nearlib.Account(this._near.connection, accountId);\n    const contract = new nearlib.Contract(account, accountId, {\n      viewMethods: ['get'],\n      changeMethods: [],\n      sender: this.accountId\n    });\n\n    let str = await contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    return a list of installed apps\n    @return {object} collection of installed apps\n   */\n  async apps() {\n    return await this._contract.apps();\n  }\n\n  /**\n    set a value in local storage\n\n    @param {string} key identifier for the value to be set\n    @param {string} value the value to be set\n    @param {object} options to specify:\n      - {bool} `encrypted` flag indicating whether to encrypt (box) the value. Default false.\n   */\n  async set(key, value, options) {\n    await this.forceReady();\n    options = Object.assign({\n      encrypted: false,\n    }, options);\n    await this.wrappedCall(() => this._contract.set({\n      key,\n      value: options.encrypted ? this.encryptSecretBox(JSON.stringify(value)) : JSON.stringify(value),\n    }, GAS));\n  }\n\n  /**\n    remove a key-value pair from local storage\n\n    @param {string} key key to be removed\n   */\n  async remove(key) {\n    await this.forceReady();\n    await this.wrappedCall(() => this._contract.remove({\n      key,\n    }, GAS));\n  }\n\n  /**\n    retrieve a message\n\n    @return {any} return async? pull from local storage, null if not found\n   */\n  async pullMessage(options) {\n    await this.forceReady();\n    if (await this._contract.num_messages({app_id: this.appId}) > 0) {\n      return await this.wrappedCall(() => this._contract.pull_message({}, GAS));\n    } else {\n      return null;\n    }\n  }\n\n  async getTheirPublicKey(options) {\n    options = Object.assign({\n      accountId: null,\n      theirPublicKey: null,\n      theirPublicKey64: null,\n      encryptionKey,\n      appId: this.appId,\n    }, options);\n    if (options.theirPublicKey) {\n      return options.theirPublicKey;\n    }\n    if (!options.theirPublicKey64) {\n      if (!options.accountId) {\n        throw new Error(\"Either accountId or theirPublicKey64 has to be provided\");\n      }\n      options.theirPublicKey64 = await this.getFrom(options.accountId, options.encryptionKey, {\n        appId: options.appId,\n      });\n    }\n    if (!options.theirPublicKey64) {\n      throw new Error(\"Their app doesn't provide the encryption public key.\");\n    }\n    const buf = Buffer.from(options.theirPublicKey64, 'base64');\n    if (buf.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Their encryption public key is invalid.\");\n    }\n    const theirPublicKey = new Uint8Array(nacl.box.publicKeyLength);\n    theirPublicKey.set(buf);\n    return theirPublicKey;\n  }\n\n  /**\n   * Encrypts given content. Typical usage: encryptMessage(\"hello world\", {accountId: bla})\n   *\n   * @param {string} content The message to encrypt\n   * @param options\n   * @returns {Promise<string>}\n   */\n  async encryptMessage(content, options) {\n    const theirPublicKey = await this.getTheirPublicKey(options);\n    return this.encryptBox(content, theirPublicKey);\n  }\n\n  async decryptMessage(msg64, options) {\n    const theirPublicKey = await this.getTheirPublicKey(options);\n    return this.decryptBox(msg64, theirPublicKey);\n  }\n\n  /**\n    send a message to another account\n\n    @param {string} receiverId account id which will receive the message\n    @param {string} message the content of the message\n    @param {object} options to specify:\n      - {string} `appId` the app ID to receive the message. Same app by default.\n   */\n  async sendMessage(receiverId, message, options) {\n    this.forceReady();\n    options = Object.assign({\n      appId: this.appId,\n    }, options);\n    await this.wrappedCall(() => this._contract.send_message({\n      receiver_id: receiverId,\n      app_id: options.appId,\n      message,\n    }, GAS));\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/anon.5cbbd243.png\";","module.exports = __webpack_public_path__ + \"static/media/gray_near_logo.55517b93.svg\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOn.23e3b306.png\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOff.475ce496.png\";","(function() {\n    const CONTRACT_NAME = 'react-template'; /* TODO: fill this in!*/\n    const DEFAULT_ENV = 'development'; \n    \n    function getConfig(env) {\n        switch (env) {\n\n        case 'production':\n        case 'development':\n            return {\n                networkId: 'default',\n                nodeUrl: 'https://rpc.nearprotocol.com',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://wallet.nearprotocol.com',\n            };\n        case 'staging':\n            return {\n                networkId: 'staging',\n                nodeUrl: 'https://staging-rpc.nearprotocol.com/',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://near-wallet-staging.onrender.com',\n            };\n        case 'local':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                keyPath: `${process.env.HOME}/.near/validator_key.json`,\n                walletUrl: 'http://localhost:4000/wallet',\n                contractName: CONTRACT_NAME,\n            };\n        case 'test':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'test-remote':\n        case 'ci':\n            return {\n                networkId: 'shared-test',\n                nodeUrl: 'http://shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'ci-staging':\n            return {\n                networkId: 'shared-test-staging',\n                nodeUrl: 'http://staging-shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        default:\n            throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n        }\n    }\n    \n    let Cookies = require('js-cookie');\n    const cookieConfig = typeof Cookies != 'undefined' && Cookies.getJSON('fiddleConfig');\n    if (typeof module !== 'undefined' && module.exports) {\n        console.log(\"module works\")\n        module.exports = getConfig;\n    } else {\n        console.log(\"Cookie works\")\n        window.nearConfig =  cookieConfig && cookieConfig.nearPages ? cookieConfig : getConfig(DEFAULT_ENV);\n    }\n})();\n"],"sourceRoot":""}