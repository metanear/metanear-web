{"version":3,"sources":["ProfileApp.js","MailApp.js","Home.js","Auth.js","App.js","index.js","assets/anon.png","openweb.js","assets/gray_near_logo.svg","assets/encryptionOn.png","assets/encryptionOff.png","config.js"],"names":["ProfileApp","props","keys","state","reduce","acc","key","chainValues","initialized","console","log","this","setState","Promise","all","map","app","get","values","i","Object","assign","prevProps","init","value","length","forEach","set","then","f","sourceImage","Image","reader","FileReader","readAsDataURL","onload","canvas","document","createElement","aspect","naturalWidth","naturalHeight","width","Math","round","max","height","ctx","getContext","imageSmoothingQuality","fillStyle","fillRect","drawImage","options","toDataURL","sort","a","b","handleChange","event","src","target","result","e","className","profileUrl","anon","displayName","accountId","htmlFor","placeholder","id","disabled","onChange","type","onFilesChange","onError","onFilesError","multiple","accepts","minFileSize","clickable","bio","onClick","save","React","Component","MailApp","receiverId","subject","content","sending","profileFetchTimeoutId","profileFetchIndex","numLetters","unread","expandedId","theirPublicKey64","inbox","textarea","createRef","profileCache","letter","messageId","undefined","filter","push","time","read","onNewMail","version","num","allMigrations","encrypted","resolve","catch","storeEncryptionPublicKey","migrateFrom","modifyLetter","fetchMessages","getFrom","appId","encryptionKey","stateChange","toLowerCase","replace","profile","profileLoading","fetchProfile","fetchTimeoutId","clearTimeout","pullMessage","message","setTimeout","inner","JSON","parse","isEncrypted","fromAppId","decryptMessage","sender","decryptedMessage","trunc","newNumLetters","warn","error","stringify","encryptMessage","sendMessage","startsWith","Date","toLocaleDateString","join","split","s","current","focus","setSelectionRange","scrollLeft","scrollTop","remove","encryptionEnabled","encryptionIcon","encryptionOn","encryptionOff","title","role","expanded","deleteLetter","replyTo","selectLetter","receiverClass","ref","rows","sendMail","Letter","t","profileName","toLocaleString","d","getDate","hour","getHours","minute","getMinutes","toString","padStart","daytime","timeFormat","Home","requestSignOut","wallet","signOut","signedOutFlow","isSignedIn","window","location","search","includes","origin","pathname","login","apps","logs","loading","signedInFlow","bind","requestSignIn","checkSignIn","initOpenWebApp","nearlib","walletAccount","concat","getAccountId","near","connection","account","code_hash","fetch","data","arrayBuffer","buf","deployContract","Uint8Array","viewMethods","changeMethods","contract","new","masterContract","graph","mail","OpenWebApp","nearConfig","ready","getAccessPublicKey","pk","args","public_key","serialize","SCHEMA","app_id","add_app_key","onKeyAdded","nearlogo","alt","forceRenderTabPanel","Auth","queryString","pub_key","authorized","new_app_id","new_pub_key","res","App","basename","process","hashType","exact","path","component","nearInitPromise","async","getConfig","deps","keyStore","BrowserLocalStorageKeyStore","ReactDOM","render","getElementById","module","exports","config","_config","blocking","parseEncryptionKey","nacl","Buffer","keyKey","localStorage","getItem","keyPair","fromSecretKey","from","setItem","secretKey","_key","_keyStore","_near","_account","_contract","_networkId","networkId","getKey","getPublicKey","_tmpKey","accessKey","fromRandom","publicKey","getEncryptionPublicKey","Error","setKey","call","msg64","nonce","nonceLength","copy","box","decodedBuf","open","str","fullBuf","theirPublicKey","publicKeyLength","decryptSecretBox","forceReady","wrappedCall","encryptSecretBox","num_messages","pull_message","getTheirPublicKey","encryptBox","decryptBox","send_message","receiver_id","env","nodeUrl","contractName","walletUrl","keyPath","HOME","masterAccount","Cookies","require","cookieConfig","getJSON","nearPages"],"mappings":"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","file":"static/js/main.35219a08.chunk.js","sourcesContent":["import React from \"react\";\nimport anon from \"./assets/anon.png\";\nimport Files from \"react-files\";\n\nconst uploadResizeWidth = 96;\nconst uploadResizeHeight = 96;\n\nexport class ProfileApp extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const keys = [\n      \"displayName\",\n      \"profileUrl\",\n      \"bio\",\n    ];\n    this.state = keys.reduce((acc, key) => {\n      acc[key] = \"\";\n      acc.chainValues[key] = null;\n      return acc;\n    }, {\n      keys,\n      chainValues: {},\n      initialized: false,\n    });\n  }\n\n  async init() {\n    console.log(\"init profile\");\n    this.setState({\n      initialized: true,\n    });\n    const values = await Promise.all(this.state.keys.map((key) => this.props.app.get(key)));\n    console.log(values);\n    const chainValues = this.state.keys.reduce((acc, key, i) => {\n      acc[key] = values[i] || \"\";\n      return acc;\n    }, {});\n    this.setState(Object.assign({chainValues}, chainValues));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      this.init();\n    }\n  }\n\n  handleChange(key, value) {\n    console.log(value.length);\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  async save() {\n    console.log(\"Saving\");\n    const chainValues = Object.assign({}, this.state.chainValues);\n    this.state.keys.forEach(key => {\n      if (this.state.chainValues[key] !== this.state[key]) {\n        chainValues[key] = this.state[key];\n        this.props.app.set(key, this.state[key]).then(() => {\n          console.log(\"Updated key `\" + key + \"` to value `\" + this.state[key] + '`');\n        });\n      }\n    });\n    this.setState({\n      chainValues\n    })\n  }\n\n  async onFilesChange(f) {\n    let sourceImage = new Image();\n    let reader = new FileReader();\n\n    reader.readAsDataURL(f[0]);\n\n    sourceImage.onload = () => {\n      // Create a canvas with the desired dimensions\n      let canvas = document.createElement(\"canvas\");\n      const aspect = sourceImage.naturalWidth / sourceImage.naturalHeight;\n      const width = Math.round(uploadResizeWidth * Math.max(1, aspect));\n      const height = Math.round(uploadResizeHeight * Math.max(1, 1 / aspect));\n      canvas.width = uploadResizeWidth;\n      canvas.height = uploadResizeHeight;\n      const ctx = canvas.getContext(\"2d\");\n\n      // Scale and draw the source image to the canvas\n      ctx.imageSmoothingQuality = \"high\";\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, uploadResizeWidth, uploadResizeHeight);\n      ctx.drawImage(sourceImage, (uploadResizeWidth - width) / 2, (uploadResizeHeight - height) / 2, width, height);\n\n      // Convert the canvas to a data URL in PNG format\n      const options = [\n        canvas.toDataURL('image/jpeg', 0.92),\n        canvas.toDataURL('image/webp', 0.92),\n        canvas.toDataURL('image/png')\n      ];\n      options.sort((a, b) => a.length - b.length);\n\n      this.handleChange('profileUrl', options[0]);\n    }\n\n    reader.onload = function(event) {\n      sourceImage.src = event.target.result;\n    };\n  }\n\n  async onFilesError(e, f) {\n    console.log(e, f);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <img className=\"profile-image\" src={this.state.profileUrl || anon}/>\n          <span className=\"letter-expanded-profile\">\n            <span className=\"letter-profile-name\">{this.state.displayName}</span>\n            {this.props.app && <span className=\"letter-account-id\">{\"(@\" + this.props.app.accountId + \")\"}</span>}\n          </span>\n        </div>\n        <hr/>\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"displayName\">Display Name</label>\n            <input placeholder=\"The REAL Satoshi\" id=\"displayName\" className=\"form-control\" disabled={!this.props.app} value={this.state.displayName} onChange={(e) => this.handleChange('displayName', e.target.value)} />\n          </div>\n          <label htmlFor=\"profileUrl\">Profile URL</label>\n          <div className=\"input-group\">\n            <input placeholder={\"https://metanear.com\" + anon} id=\"profileUrl\" className=\"form-control\" disabled={!this.props.app} value={this.state.profileUrl}\n                   onChange={(e) => this.handleChange('profileUrl', e.target.value)}/>\n            <div className=\"input-group-append\">\n              <Files\n                type=\"button\"\n                className='btn btn-outline-primary'\n                onChange={(f) => this.onFilesChange(f)}\n                onError={(e, f) => this.onFilesError(e, f)}\n                multiple={false}\n                accepts={['image/*']}\n                minFileSize={1}\n                clickable\n              >\n                Click to upload\n              </Files>\n            </div>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"bio\">Bio</label>\n            <textarea placeholder=\"I'm working on Bitcoin, so bankers can go home.\" id=\"bio\" className=\"form-control\" disabled={!this.props.app} value={this.state.bio} onChange={(e) => this.handleChange('bio', e.target.value)} />\n          </div>\n          <div className=\"form-group\">\n            <button onClick={() => this.save()}>Save changes</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport anon from \"./assets/anon.png\";\nimport encryptionOn from \"./assets/encryptionOn.png\";\nimport encryptionOff from \"./assets/encryptionOff.png\";\nimport {encryptionKey} from \"./openweb\";\n\nconst RE = \"Re: \";\nconst currentVersion = 2;\n\nexport class MailApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      receiverId: \"\",\n      subject: \"\",\n      content: \"\",\n      sending: false,\n      profileFetchTimeoutId: null,\n      profileFetchIndex: 0,\n      numLetters: 0,\n      unread: 0,\n      expandedId: -1,\n      theirPublicKey64: null,\n      inbox: [],\n    }\n    this.textarea = React.createRef();\n    this.profileCache = {};\n  }\n\n  modifyLetter(letter, messageId) {\n    if (messageId === undefined) {\n      if (!letter) {\n        return;\n      }\n      messageId = letter.messageId;\n    }\n    const inbox = this.state.inbox.filter((a) => a.messageId != messageId);\n    if (letter) {\n      inbox.push(letter);\n    }\n    inbox.sort((a, b) => b.time - a.time);\n    const unread = inbox.reduce((acc, letter) => acc + (letter.read ? 0: 1), 0);\n    this.setState({\n      inbox,\n      unread,\n    });\n    this.props.onNewMail(unread);\n  }\n\n  async migrateFrom(version) {\n    if (version === 0) {\n      console.log(\"Migrating from version #0\");\n      const num = await this.props.app.get('numLetters');\n      const allMigrations = [this.props.app.set('numLetters', num, { encrypted: true })];\n      for (let i = 0; i < num; ++i) {\n        allMigrations.push(this.props.app.get('letter_' + i).then((letter) => {\n          if (letter) {\n            return this.props.app.set('letter_' + i, letter, {encrypted: true}).then(() => {\n              console.log(\"Migrated letter #\" + i);\n            })\n          }\n          return Promise.resolve();\n        }).catch((e) => console.log(\"Can't migrate letter #\", i, e)));\n      }\n      await Promise.all(allMigrations);\n      version++;\n    }\n    if (version === 1) {\n      console.log(\"Migrating from version #1\");\n      await this.props.app.storeEncryptionPublicKey();\n      version++;\n    }\n    await this.props.app.set('version', version, { encrypted: true });\n  }\n\n  async init() {\n    console.log(\"init\");\n    this.setState({\n      initialized: true,\n    });\n    const version = await this.props.app.get('version', { encrypted: true }) || 0;\n    if (version < currentVersion) {\n      await this.migrateFrom(version);\n    }\n    const num = await this.props.app.get('numLetters', { encrypted: true }) || 0;\n    this.setState({\n      numLetters: num,\n    });\n    for (let i = Math.max(0, num - 10); i < num; ++i) {\n      this.props.app.get('letter_' + i, {encrypted: true}).then((letter) => this.modifyLetter(letter));\n    }\n    this.fetchMessages();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      this.init();\n    }\n  }\n\n  async fetchProfile(accountId) {\n    if (accountId in this.profileCache) {\n      return await this.profileCache[accountId];\n    } else {\n      console.log(\"Fetching profile for \" + accountId);\n      this.profileCache[accountId] = Promise.all([\n        this.props.app.getFrom(accountId, 'displayName',  { appId: 'profile' }),\n        this.props.app.getFrom(accountId, 'profileUrl', { appId: 'profile' }),\n        this.props.app.getFrom(accountId, encryptionKey),\n      ]).then((values) => {\n        return {\n          displayName: values[0] || \"\",\n          profileUrl: values[1],\n          theirPublicKey64: values[2],\n        };\n      }).catch((e) => false);\n      return await this.profileCache[accountId];\n    }\n  }\n\n  handleChange(key, value) {\n    const stateChange = {\n      [key]: value,\n    };\n    if (key === 'receiverId') {\n      value = value.toLowerCase().replace(/[^a-z0-9\\-\\_\\.]/, '');\n      stateChange[key] = value;\n      const profileFetchIndex = this.state.profileFetchIndex + 1;\n      stateChange.profileFetchIndex = profileFetchIndex;\n      stateChange.profile = null;\n      if (value) {\n        stateChange.profileLoading = true;\n        this.fetchProfile(value).then((profile) => {\n          if (this.state.profileFetchIndex !== profileFetchIndex) {\n            return;\n          }\n          this.setState({\n            profileLoading: false,\n            profile,\n          });\n        });\n      } else {\n        stateChange.profileLoading = false;\n      }\n    }\n    this.setState(stateChange);\n  }\n\n  async fetchMessages() {\n    if (!this.props.app) {\n      return;\n    }\n    if (this.fetchTimeoutId) {\n      clearTimeout(this.fetchTimeoutId);\n      this.fetchTimeoutId = null;\n    }\n    console.log(\"Fetching messages\");\n    const message = await this.props.app.pullMessage();\n    if (!message) {\n      this.fetchTimeoutId = setTimeout(() => { this.fetchMessages() }, 60 * 1000);\n      return;\n    }\n    try {\n      console.log(message);\n      let inner = JSON.parse(message.message);\n      const isEncrypted = inner.type === 'encrypted';\n      const fromAppId = inner.fromAppId || this.props.app.appId;\n      if (isEncrypted) {\n        const decryptedMessage = await this.props.app.decryptMessage(inner.content, {\n          accountId: message.sender,\n          appId: inner.fromAppId,\n        });\n        inner = JSON.parse(decryptedMessage);\n      }\n      if (inner.type === 'mail') {\n        const letter = {\n          messageId: this.state.numLetters,\n          isEncrypted,\n          fromAppId,\n          sender: message.sender,\n          subject: inner.subject,\n          content: inner.content,\n          time: Math.trunc(message.time / 1000000),\n        }\n        const newNumLetters = this.state.numLetters + 1;\n        this.setState({\n          numLetters: newNumLetters,\n        });\n\n        this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n          console.log(\"Saved the letter: \", letter);\n        });\n        this.props.app.set(\"numLetters\", newNumLetters, {encrypted: true}).then(() => {\n            console.log(\"Saved the new number of letters: \", newNumLetters);\n        });\n        this.modifyLetter(letter);\n      } else {\n        console.warn(\"Unknown message\", message);\n      }\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.fetchMessages()\n    }\n  }\n\n  async sendMail() {\n    if (!this.state.profile) {\n      return;\n    }\n    console.log(\"Sending mail\");\n    this.setState({\n      sending: true,\n    });\n    try {\n      let message = JSON.stringify({\n        type: \"mail\",\n        subject: this.state.subject,\n        content: this.state.content,\n      });\n      if (this.state.profile.theirPublicKey64) {\n        const content = await this.props.app.encryptMessage(message, {\n          theirPublicKey64: this.state.profile.theirPublicKey64,\n        });\n        message = JSON.stringify({\n          type: \"encrypted\",\n          fromAppId: this.props.app.appId,\n          content,\n        })\n      }\n      await this.props.app.sendMessage(this.state.receiverId, message);\n      this.setState({\n        subject: \"\",\n        content: \"\",\n      })\n    } catch (e) {\n      console.log(\"Failed to send the message\", e);\n    } finally {\n      this.setState({\n        sending: false,\n      });\n      this.fetchMessages();\n    };\n  }\n\n  receiverClass() {\n    if (!this.state.receiverId || this.state.profileLoading) {\n      return \"form-control\";\n    } else if (this.state.profile) {\n      return \"form-control is-valid\";\n    } else {\n      return \"form-control is-invalid\";\n    }\n  }\n\n  replyTo(letter, displayName) {\n    this.handleChange(\"receiverId\", letter.sender);\n    this.setState({\n      subject: (letter.subject.startsWith(RE) ? \"\" : RE) + letter.subject,\n      content: [\n        \"\",\n        \"\",\n        [\"On\", new Date(letter.time).toLocaleDateString(), displayName, \"@\" + letter.sender, \"wrote:\"].join(' '),\n        ...letter.content.split(/\\r?\\n/).map(s => \"| \" + s)\n      ].join(\"\\n\"),\n    }, () => {\n      this.textarea.current.focus();\n      this.textarea.current.setSelectionRange(0, 0);\n      this.textarea.current.scrollLeft = 0;\n      this.textarea.current.scrollTop = 0;\n    });\n  }\n\n  selectLetter(letter) {\n    this.setState({\n      expandedId: (this.state.expandedId === letter.messageId) ? -1 : letter.messageId,\n    });\n    if (!letter.read) {\n      letter = JSON.parse(JSON.stringify(letter));\n      letter.read = true;\n      this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n        console.log(\"Saved the letter: \", letter);\n      });\n      this.modifyLetter(letter);\n    }\n  }\n\n  deleteLetter(letter) {\n    this.props.app.remove(\"letter_\" + letter.messageId).then(() => {\n      console.log(\"Deleted the letter: \", letter);\n    });\n    this.modifyLetter(null, letter.messageId);\n  }\n\n  render() {\n    const encryptionEnabled = this.state.profile && this.state.profile.theirPublicKey64;\n    const encryptionIcon = this.state.profile &&\n      <img className=\"encryption-icon\" src={encryptionEnabled ? encryptionOn : encryptionOff}\n          title={encryptionEnabled ? \"Encryption is ON\" : \"Not secure! Encryption is OFF\"}/>;\n    const profile = this.state.profileLoading ? (\n      <div className=\"col\">\n        <div className=\"spinner-grow\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    ) : this.state.profile ? (\n      <div className=\"col\">\n        <img className=\"profile-image\" src={this.state.profile.profileUrl || anon}/>\n        <span className=\"profile-name\">{this.state.profile.displayName}</span>\n      </div>\n    ) : null;\n    const inbox = true || this.props.app ?\n      this.state.inbox.map((letter, i) => <Letter\n          key={letter.messageId}\n          fetchProfile={(a) => this.fetchProfile(a)}\n          letter={letter}\n          expanded={letter.messageId == this.state.expandedId}\n          deleteLetter={(letter) => this.deleteLetter(letter)}\n          replyTo={(letter, displayName) => this.replyTo(letter, displayName)}\n          selectLetter={(letter) => this.selectLetter(letter)}/>) :\n      null;\n    return (\n      <div>\n        Inbox <button className=\"btn btn-sm\" onClick={() => this.fetchMessages()}>🔄</button>\n        <div>\n          {inbox}\n        </div>\n        <h3>Send</h3>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label className=\"sr-only\" htmlFor=\"toAccountId\">To Account ID</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">@</div>\n                </div>\n                <input type=\"text\" className={this.receiverClass()} id=\"toAccountId\" placeholder=\"To Account ID\" value={this.state.receiverId} disabled={!this.props.app} onChange={(e) => this.handleChange('receiverId', e.target.value)} />\n              </div>\n            </div>\n          </div>\n          {profile}\n        </div>\n        <div className=\"form-group\">\n          <label className=\"sr-only\" htmlFor=\"subject\">Subject</label>\n          <input type=\"text\" className=\"form-control\" id=\"subject\" placeholder=\"Subject\" disabled={!this.props.app} value={this.state.subject} onChange={(e) => this.handleChange('subject', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <textarea ref={this.textarea} id=\"content\" className=\"form-control\" rows=\"7\" disabled={!this.props.app} value={this.state.content} onChange={(e) => this.handleChange('content', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <button className={\"form-control form-control-lg btn \" + (this.state.profile && !encryptionEnabled ? \"btn-danger\" : \"btn-primary\")} disabled={!this.state.profile || this.state.sending} onClick={() => this.sendMail()}>\n            Send {encryptionIcon}</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport class Letter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: {\n        profileUrl: null,\n        displayName: '@' + props.letter.sender,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchProfile(this.props.letter.sender).then((profile) => {\n      this.setState({\n        profile,\n      })\n    });\n  }\n\n  onClick() {\n    this.props.selectLetter(this.props.letter);\n  }\n\n  render() {\n    const profileName = (\n      <span className=\"letter-expanded-profile\">\n        <span className=\"letter-profile-name\">{this.state.profile.displayName}</span>\n        <span className=\"letter-account-id\">{\"(@\" + this.props.letter.sender + \")\"}</span>\n      </span>\n    )\n    const profile = (\n      <div className=\"col-sm-6 col-md-4 col-lg-4 letter-profile\">\n        <img className=\"letter-profile-image\" src={this.state.profile.profileUrl || anon}/>\n        {profileName}\n      </div>\n    );\n    const subject = (\n      <div className=\"col-sm-4 col-md\">\n        <div className=\"letter-subject\">{this.props.letter.subject}</div>\n      </div>\n    );\n    const time = this.props.expanded ? (\n      <div className=\"col-sm-2 col-lg-2\">\n        <div className=\"letter-time\">{longTimeFormat(this.props.letter.time)}</div>\n      </div>\n    ) : (\n      <div className=\"col-sm-2 col-lg-1 d-none d-md-block\">\n        <div className=\"letter-time\">{timeFormat(this.props.letter.time)}</div>\n      </div>\n    );\n    if (this.props.expanded) {\n      return (\n        <div className=\"letter letter-expanded\">\n          <div className=\"row letter-expanded-header\" onClick={() => this.onClick()}>\n            {profile}\n            {subject}\n            {time}\n          </div>\n          <div className=\"letter-content-expanded\">\n            <pre>{this.props.letter.content}</pre>\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <button className=\"btn btn-primary\" onClick={() => this.props.replyTo(this.props.letter, this.state.profile.displayName)}>Reply</button>\n              </div>\n              <div className=\"col-sm\">\n                <button className=\"btn btn-danger float-right\" onClick={() => this.props.deleteLetter(this.props.letter)}>DELETE THIS!</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={\"row letter letter-small\" + (this.props.letter.read ? \" letter-read\" : \" letter-unread\")} onClick={() => this.onClick()}>\n          {profile}\n          {subject}\n          <div className=\"col-sm d-none d-lg-block\">\n            <div className=\"letter-content\">{this.props.letter.content}</div>\n          </div>\n          {time}\n        </div>\n      );\n    }\n  }\n}\n\nfunction longTimeFormat(t) {\n  return new Date(t).toLocaleString();\n}\n\nfunction timeFormat(t) {\n  const d = new Date(t);\n  const now = new Date();\n  if (now.getDate() === d.getDate()) {\n    const hour = d.getHours() % 12;\n    const minute = d.getMinutes().toString().padStart(2, '0');\n    const daytime = d.getHours() >= 12 ? \"PM\" : \"AM\";\n    return `${hour}:${minute} ${daytime}`;\n  } else {\n    return d.toLocaleDateString();\n  }\n}\n","import React, { Component } from 'react';\nimport nearlogo from './assets/gray_near_logo.svg';\nimport './App.css';\nimport * as nearlib from \"nearlib\";\nimport { OpenWebApp } from './openweb.js';\nimport { ProfileApp } from \"./ProfileApp\";\nimport { MailApp } from \"./MailApp\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nconst GAS = 2_000_000_000_000_000;\nconst TITLE = \"Open Web Home - NEAR\"\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: false,\n      apps: {},\n      logs: [],\n      unread: 0,\n      loading: false,\n    }\n    this.signedInFlow = this.signedInFlow.bind(this);\n    this.requestSignIn = this.requestSignIn.bind(this);\n    this.requestSignOut = this.requestSignOut.bind(this);\n    this.signedOutFlow = this.signedOutFlow.bind(this);\n    this.checkSignIn = this.checkSignIn.bind(this);\n    this.initOpenWebApp = this.initOpenWebApp.bind(this);\n    window.nearlib = nearlib;\n  }\n\n  componentDidMount() {\n    this.checkSignIn();\n  }\n\n  async checkSignIn() {\n    let loggedIn = window.walletAccount.isSignedIn();\n    if (loggedIn) {\n      await this.signedInFlow();\n    } else {\n      this.signedOutFlow();\n    }\n  }\n\n  log(message) {\n    console.log(message);\n    this.setState({\n      logs: this.state.logs.concat([message])\n    })\n  }\n\n  async signedInFlow() {\n    console.log(\"come in sign in flow\")\n    const accountId = await this.props.wallet.getAccountId()\n    this.setState({\n      login: true,\n      loading: true,\n      accountId,\n    })\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    if (window.location.search.includes(\"all_keys\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    // Initializing our contract APIs by contract name and configuration.\n\n    this.log(\"Connecting to account...\");\n    const account = await new nearlib.Account(window.near.connection, accountId);\n    this.log(\"Querying state...\");\n    let state = await account.state();\n    /*\n    await new Promise((resolve, reject) =>{\n      setTimeout(() => {\n        resolve();\n      }, 5000);\n    })\n     */\n    console.log(state);\n    if (state.code_hash !== 'C8UmYSqATkuyhheJ7i7ryxPjfZL4nV8PfkovdMKitsmJ') {\n      this.log(\"Going to deploy the code\");\n      // no code. Need to deploy.\n      this.log(\"Downloading started...\");\n      let data = await fetch('/open_web.wasm');\n      let buf = await data.arrayBuffer();\n      this.log(\"Downloading done. Deploying contract...\");\n      await account.deployContract(new Uint8Array(buf));\n      if (state.code_hash === '11111111111111111111111111111111') {\n        this.log(\"Deploying done. Initializing contract...\");\n        // Gotta init it.\n        let contract = await new nearlib.Contract(account, accountId, {\n          viewMethods: [],\n          // Change methods can modify the state. But you don't receive the returned value when called.\n          changeMethods: ['new'],\n          // Sender is the account ID to initialize transactions.\n          sender: accountId\n        });\n        console.log(await contract.new());\n      }\n      this.log(\"The contract is deployed\");\n    }\n\n    const masterContract = await new nearlib.Contract(account, accountId, {\n      // View methods are read only. They don't modify the state, but usually return some value.\n      viewMethods: ['apps'],\n      // Change methods can modify the state. But you don't receive the returned value when called.\n      changeMethods: ['add_app_key', 'remove_app_key'],\n      // Sender is the account ID to initialize transactions.\n      sender: accountId\n    });\n\n    this.masterContract = masterContract;\n    window.masterContract = masterContract;\n    this.log(\"Fetching authorized apps...\");\n    console.log(\"Apps:\", await masterContract.apps());\n\n    // this.initOpenWebApp = this.initOpenWebApp.bind(this);\n    \n    this.log(\"Initializing local apps...\");\n    const apps = {\n      profile: await this.initOpenWebApp('profile', accountId),\n      graph: await this.initOpenWebApp('graph', accountId),\n      mail: await this.initOpenWebApp('mail', accountId)\n    };\n    window.apps = apps;\n    this.apps = apps;\n    this.setState({\n      apps,\n      loading: false,\n    })\n    console.log(apps);\n  }\n\n  async initOpenWebApp(appId, accountId) {\n    this.log(\"Initializing app: \" + appId + \" ...\");\n    const app = await new OpenWebApp(appId, accountId, window.nearConfig);\n    await app.init();\n    if (!await app.ready()) {\n      let pk = await app.getAccessPublicKey();\n      this.log(\"Authorizing app for key \" + pk.toString() + \" ...\");\n      const args = {\n        public_key: [...nearlib.utils.serialize.serialize(nearlib.transactions.SCHEMA, pk)],\n        app_id: appId,\n      };\n      await this.masterContract.add_app_key(args, GAS);\n      await app.onKeyAdded();\n    }\n    this.log(\"Done\");\n    return app;\n  }\n\n  async requestSignIn() {\n    const appTitle = 'Open Web Home';\n    await this.props.wallet.requestSignIn(\n      \"\",\n      appTitle\n    )\n  }\n\n  requestSignOut = () => {\n    this.props.wallet.signOut();\n    setTimeout(this.signedOutFlow, 500);\n    console.log(\"after sign out\", this.props.wallet.isSignedIn())\n  }\n\n\n  signedOutFlow = () => {\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    this.setState({\n      login: false,\n    })\n  }\n\n  render() {\n    document.title = (this.state.unread ? `(${this.state.unread}) ` : \"\") + TITLE;\n    return (\n      <div className=\"App-header\">\n        <div className=\"image-wrapper\">\n          <img className=\"logo\" src={nearlogo} alt=\"NEAR logo\" />\n        </div>\n        <h1>Hello{this.state.login ? \", \" + this.state.accountId : \"?\"}</h1>\n        <div>\n          {this.state.login ? <button onClick={this.requestSignOut}>Log out</button>\n            : <button onClick={this.requestSignIn}>Log in with NEAR</button>}\n        </div>\n        <br/>\n        {this.state.loading && (\n          <div className=\"loading-div\">\n            <div className=\"spinner-grow loading-spinner\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n            <pre className=\"text-left\">\n              {this.state.logs.join(\"\\n\")}\n            </pre>\n          </div>\n        )}\n        {this.state.login && (\n          <div className={\"apps\" + (this.state.loading ? \" d-none\" : \"\")}>\n            <Tabs forceRenderTabPanel={true}>\n              <TabList>\n                <Tab>Profile</Tab>\n                <Tab>Mail {this.state.unread ? `(${this.state.unread})` : \"\"}</Tab>\n              </TabList>\n\n              <TabPanel>\n                <ProfileApp app={this.state.apps.profile}/>\n              </TabPanel>\n              <TabPanel>\n                <MailApp app={this.state.apps.mail} onNewMail={(unread) => this.setState({unread})}/>\n              </TabPanel>\n            </Tabs>\n          </div>\n        )}\n      </div>\n    )\n  }\n\n}\n","import React from \"react\";\nimport queryString from 'query-string';\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    const values = queryString.parse(this.props.location.search);\n    let {app_id, pub_key} = values;\n    if (app_id && pub_key) {\n      this.state = {\n        authorized:false,\n        new_app_id:app_id,\n        new_pub_key:pub_key\n      };\n    } else {\n      this.state = {\n        authorized:false,\n        new_app_id:\"\",\n        new_pub_key:\"\"\n      }\n    }\n  }\n\n componentDidMount() {\n    if (!this.props.loading && this.state.new_app_id && this.state.new_pub_key) {\n      this.props.initOpenWebApp(this.state.new_app_id, this.state.new_pub_key)\n        .then(res => {\n          this.setState({\n            authorized: true\n          })\n        });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      // this.init();\n    }\n  }\n  \n  // async fetchProfile(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  // async registerNewApp(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  render() {\n    return (\n      <div>\n        {this.state.authorized ? \n        <div>\n          <p>App <strong>{this.state.new_app_id}</strong> was added</p>\n          <p> Using the public key: {this.state.new_pub_key} </p>\n        </div> :\n        \"You need pass a key in order to add an app\"\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport { Home } from './Home';\nimport { Auth } from './Auth';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename={process.env.PUBLIC_URL} hashType=\"noslash\">\n        <Switch>\n          <Route exact path=\"/\" component={() => <Home {...this.props}/>} />\n          <Route path=\"/auth\" component={() => <Auth {...this.props}/>} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport getConfig from './config.js';\nimport * as nearlib from 'nearlib';\n\n// Initializing contract\nasync function InitContract() {\n    window.nearConfig = getConfig('development')\n    console.log(\"nearConfig\", window.nearConfig);\n\n    // Initializing connection to the NEAR DevNet.\n    window.near = await nearlib.connect(Object.assign({ deps: { keyStore: new nearlib.keyStores.BrowserLocalStorageKeyStore() } }, window.nearConfig));\n    \n    // Needed to access wallet login\n    window.walletAccount = new nearlib.WalletAccount(window.near);\n    \n    // Getting the Account ID. If unauthorized yet, it's just empty string.\n    window.accountId = window.walletAccount.getAccountId();\n\n}\n\nwindow.nearInitPromise = InitContract().then(() => {\n    ReactDOM.render(<App contract={window.contract} wallet={window.walletAccount}/>,\n      document.getElementById('root')\n    );\n  }).catch(console.error)","module.exports = __webpack_public_path__ + \"static/media/anon.5cbbd243.png\";","import * as nearlib from \"nearlib\";\nimport * as nacl from \"tweetnacl\";\n\nconst GAS = 2_000_000_000_000_000;\n\nexport const encryptionKey = \"encryptionKey\";\n\n/**\n  a class representing the OpenWebApp API\n\n  this API supports local contract methods\n  - get: gets a value from local storage\n  - set: sets a value on local storage\n  - remove: deletes a value from local storage\n\n  and remote contract methods\n  - pull: reads a message from a remote contract\n  - post / send: sends a message to a remote contract\n */\nexport class OpenWebApp {\n  constructor(appId, accountId, config) {\n    this.appId = appId;\n    this.accountId = accountId;\n    this._config = config;\n    this.blocking = Promise.resolve();\n    this.parseEncryptionKey();\n    window.nacl = nacl;\n    window.Buffer = Buffer;\n  }\n\n  /**\n    read private key from local storage\n    - if found, recreate the related key pair\n    - if not found, create a new key pair and save it to local storage\n   */\n  parseEncryptionKey() {\n    const keyKey = \"enc_key:\" + this.accountId + \":\" + this.appId + \":\";\n    let key = localStorage.getItem(keyKey);\n    if (key) {\n      key = nacl.box.keyPair.fromSecretKey(Buffer.from(key, 'base64'));\n    } else {\n      key = new nacl.box.keyPair();\n      localStorage.setItem(keyKey, Buffer.from(key.secretKey).toString('base64'));\n    }\n    this._key = key;\n  }\n\n  /**\n    initialize the client-side application with a BrowserLocalStorageKeyStore\n    and a connection to the NEAR platform, binding OpenWebContract methods:\n\n    - get, set, remove: local invocation methods for controlling the state of local applications\n    - pull_message, send_message: remote invocation methods for communicating with contracts of other users\n    - apps, num_messages: convenience methods for listing all apps on the OpenWeb and messages for a specific app\n   */\n  async init() {\n    this._keyStore = new nearlib.keyStores.BrowserLocalStorageKeyStore(\n      localStorage, \"app:\" + this.appId,\n    );\n    this._near = await nearlib.connect(Object.assign({ deps: { keyStore:  this._keyStore } }, this._config));\n    this._account = new nearlib.Account(this._near.connection, this.accountId);\n    this._contract = new nearlib.Contract(this._account, this.accountId, {\n      viewMethods: ['get', 'apps', 'num_messages'],\n      changeMethods: ['set', 'remove', 'pull_message', 'send_message'],\n      sender: this.accountId\n    });\n    this._networkId = this._config.networkId;\n  }\n\n  /**\n    helper method to check if the user is logged in with the app\n   */\n  async ready() {\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    return !!key;\n  }\n\n  /**\n    produce a public key on the user account\n    @return {string} existing (or create new) public key for the current account\n   */\n  async getAccessPublicKey() {\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    if (key) {\n      return key.getPublicKey();\n    }\n    if (this._tmpKey) {\n      return this._tmpKey.getPublicKey();\n    }\n    const accessKey = nearlib.KeyPair.fromRandom('ed25519');\n    this._tmpKey = accessKey;\n    return accessKey.getPublicKey();\n  }\n\n  getEncryptionPublicKey() {\n    return Buffer.from(this._key.publicKey).toString('base64')\n  }\n\n  async storeEncryptionPublicKey() {\n    return this.set(encryptionKey, this.getEncryptionPublicKey());\n  }\n\n  /**\n    capture new keys in the keystore\n   */\n  async onKeyAdded() {\n    if (!this._tmpKey) {\n      throw new Error('The key is not initialized yet');\n    }\n    await this._keyStore.setKey(this._networkId, this.accountId, this._tmpKey);\n    this._tmpKey = null;\n  }\n\n  /**\n   * enforces that the app is ready\n   * @returns {Promise<void>}\n   */\n  async forceReady() {\n    if (!await this.ready()) {\n      throw new Error('Not ready yet');\n    }\n  }\n\n  /**\n    wrap a call in a Promise for async handling?\n\n    @param {Function} call the function to be wrapped in a Promise\n    @return {Promise} the Promise to return\n   */\n  wrappedCall(call) {\n    this.blocking = this.blocking.then(() => call()).catch(() => call());\n    return this.blocking;\n  }\n\n  /**\n    unbox encrypted messages with our secret key\n    @param {string} msg64 encrypted message encoded as Base64\n    @return {string} decoded contents of the box\n   */\n  decryptSecretBox(msg64) {\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.secretbox.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.secretbox.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.secretbox.open(box, nonce, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n    box an unencrypted message with our secret key\n    @param {string} str the message to wrap in a box\n    @return {string} base64 encoded box of incoming message\n   */\n  encryptSecretBox(str) {\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.secretbox.nonceLength);\n    const box = nacl.secretbox(buf, nonce, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.secretbox.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.secretbox.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n   unbox encrypted messages with our secret key\n   @param {string} msg64 encrypted message encoded as Base64\n   @param {Uint8Array} theirPublicKey the public key to use to verify the message\n   @return {string} decoded contents of the box\n   */\n  decryptBox(msg64, theirPublicKey) {\n    if (theirPublicKey.length != nacl.box.publicKeyLength) {\n      throw new Error(\"Given encryption public key is invalid.\");\n    }\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.box.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.box.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.box.open(box, nonce, theirPublicKey, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n   box an unencrypted message with their public key and sign it with our secret key\n   @param {string} str the message to wrap in a box\n   @param {Uint8Array} theirPublicKey the public key to use to encrypt the message\n   @returns {string} base64 encoded box of incoming message\n   */\n  encryptBox(str, theirPublicKey) {\n    if (theirPublicKey.length != nacl.box.publicKeyLength) {\n      throw new Error(\"Given encryption public key is invalid.\");\n    }\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.box.nonceLength);\n    const box = nacl.box(buf, nonce, theirPublicKey, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.box.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.box.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n    get data from a local app.  apps can decide whether or not to encrypt their contents\n\n    @param {string} key the key used to store a value in the app\n    @param {object} options to specify:\n    - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n    - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned by the local app\n   */\n  async get(key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    let str = await this._contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    get a value from a remote app installed on another account\n\n    @param {string} accountId account from which to get a value\n    @param {string} key the key to use to identify the value\n    @param {object} options to specify:\n     - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n     - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned from the remote app\n   */\n  async getFrom(accountId, key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    const account = new nearlib.Account(this._near.connection, accountId);\n    const contract = new nearlib.Contract(account, accountId, {\n      viewMethods: ['get'],\n      changeMethods: [],\n      sender: this.accountId\n    });\n\n    let str = await contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    return a list of installed apps\n    @return {object} collection of installed apps\n   */\n  async apps() {\n    return await this._contract.apps();\n  }\n\n  /**\n    set a value in local storage\n\n    @param {string} key identifier for the value to be set\n    @param {string} value the value to be set\n    @param {object} options to specify:\n      - {bool} `encrypted` flag indicating whether to encrypt (box) the value. Default false.\n   */\n  async set(key, value, options) {\n    await this.forceReady();\n    options = Object.assign({\n      encrypted: false,\n    }, options);\n    await this.wrappedCall(() => this._contract.set({\n      key,\n      value: options.encrypted ? this.encryptSecretBox(JSON.stringify(value)) : JSON.stringify(value),\n    }, GAS));\n  }\n\n  /**\n    remove a key-value pair from local storage\n\n    @param {string} key key to be removed\n   */\n  async remove(key) {\n    await this.forceReady();\n    await this.wrappedCall(() => this._contract.remove({\n      key,\n    }, GAS));\n  }\n\n  /**\n    retrieve a message\n\n    @return {any} return async? pull from local storage, null if not found\n   */\n  async pullMessage(options) {\n    await this.forceReady();\n    if (await this._contract.num_messages({app_id: this.appId}) > 0) {\n      return await this.wrappedCall(() => this._contract.pull_message({}, GAS));\n    } else {\n      return null;\n    }\n  }\n\n  async getTheirPublicKey(options) {\n    await this.forceReady();\n    options = Object.assign({\n      accountId: null,\n      theirPublicKey: null,\n      theirPublicKey64: null,\n      encryptionKey,\n      appId: this.appId,\n    }, options);\n    if (options.theirPublicKey) {\n      return options.theirPublicKey;\n    }\n    if (!options.theirPublicKey64) {\n      if (!options.accountId) {\n        throw new Error(\"Either accountId or theirPublicKey64 has to be provided\");\n      }\n      options.theirPublicKey64 = await this.getFrom(options.accountId, options.encryptionKey, {\n        appId: options.appId,\n      });\n    }\n    if (!options.theirPublicKey64) {\n      throw new Error(\"Their app doesn't provide the encryption public key.\");\n    }\n    const buf = Buffer.from(options.theirPublicKey64, 'base64');\n    if (buf.length != nacl.box.publicKeyLength) {\n      throw new Error(\"Their encryption public key is invalid.\");\n    }\n    const theirPublicKey = new Uint8Array(nacl.box.publicKeyLength);\n    theirPublicKey.set(buf);\n    return theirPublicKey;\n  }\n\n  /**\n   * Encrypts given content. Typical usage: encryptMessage(\"hello world\", {accountId: bla})\n   *\n   * @param {string} content The message to encrypt\n   * @param options\n   * @returns {Promise<string>}\n   */\n  async encryptMessage(content, options) {\n    await this.forceReady();\n    const theirPublicKey = await this.getTheirPublicKey(options);\n    return this.encryptBox(content, theirPublicKey);\n  }\n\n  async decryptMessage(msg64, options) {\n    await this.forceReady();\n    const theirPublicKey = await this.getTheirPublicKey(options);\n    return this.decryptBox(msg64, theirPublicKey);\n  }\n\n  /**\n    send a message to another account\n\n    @param {string} receiverId account id which will receive the message\n    @param {string} message the content of the message\n    @param {object} options to specify:\n      - {string} `appId` the app ID to receive the message. Same app by default.\n   */\n  async sendMessage(receiverId, message, options) {\n    this.forceReady();\n    options = Object.assign({\n      appId: this.appId,\n    }, options);\n    await this.wrappedCall(() => this._contract.send_message({\n      receiver_id: receiverId,\n      app_id: options.appId,\n      message,\n    }, GAS));\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/gray_near_logo.55517b93.svg\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOn.23e3b306.png\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOff.475ce496.png\";","(function() {\n    const CONTRACT_NAME = 'react-template'; /* TODO: fill this in!*/\n    const DEFAULT_ENV = 'development'; \n    \n    function getConfig(env) {\n        switch (env) {\n\n        case 'production':\n        case 'development':\n            return {\n                networkId: 'default',\n                nodeUrl: 'https://rpc.nearprotocol.com',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://wallet.nearprotocol.com',\n            };\n        case 'staging':\n            return {\n                networkId: 'staging',\n                nodeUrl: 'https://staging-rpc.nearprotocol.com/',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://near-wallet-staging.onrender.com',\n            };\n        case 'local':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                keyPath: `${process.env.HOME}/.near/validator_key.json`,\n                walletUrl: 'http://localhost:4000/wallet',\n                contractName: CONTRACT_NAME,\n            };\n        case 'test':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'test-remote':\n        case 'ci':\n            return {\n                networkId: 'shared-test',\n                nodeUrl: 'http://shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'ci-staging':\n            return {\n                networkId: 'shared-test-staging',\n                nodeUrl: 'http://staging-shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        default:\n            throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n        }\n    }\n    \n    let Cookies = require('js-cookie');\n    const cookieConfig = typeof Cookies != 'undefined' && Cookies.getJSON('fiddleConfig');\n    if (typeof module !== 'undefined' && module.exports) {\n        console.log(\"module works\")\n        module.exports = getConfig;\n    } else {\n        console.log(\"Cookie works\")\n        window.nearConfig =  cookieConfig && cookieConfig.nearPages ? cookieConfig : getConfig(DEFAULT_ENV);\n    }\n})();\n"],"sourceRoot":""}