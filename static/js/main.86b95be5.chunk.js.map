{"version":3,"sources":["assets/gray_near_logo.svg","../../../near-openweb-js/src/openweb.js","assets/encryptionOn.png","assets/encryptionOff.png","near/config.js","../../react-near-openweb/dist-modules/Profile.js","apps/ProfileApp.js","apps/MailApp.js","components/PowFaucet.js","Home.js","Auth.js","Router.js","index.js","assets/anon.png","../../react-near-openweb/dist-modules/index.js"],"names":["module","exports","OpenWebApp","appId","accountId","nearConfig","this","_nearConfig","blocking","Promise","resolve","parseEncryptionKey","window","nacl","Buffer","keyKey","key","localStorage","getItem","buf","from","length","secretKeyLength","Error","keyPair","fromSecretKey","setItem","secretKey","toString","_key","newSecretKey64","_keyStore","nearlib","BrowserLocalStorageKeyStore","Object","assign","deps","keyStore","_near","_account","connection","_contract","viewMethods","changeMethods","sender","_networkId","networkId","_init","_innerInit","init","getKey","ready","_ready","_keyAwait","getPublicKey","_tmpKey","accessKey","fromRandom","serialize","SCHEMA","getAccessPublicKey","options","getFrom","publicKey","set","getEncryptionPublicKey","setKey","call","then","catch","msg64","nonce","Uint8Array","nonceLength","copy","box","decodedBuf","open","str","fullBuf","theirPublicKey","publicKeyLength","encrypted","get","app_id","JSON","parse","decryptSecretBox","account","contract","apps","value","forceReady","wrappedCall","encryptSecretBox","stringify","remove","num_messages","pull_message","theirPublicKey64","encryptionKey","content","getTheirPublicKey","encryptBox","decryptBox","receiverId","message","send_message","receiver_id","getConfig","env","nodeUrl","contractName","walletUrl","keyPath","process","HOME","masterAccount","Cookies","require","cookieConfig","getJSON","nearPages","defineProperty","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","prototype","_react2","_interopRequireDefault","_nearOpenwebJs","_propTypes2","obj","__esModule","default","propTypes","string","isRequired","defaultProfileUrl","displayName","profileUrl","bio","onFetch","func","forceShow","bool","Profile","_React$Component","instance","TypeError","_classCallCheck","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","state","loading","found","profileComponentCache","profileCache","app","subClass","superClass","create","constructor","setPrototypeOf","_inherits","_this2","updateProfile","fn","_ref","mark","_callee","wrap","_context","prev","next","abrupt","sent","console","log","all","values","e","stop","gen","apply","arguments","reject","step","arg","info","error","done","err","_x","_this3","setState","fetchProfile","profile","prevProps","_this4","styles","createElement","style","className","role","title","type","srcSet","profileImage","src","alt","profileName","profileDisplayName","profileAccountId","Component","defaultProps","whiteSpace","display","height","width","borderRadius","verticalAlign","overflowY","marginLeft","color","ProfileApp","keys","reduce","acc","chainValues","initialized","saving","hasChanges","appReady","newState","waitReady","maybeInit","some","promises","forEach","push","f","sourceImage","Image","reader","FileReader","readAsDataURL","onload","canvas","document","aspect","naturalWidth","naturalHeight","Math","round","max","ctx","getContext","imageSmoothingQuality","fillStyle","fillRect","drawImage","toDataURL","sort","a","b","handleChange","event","result","onClick","logOut","anon","htmlFor","placeholder","id","disabled","onChange","onFilesChange","onError","onFilesError","multiple","accepts","minFileSize","clickable","save","aria-hidden","React","MailApp","subject","sending","numLetters","unread","expandedId","profileFound","profileLoading","keyLoading","inbox","textarea","createRef","keyCache","letter","messageId","undefined","filter","time","read","onNewMail","version","num","allMigrations","storeEncryptionPublicKey","migrateFrom","modifyLetter","fetchMessages","getStoredEncryptionPublicKey","fetchKey","stateChange","toLowerCase","replace","fetchTimeoutId","clearTimeout","pullMessage","setTimeout","inner","isEncrypted","fromAppId","decryptMessage","decryptedMessage","trunc","newNumLetters","warn","encryptMessage","sendMessage","startsWith","Date","toLocaleDateString","join","split","map","s","current","focus","setSelectionRange","scrollLeft","scrollTop","encryptionEnabled","displayEncryptionIcon","encryptionAlt","encryptionIcon","encryptionOn","encryptionOff","updateKey","expanded","deleteLetter","replyTo","selectLetter","aria-label","receiverClass","ref","rows","sendMail","Letter","t","toLocaleString","d","getDate","hour","getHours","minute","getMinutes","padStart","daytime","timeFormat","ValidAccountRe","AuthDataKey","PowFaucet","connected","signedIn","newAccountId","creating","accountLoading","newAccountExists","computingProofOfWork","mounted","initNear","_authData","fromString","_faucetContract","get_account_suffix","_accountSuffix","get_min_difficulty","_minDifficulty","get_num_created_accounts","numCreatedAccounts","near","initFaucet","isValidAccount","provider","query","_a","includes","match","msg","TextEncoder","encode","data","charCodeAt","len","bestDifficulty","salt","crypto","subtle","digest","hashBuffer","totalNumZeros","numZeros","clz32","proofOfWorkProgress","proofOfWorkDifficulty","proofOfWorkSalt","seed","generateSeedPhrase","newKeyPair","computeProofOfWork","create_account","account_id","public_key","onLogin","location","seedPhrase","removeItem","moveAccountToWallet","logout","newAccountClass","createAccount","aria-valuenow","aria-valuemin","aria-valuemax","Home","requestSignOut","wallet","signOut","signedOutFlow","isSignedIn","search","origin","pathname","login","selectTab","index","defaultTabIndex","logs","signedInFlow","bind","requestSignIn","checkSignIn","initOpenWebApp","loggedIn","walletAccount","authData","concat","getAccountId","code_hash","fetch","arrayBuffer","deployContract","new","masterContract","mail","pk","getSerializedAccessPublicKey","serializedPk","args","add_app_key","onKeyAdded","forceRenderTabPanel","defaultIndex","onSelect","nearlogo","Auth","queryString","pub_key","authorized","new_app_id","new_pub_key","res","Router","basename","hashType","exact","path","component","nearInitPromise","InitContract","ReactDOM","render","getElementById","_Profile","_Profile2"],"mappings":"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","file":"static/js/main.86b95be5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gray_near_logo.55517b93.svg\";","import * as nearlib from \"nearlib\";\nimport * as nacl from \"tweetnacl\";\n\nconst GAS = 2000000000000000;\n\nconst encryptionKey = \"encryptionKey\";\n\n/**\n  a class representing the OpenWebApp API\n\n  this API supports local contract methods\n  - get: gets a value from local storage\n  - set: sets a value on local storage\n  - remove: deletes a value from local storage\n\n  and remote contract methods\n  - pull: reads a message from a remote contract\n  - post / send: sends a message to a remote contract\n */\nclass OpenWebApp {\n  constructor(appId, accountId, nearConfig) {\n    this.appId = appId;\n    this.accountId = accountId;\n    this._nearConfig = nearConfig;\n    this.blocking = Promise.resolve();\n    this.parseEncryptionKey();\n    window.nacl = nacl;\n    window.Buffer = Buffer;\n  }\n\n  /**\n    read private key from local storage\n    - if found, recreate the related key pair\n    - if not found, create a new key pair and save it to local storage\n   */\n  parseEncryptionKey() {\n    const keyKey = \"enc_key:\" + this.accountId + \":\" + this.appId + \":\";\n    let key = localStorage.getItem(keyKey);\n    if (key) {\n      const buf = Buffer.from(key, 'base64');\n      if (buf.length !== nacl.box.secretKeyLength) {\n        throw new Error(\"Given secret key has wrong length\");\n      }\n      key = nacl.box.keyPair.fromSecretKey(buf);\n    } else {\n      key = new nacl.box.keyPair();\n      localStorage.setItem(keyKey, Buffer.from(key.secretKey).toString('base64'));\n    }\n    this._key = key;\n  }\n\n  /**\n   updates local secret key to the new given secret key and stores it to local storage.\n   @param newSecretKey64 base64 encoded secret key\n   */\n  updateEncryptionKey(newSecretKey64) {\n    const buf = Buffer.from(newSecretKey64, 'base64');\n    if (buf.length !== nacl.box.secretKeyLength) {\n      throw new Error(\"Given secret key has wrong length\");\n    }\n    const key = nacl.box.keyPair.fromSecretKey(buf);\n    this._key = key;\n    const keyKey = \"enc_key:\" + this.accountId + \":\" + this.appId + \":\";\n    localStorage.setItem(keyKey, Buffer.from(key.secretKey).toString('base64'));\n  }\n\n  async _innerInit() {\n    this._keyStore = new nearlib.keyStores.BrowserLocalStorageKeyStore(\n      localStorage, \"app:\" + this.appId + \":\",\n    );\n    this._near = await nearlib.connect(Object.assign({ deps: { keyStore:  this._keyStore } }, this._nearConfig));\n    this._account = new nearlib.Account(this._near.connection, this.accountId);\n    this._contract = new nearlib.Contract(this._account, this.accountId, {\n      viewMethods: ['get', 'apps', 'num_messages'],\n      changeMethods: ['set', 'remove', 'pull_message', 'send_message'],\n      sender: this.accountId\n    });\n    this._networkId = this._nearConfig.networkId;\n    return true;\n  }\n\n  /**\n    initialize the client-side application with a BrowserLocalStorageKeyStore\n    and a connection to the NEAR platform, binding OpenWebContract methods:\n\n    - get, set, remove: local invocation methods for controlling the state of local applications\n    - pull_message, send_message: remote invocation methods for communicating with contracts of other users\n    - apps, num_messages: convenience methods for listing all apps on the OpenWeb and messages for a specific app\n   */\n  async init() {\n    return this._init || (this._init = this._innerInit());\n  }\n\n  /**\n    helper method to check if the the user is logged in with the app\n   */\n  async ready() {\n    await this.init();\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    return !!key;\n  }\n\n  /**\n   helper method to wait until the the user is logged in with the app\n   */\n  async waitReady() {\n    return await this.ready() || this._ready || (this._ready = (new Promise((resolve) => {\n      this._keyAwait = resolve;\n    })));\n  }\n\n  /**\n    produce a public key on the user account\n    @return {string} existing (or create new) public key for the current account\n   */\n  async getAccessPublicKey() {\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    if (key) {\n      return key.getPublicKey();\n    }\n    if (this._tmpKey) {\n      return this._tmpKey.getPublicKey();\n    }\n    const accessKey = nearlib.KeyPair.fromRandom('ed25519');\n    this._tmpKey = accessKey;\n    return accessKey.getPublicKey();\n  }\n\n  /**\n    returns a public key on the user account in binary borsh serialized format\n    @returns {Promise<Uint8Array>} public access key\n   */\n  async getSerializedAccessPublicKey() {\n    return nearlib.utils.serialize.serialize(nearlib.transactions.SCHEMA, await this.getAccessPublicKey());\n  }\n\n  /**\n    returns the encryption key stored under given accountId\n\n    @param {string|null} accountId optional accountId to get stored encryption key (your account by default).\n    @param {object} options to specify:\n    - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n    - {string} `appId` the name of the app. Same app by default.\n    @returns {Promise<string|null>} the stored encryption key in base64 format or null\n   */\n  async getStoredEncryptionPublicKey(accountId, options) {\n    return this.getFrom(accountId || this.accountId, encryptionKey, options)\n  }\n\n\n  getEncryptionPublicKey() {\n    return Buffer.from(this._key.publicKey).toString('base64')\n  }\n\n  async storeEncryptionPublicKey() {\n    return this.set(encryptionKey, this.getEncryptionPublicKey());\n  }\n\n  /**\n    capture new keys in the keystore\n   */\n  async onKeyAdded() {\n    if (!this._tmpKey) {\n      throw new Error('The key is not initialized yet');\n    }\n    await this._keyStore.setKey(this._networkId, this.accountId, this._tmpKey);\n    this._tmpKey = null;\n    if (this._keyAwait) {\n      this._keyAwait();\n    }\n  }\n\n  /**\n    enforces that the app is ready\n\n    @returns {Promise<void>}\n   */\n  async forceReady() {\n    if (!await this.ready()) {\n      throw new Error('Not ready yet');\n    }\n  }\n\n  /**\n    wrap a call in a Promise for async handling?\n\n    @param {Function} call the function to be wrapped in a Promise\n    @return {Promise} the Promise to return\n   */\n  wrappedCall(call) {\n    this.blocking = this.blocking.then(() => call()).catch(() => call());\n    return this.blocking;\n  }\n\n  /**\n    unbox encrypted messages with our secret key\n    @param {string} msg64 encrypted message encoded as Base64\n    @return {string} decoded contents of the box\n   */\n  decryptSecretBox(msg64) {\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.secretbox.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.secretbox.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.secretbox.open(box, nonce, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n    box an unencrypted message with our secret key\n    @param {string} str the message to wrap in a box\n    @return {string} base64 encoded box of incoming message\n   */\n  encryptSecretBox(str) {\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.secretbox.nonceLength);\n    const box = nacl.secretbox(buf, nonce, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.secretbox.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.secretbox.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n   unbox encrypted messages with our secret key\n   @param {string} msg64 encrypted message encoded as Base64\n   @param {Uint8Array} theirPublicKey the public key to use to verify the message\n   @return {string} decoded contents of the box\n   */\n  decryptBox(msg64, theirPublicKey) {\n    if (theirPublicKey.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Given encryption public key is invalid.\");\n    }\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.box.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.box.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.box.open(box, nonce, theirPublicKey, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n   box an unencrypted message with their public key and sign it with our secret key\n   @param {string} str the message to wrap in a box\n   @param {Uint8Array} theirPublicKey the public key to use to encrypt the message\n   @returns {string} base64 encoded box of incoming message\n   */\n  encryptBox(str, theirPublicKey) {\n    if (theirPublicKey.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Given encryption public key is invalid.\");\n    }\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.box.nonceLength);\n    const box = nacl.box(buf, nonce, theirPublicKey, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.box.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.box.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n    get data from a local app.  apps can decide whether or not to encrypt their contents\n\n    @param {string} key the key used to store a value in the app\n    @param {object} options to specify:\n    - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n    - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned by the local app\n   */\n  async get(key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    let str = await this._contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    get a value from a remote app installed on another account\n\n    @param {string} accountId account from which to get a value\n    @param {string} key the key to use to identify the value\n    @param {object} options to specify:\n     - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n     - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned from the remote app\n   */\n  async getFrom(accountId, key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    const account = new nearlib.Account(this._near.connection, accountId);\n    const contract = new nearlib.Contract(account, accountId, {\n      viewMethods: ['get'],\n      changeMethods: [],\n      sender: this.accountId\n    });\n\n    let str = await contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    return a list of installed apps\n    @return {object} collection of installed apps\n   */\n  async apps() {\n    return await this._contract.apps();\n  }\n\n  /**\n    set a value in local storage\n\n    @param {string} key identifier for the value to be set\n    @param {string} value the value to be set\n    @param {object} options to specify:\n      - {bool} `encrypted` flag indicating whether to encrypt (box) the value. Default false.\n   */\n  async set(key, value, options) {\n    await this.forceReady();\n    options = Object.assign({\n      encrypted: false,\n    }, options);\n    await this.wrappedCall(() => this._contract.set({\n      key,\n      value: options.encrypted ? this.encryptSecretBox(JSON.stringify(value)) : JSON.stringify(value),\n    }, GAS));\n  }\n\n  /**\n    remove a key-value pair from local storage\n\n    @param {string} key key to be removed\n   */\n  async remove(key) {\n    await this.forceReady();\n    await this.wrappedCall(() => this._contract.remove({\n      key,\n    }, GAS));\n  }\n\n  /**\n    retrieve a message\n\n    @return {any} return async? pull from local storage, null if not found\n   */\n  async pullMessage() {\n    await this.forceReady();\n    if (await this._contract.num_messages({app_id: this.appId}) > 0) {\n      return await this.wrappedCall(() => this._contract.pull_message({}, GAS));\n    } else {\n      return null;\n    }\n  }\n\n  async getTheirPublicKey(options) {\n    options = Object.assign({\n      accountId: null,\n      theirPublicKey: null,\n      theirPublicKey64: null,\n      encryptionKey,\n      appId: this.appId,\n    }, options);\n    if (options.theirPublicKey) {\n      return options.theirPublicKey;\n    }\n    if (!options.theirPublicKey64) {\n      if (!options.accountId) {\n        throw new Error(\"Either accountId or theirPublicKey64 has to be provided\");\n      }\n      options.theirPublicKey64 = await this.getFrom(options.accountId, options.encryptionKey, {\n        appId: options.appId,\n      });\n    }\n    if (!options.theirPublicKey64) {\n      throw new Error(\"Their app doesn't provide the encryption public key.\");\n    }\n    const buf = Buffer.from(options.theirPublicKey64, 'base64');\n    if (buf.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Their encryption public key is invalid.\");\n    }\n    const theirPublicKey = new Uint8Array(nacl.box.publicKeyLength);\n    theirPublicKey.set(buf);\n    return theirPublicKey;\n  }\n\n  /**\n   * Encrypts given content. Typical usage: encryptMessage(\"hello world\", {accountId: bla})\n   *\n   * @param {string} content The message to encrypt\n   * @param options\n   * @returns {Promise<string>}\n   */\n  async encryptMessage(content, options) {\n    const theirPublicKey = await this.getTheirPublicKey(options);\n    return this.encryptBox(content, theirPublicKey);\n  }\n\n  async decryptMessage(msg64, options) {\n    const theirPublicKey = await this.getTheirPublicKey(options);\n    return this.decryptBox(msg64, theirPublicKey);\n  }\n\n  /**\n    send a message to another account\n\n    @param {string} receiverId account id which will receive the message\n    @param {string} message the content of the message\n    @param {object} options to specify:\n      - {string} `appId` the app ID to receive the message. Same app by default.\n   */\n  async sendMessage(receiverId, message, options) {\n    this.forceReady();\n    options = Object.assign({\n      appId: this.appId,\n    }, options);\n    await this.wrappedCall(() => this._contract.send_message({\n      receiver_id: receiverId,\n      app_id: options.appId,\n      message,\n    }, GAS));\n  }\n}\n\nexport {encryptionKey, OpenWebApp}\n","module.exports = __webpack_public_path__ + \"static/media/encryptionOn.23e3b306.png\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOff.475ce496.png\";","(function() {\n    const CONTRACT_NAME = 'react-template'; /* TODO: fill this in!*/\n    const DEFAULT_ENV = 'development'; \n    \n    function getConfig(env) {\n        switch (env) {\n\n        case 'production':\n        case 'development':\n            return {\n                networkId: 'default',\n                nodeUrl: 'https://rpc.nearprotocol.com',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://wallet.nearprotocol.com',\n            };\n        case 'staging':\n            return {\n                networkId: 'staging',\n                nodeUrl: 'https://staging-rpc.nearprotocol.com/',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://near-wallet-staging.onrender.com',\n            };\n        case 'local':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                keyPath: `${process.env.HOME}/.near/validator_key.json`,\n                walletUrl: 'http://localhost:4000/wallet',\n                contractName: CONTRACT_NAME,\n            };\n        case 'test':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'test-remote':\n        case 'ci':\n            return {\n                networkId: 'shared-test',\n                nodeUrl: 'http://shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'ci-staging':\n            return {\n                networkId: 'shared-test-staging',\n                nodeUrl: 'http://staging-shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        default:\n            throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n        }\n    }\n    \n    let Cookies = require('js-cookie');\n    const cookieConfig = typeof Cookies != 'undefined' && Cookies.getJSON('fiddleConfig');\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = getConfig;\n    } else {\n        window.nearConfig =  cookieConfig && cookieConfig.nearPages ? cookieConfig : getConfig(DEFAULT_ENV);\n    }\n})();\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _nearOpenwebJs = require('near-openweb-js');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  accountId: _propTypes2.default.string.isRequired,\n  defaultProfileUrl: _propTypes2.default.string,\n  displayName: _propTypes2.default.string,\n  profileUrl: _propTypes2.default.string,\n  bio: _propTypes2.default.string,\n  onFetch: _propTypes2.default.func,\n  forceShow: _propTypes2.default.bool\n};\n\nvar defaultProps = {\n  defaultProfileUrl: null,\n  styles: {\n    profile: {\n      whiteSpace: 'nowrap',\n      display: 'inline-block'\n    },\n    profileImage: {\n      height: '3em',\n      width: '3em',\n      borderRadius: '50%',\n      verticalAlign: 'middle'\n    },\n    profileName: {\n      overflowY: 'hidden',\n      marginLeft: '0.5em',\n      verticalAlign: 'middle'\n    },\n    profileDisplayName: {},\n    profileAccountId: {\n      color: '#999'\n    }\n  }\n};\n\nvar profileAppId = 'profile';\n\nvar Profile = function (_React$Component) {\n  _inherits(Profile, _React$Component);\n\n  function Profile(props) {\n    _classCallCheck(this, Profile);\n\n    var _this = _possibleConstructorReturn(this, (Profile.__proto__ || Object.getPrototypeOf(Profile)).call(this, props));\n\n    _this.state = {\n      displayName: '',\n      profileUrl: null,\n      bio: '',\n      loading: false,\n      found: false\n    };\n    var nearConfig = _this.props.nearConfig || window.nearConfig || {\n      networkId: 'default',\n      nodeUrl: 'https://rpc.nearprotocol.com',\n      walletUrl: 'https://wallet.nearprotocol.com'\n    };\n\n    if (!window.profileComponentCache) {\n      window.profileComponentCache = {\n        profileCache: {},\n        app: new _nearOpenwebJs.OpenWebApp(profileAppId, null, nearConfig)\n      };\n      window.profileComponentCache.app.init();\n    }\n\n    _this.profileCache = window.profileComponentCache.profileCache;\n    _this.app = window.profileComponentCache.app;\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.accountId && this.app.init().then(function () {\n        return _this2.updateProfile(_this2.props.accountId);\n      });\n    }\n  }, {\n    key: 'fetchProfile',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(accountId) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(accountId in this.profileCache)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.profileCache[accountId];\n\n              case 3:\n                return _context.abrupt('return', _context.sent);\n\n              case 6:\n                console.log(\"Fetching profile for \" + accountId);\n                this.profileCache[accountId] = Promise.all([this.app.getFrom(accountId, 'displayName'), this.app.getFrom(accountId, 'profileUrl'), this.app.getFrom(accountId, 'bio')]).then(function (values) {\n                  return {\n                    accountId: accountId,\n                    displayName: values[0] || \"\",\n                    profileUrl: values[1],\n                    bio: values[2] || \"\"\n                  };\n                }).catch(function (e) {\n                  return false;\n                });\n                _context.next = 10;\n                return this.profileCache[accountId];\n\n              case 10:\n                return _context.abrupt('return', _context.sent);\n\n              case 11:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchProfile(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return fetchProfile;\n    }()\n  }, {\n    key: 'updateProfile',\n    value: function updateProfile(accountId) {\n      var _this3 = this;\n\n      this.setState({\n        displayName: \"\",\n        profileUrl: null,\n        bio: \"\",\n        loading: true,\n        found: false\n      });\n      this.fetchProfile(this.props.accountId).then(function (profile) {\n        if (profile) {\n          _this3.setState({\n            displayName: profile.displayName,\n            profileUrl: profile.profileUrl,\n            bio: profile.bio,\n            loading: false,\n            found: true\n          });\n        } else {\n          _this3.setState({\n            loading: false,\n            found: false\n          });\n        }\n        _this3.props.onFetch && _this3.props.onFetch(profile);\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var _this4 = this;\n\n      if (this.props.accountId !== prevProps.accountId) {\n        this.app.init().then(function () {\n          return _this4.updateProfile(_this4.props.accountId);\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var displayName = this.props.displayName || this.state.displayName;\n      var profileUrl = this.props.profileUrl || this.state.profileUrl || this.props.defaultProfileUrl;\n      var bio = this.props.bio || this.state.bio;\n      var accountId = this.props.accountId;\n      var styles = this.props.styles;\n\n      return this.state.loading ? _react2.default.createElement(\n        'div',\n        { style: styles.profile },\n        _react2.default.createElement(\n          'div',\n          { className: 'spinner-grow', role: 'status' },\n          _react2.default.createElement(\n            'span',\n            { className: 'sr-only' },\n            'Loading...'\n          )\n        )\n      ) : this.state.found || this.props.forceShow ? _react2.default.createElement(\n        'div',\n        { style: styles.profile, title: bio },\n        _react2.default.createElement(\n          'picture',\n          null,\n          _react2.default.createElement('source', { type: 'image/webp', srcSet: styles.profileUrl }),\n          _react2.default.createElement('img', { style: styles.profileImage, src: this.props.defaultProfileUrl, alt: 'Profile @' + accountId })\n        ),\n        _react2.default.createElement(\n          'span',\n          { style: styles.profileName },\n          _react2.default.createElement(\n            'span',\n            { style: styles.profileDisplayName },\n            displayName\n          ),\n          _react2.default.createElement(\n            'span',\n            { style: styles.profileAccountId },\n            \"(@\" + accountId + \")\"\n          )\n        )\n      ) : null;\n    }\n  }]);\n\n  return Profile;\n}(_react2.default.Component);\n\nProfile.propTypes = propTypes;\nProfile.defaultProps = defaultProps;\n\nexports.default = Profile;","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport Files from \"react-files\";\nimport { Profile } from \"react-near-openweb\";\n\nconst uploadResizeWidth = 96;\nconst uploadResizeHeight = 96;\n\nexport class ProfileApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const keys = [\n      \"displayName\",\n      \"profileUrl\",\n      \"bio\",\n    ];\n    this.state = keys.reduce((acc, key) => {\n      acc[key] = \"\";\n      acc.chainValues[key] = null;\n      return acc;\n    }, {\n      keys,\n      chainValues: {},\n      initialized: false,\n      saving: false,\n      hasChanges: false,\n      appReady: false,\n    });\n  }\n\n  async init(profile) {\n    if (!profile) {\n      return;\n    }\n    const newState = this.state.keys.reduce((state, key) => {\n      state[key] = profile[key] || \"\";\n      state.chainValues[key] = state[key];\n      return state;\n    }, {\n      chainValues: {}\n    });\n    this.setState(newState);\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => {\n        this.setState({\n          appReady: true,\n        })\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  handleChange(key, value) {\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  hasChanges() {\n    return this.state.keys.some(key => this.state.chainValues[key] !== this.state[key]);\n  }\n\n  async save() {\n    this.setState({\n      saving: true,\n    });\n    console.log(\"Saving\");\n    const chainValues = Object.assign({}, this.state.chainValues);\n    const promises = [];\n    this.state.keys.forEach(key => {\n      if (this.state.chainValues[key] !== this.state[key]) {\n        chainValues[key] = this.state[key];\n        promises.push(this.props.app.set(key, this.state[key]).then(() => {\n          console.log(\"Updated key `\" + key + \"` to value `\" + this.state[key] + '`');\n        }));\n      }\n    });\n    Promise.all(promises).then(() => {\n      this.setState({\n        chainValues,\n        saving: false,\n      })\n    });\n  }\n\n  async onFilesChange(f) {\n    let sourceImage = new Image();\n    let reader = new FileReader();\n\n    reader.readAsDataURL(f[0]);\n\n    sourceImage.onload = () => {\n      // Create a canvas with the desired dimensions\n      let canvas = document.createElement(\"canvas\");\n      const aspect = sourceImage.naturalWidth / sourceImage.naturalHeight;\n      const width = Math.round(uploadResizeWidth * Math.max(1, aspect));\n      const height = Math.round(uploadResizeHeight * Math.max(1, 1 / aspect));\n      canvas.width = uploadResizeWidth;\n      canvas.height = uploadResizeHeight;\n      const ctx = canvas.getContext(\"2d\");\n\n      // Scale and draw the source image to the canvas\n      ctx.imageSmoothingQuality = \"high\";\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, uploadResizeWidth, uploadResizeHeight);\n      ctx.drawImage(sourceImage, (uploadResizeWidth - width) / 2, (uploadResizeHeight - height) / 2, width, height);\n\n      // Convert the canvas to a data URL in PNG format\n      const options = [\n        canvas.toDataURL('image/jpeg', 0.92),\n        canvas.toDataURL('image/webp', 0.92),\n        canvas.toDataURL('image/png')\n      ];\n      options.sort((a, b) => a.length - b.length);\n\n      this.handleChange('profileUrl', options[0]);\n    }\n\n    reader.onload = function(event) {\n      sourceImage.src = event.target.result;\n    };\n  }\n\n  async onFilesError(e, f) {\n    console.log(e, f);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <button className=\"float-right\" onClick={this.props.logOut}>Log out</button>\n          <Profile\n            accountId={this.props.app && this.props.app.accountId}\n            profileUrl={this.state.profileUrl}\n            displayName={this.state.displayName}\n            bio={this.state.bio}\n            defaultProfileUrl={anon}\n            onFetch={(profile) => this.init(profile)}\n          />\n        </div>\n        <hr/>\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"displayName\">Display Name</label>\n            <input placeholder=\"The REAL Satoshi\" id=\"displayName\" className=\"form-control\" disabled={!this.props.app} value={this.state.displayName} onChange={(e) => this.handleChange('displayName', e.target.value)} />\n          </div>\n          <label htmlFor=\"profileUrl\">Profile URL</label>\n          <div className=\"input-group\">\n            <input placeholder={\"https://metanear.com\" + anon} id=\"profileUrl\" className=\"form-control\" disabled={!this.props.app} value={this.state.profileUrl}\n                   onChange={(e) => this.handleChange('profileUrl', e.target.value)}/>\n            <div className=\"input-group-append\">\n              <Files\n                type=\"button\"\n                className='btn btn-outline-primary'\n                onChange={(f) => this.onFilesChange(f)}\n                onError={(e, f) => this.onFilesError(e, f)}\n                multiple={false}\n                accepts={['image/*']}\n                minFileSize={1}\n                clickable\n              >\n                Click to upload\n              </Files>\n            </div>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"bio\">Bio</label>\n            <textarea placeholder=\"I'm working on Bitcoin, so bankers can go home.\" id=\"bio\" className=\"form-control\" disabled={!this.props.app} value={this.state.bio} onChange={(e) => this.handleChange('bio', e.target.value)} />\n          </div>\n          <div className=\"form-group\">\n            <button\n                className=\"btn btn-primary\"\n                disabled={this.state.saving || !this.hasChanges()}\n                onClick={() => this.save()}\n            >\n              {this.state.saving && (\n                  <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n              )} Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport encryptionOn from \"../assets/encryptionOn.png\";\nimport encryptionOff from \"../assets/encryptionOff.png\";\nimport { Profile } from \"react-near-openweb\";\n\nconst RE = \"Re: \";\nconst currentVersion = 2;\n\nexport class MailApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      receiverId: \"\",\n      subject: \"\",\n      content: \"\",\n      sending: false,\n      numLetters: 0,\n      unread: 0,\n      expandedId: -1,\n      profileFound: false,\n      profileLoading: false,\n      keyLoading: false,\n      theirPublicKey64: null,\n      inbox: [],\n    }\n    this.textarea = React.createRef();\n    this.keyCache = {};\n  }\n\n  modifyLetter(letter, messageId) {\n    if (messageId === undefined) {\n      if (!letter) {\n        return;\n      }\n      messageId = letter.messageId;\n    }\n    const inbox = this.state.inbox.filter((a) => a.messageId !== messageId);\n    if (letter) {\n      inbox.push(letter);\n    }\n    inbox.sort((a, b) => b.time - a.time);\n    const unread = inbox.reduce((acc, letter) => acc + (letter.read ? 0: 1), 0);\n    this.setState({\n      inbox,\n      unread,\n    });\n    this.props.onNewMail(unread);\n  }\n\n  async migrateFrom(version) {\n    if (version === 0) {\n      console.log(\"Migrating from version #0\");\n      let num = 0;\n      try {\n        num = await this.props.app.get('numLetters');\n      } catch (e) {\n        // whatever. Probably died during migration.\n      }\n      const allMigrations = [];\n      for (let i = 0; i < num; ++i) {\n        allMigrations.push(this.props.app.get('letter_' + i).then((letter) => {\n          if (letter) {\n            return this.props.app.set('letter_' + i, letter, {encrypted: true}).then(() => {\n              console.log(\"Migrated letter #\" + i);\n            })\n          }\n          return Promise.resolve();\n        }).catch((e) => console.log(\"Can't migrate letter #\", i, e)));\n      }\n      await Promise.all(allMigrations);\n      await this.props.app.set('numLetters', num, { encrypted: true });\n      version++;\n    }\n    if (version === 1) {\n      console.log(\"Migrating from version #1\");\n      await this.props.app.storeEncryptionPublicKey();\n      version++;\n    }\n    await this.props.app.set('version', version, { encrypted: true });\n  }\n\n  async init() {\n    let version;\n    try {\n      version = await this.props.app.get('version', {encrypted: true}) || 0;\n    } catch (e) {\n      // likely mismatched keys\n      console.log(e);\n      return;\n    }\n    if (version < currentVersion) {\n      await this.migrateFrom(version);\n    }\n    const num = await this.props.app.get('numLetters', { encrypted: true }) || 0;\n    this.setState({\n      numLetters: num,\n    });\n    for (let i = Math.max(0, num - 10); i < num; ++i) {\n      this.props.app.get('letter_' + i, {encrypted: true}).then((letter) => this.modifyLetter(letter));\n    }\n    this.fetchMessages();\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => this.init());\n    }\n  }\n\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  async fetchKey(accountId) {\n    if (accountId in this.keyCache) {\n      return await this.keyCache[accountId];\n    } else {\n      console.log(\"Fetching key for \" + accountId);\n      this.keyCache[accountId] = this.props.app.getStoredEncryptionPublicKey(accountId, {}).catch((e) => false);\n      return await this.keyCache[accountId];\n    }\n  }\n\n  updateKey(profile) {\n    if (!this.props.app) {\n      return;\n    }\n    this.setState({\n      profileLoading: false,\n      profileFound: !!profile,\n    });\n    if (!profile) {\n      return;\n    }\n    this.setState({\n      keyLoading: true,\n    })\n    this.fetchKey(profile.accountId).then((theirPublicKey64) => {\n      this.setState({\n        keyLoading: false,\n        theirPublicKey64,\n      })\n    });\n  }\n\n  handleChange(key, value) {\n    const stateChange = {\n      [key]: value,\n    };\n    if (key === 'receiverId') {\n      value = value.toLowerCase().replace(/[^a-z0-9\\-_.]/, '');\n      stateChange[key] = value;\n      stateChange.profileLoading = true;\n      stateChange.theirPublicKey64 = false;\n    }\n    this.setState(stateChange);\n  }\n\n  async fetchMessages() {\n    if (!this.props.app) {\n      return;\n    }\n    if (this.fetchTimeoutId) {\n      clearTimeout(this.fetchTimeoutId);\n      this.fetchTimeoutId = null;\n    }\n    console.log(\"Fetching messages\");\n    const message = await this.props.app.pullMessage();\n    if (!message) {\n      this.fetchTimeoutId = setTimeout(() => { this.fetchMessages() }, 60 * 1000);\n      return;\n    }\n    try {\n      console.log(message);\n      let inner = JSON.parse(message.message);\n      const isEncrypted = inner.type === 'encrypted';\n      const fromAppId = inner.fromAppId || this.props.app.appId;\n      if (isEncrypted) {\n        const decryptedMessage = await this.props.app.decryptMessage(inner.content, {\n          accountId: message.sender,\n          appId: inner.fromAppId,\n        });\n        inner = JSON.parse(decryptedMessage);\n      }\n      if (inner.type === 'mail') {\n        const letter = {\n          messageId: this.state.numLetters,\n          isEncrypted,\n          fromAppId,\n          sender: message.sender,\n          subject: inner.subject,\n          content: inner.content,\n          time: Math.trunc(message.time / 1000000),\n        }\n        const newNumLetters = this.state.numLetters + 1;\n        this.setState({\n          numLetters: newNumLetters,\n        });\n\n        this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n          console.log(\"Saved the letter: \", letter);\n        });\n        this.props.app.set(\"numLetters\", newNumLetters, {encrypted: true}).then(() => {\n            console.log(\"Saved the new number of letters: \", newNumLetters);\n        });\n        this.modifyLetter(letter);\n      } else {\n        console.warn(\"Unknown message\", message);\n      }\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.fetchMessages()\n    }\n  }\n\n  async sendMail() {\n    if (!this.state.profileFound) {\n      return;\n    }\n    console.log(\"Sending mail\");\n    this.setState({\n      sending: true,\n    });\n    try {\n      let message = JSON.stringify({\n        type: \"mail\",\n        subject: this.state.subject,\n        content: this.state.content,\n      });\n      if (this.state.theirPublicKey64) {\n        const content = await this.props.app.encryptMessage(message, {\n          theirPublicKey64: this.state.theirPublicKey64,\n        });\n        message = JSON.stringify({\n          type: \"encrypted\",\n          fromAppId: this.props.app.appId,\n          content,\n        })\n      }\n      await this.props.app.sendMessage(this.state.receiverId, message);\n      this.setState({\n        subject: \"\",\n        content: \"\",\n      })\n    } catch (e) {\n      console.log(\"Failed to send the message\", e);\n    } finally {\n      this.setState({\n        sending: false,\n      });\n      setTimeout(() => this.fetchMessages(), 2000);\n    };\n  }\n\n  receiverClass() {\n    if (!this.state.receiverId || this.state.profileLoading) {\n      return \"form-control\";\n    } else if (this.state.profileFound) {\n      return \"form-control is-valid\";\n    } else {\n      return \"form-control is-invalid\";\n    }\n  }\n\n  replyTo(letter, displayName) {\n    this.handleChange(\"receiverId\", letter.sender);\n    this.setState({\n      subject: (letter.subject.startsWith(RE) ? \"\" : RE) + letter.subject,\n      content: [\n        \"\",\n        \"\",\n        [\"On\", new Date(letter.time).toLocaleDateString(), displayName, \"@\" + letter.sender, \"wrote:\"].join(' '),\n        ...letter.content.split(/\\r?\\n/).map(s => \"| \" + s)\n      ].join(\"\\n\"),\n    }, () => {\n      this.textarea.current.focus();\n      this.textarea.current.setSelectionRange(0, 0);\n      this.textarea.current.scrollLeft = 0;\n      this.textarea.current.scrollTop = 0;\n    });\n  }\n\n  selectLetter(letter) {\n    this.setState({\n      expandedId: (this.state.expandedId === letter.messageId) ? -1 : letter.messageId,\n    });\n    if (!letter.read) {\n      letter = JSON.parse(JSON.stringify(letter));\n      letter.read = true;\n      this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n        console.log(\"Saved the letter: \", letter);\n      });\n      this.modifyLetter(letter);\n    }\n  }\n\n  deleteLetter(letter) {\n    this.props.app.remove(\"letter_\" + letter.messageId).then(() => {\n      console.log(\"Deleted the letter: \", letter);\n    });\n    this.modifyLetter(null, letter.messageId);\n  }\n\n  render() {\n    const encryptionEnabled = this.state.theirPublicKey64;\n    const displayEncryptionIcon = this.state.profileFound && !this.state.keyLoading;\n    const encryptionAlt = encryptionEnabled ? \"Encryption is ON\" : \"Not secure! Encryption is OFF\";\n    const encryptionIcon = displayEncryptionIcon &&\n      <img className=\"encryption-icon\" src={encryptionEnabled ? encryptionOn : encryptionOff}\n          title={encryptionAlt} alt={encryptionAlt}/>;\n    const profile = <Profile accountId={this.state.receiverId} onFetch={(profile) => this.updateKey(profile)} defaultProfileUrl={anon}/>;\n    const inbox = this.state.inbox.map((letter, i) => (\n      <Letter\n        key={letter.messageId}\n        letter={letter}\n        expanded={letter.messageId === this.state.expandedId}\n        deleteLetter={(letter) => this.deleteLetter(letter)}\n        replyTo={(letter, displayName) => this.replyTo(letter, displayName)}\n        selectLetter={(letter) => this.selectLetter(letter)} />\n    ));\n    return (\n      <div>\n        Inbox <button className=\"btn btn-sm\" onClick={() => this.fetchMessages()}><span role=\"img\" aria-label=\"Refresh\">🔄</span></button>\n        <div>\n          {inbox}\n        </div>\n        <h3>Send</h3>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label className=\"sr-only\" htmlFor=\"toAccountId\">To Account ID</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">@</div>\n                </div>\n                <input type=\"text\" className={this.receiverClass()} id=\"toAccountId\" placeholder=\"To Account ID\" value={this.state.receiverId} disabled={!this.props.app} onChange={(e) => this.handleChange('receiverId', e.target.value)} />\n              </div>\n            </div>\n          </div>\n          {profile}\n        </div>\n        <div className=\"form-group\">\n          <label className=\"sr-only\" htmlFor=\"subject\">Subject</label>\n          <input type=\"text\" className=\"form-control\" id=\"subject\" placeholder=\"Subject\" disabled={!this.props.app} value={this.state.subject} onChange={(e) => this.handleChange('subject', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <textarea ref={this.textarea} id=\"content\" className=\"form-control\" rows=\"7\" disabled={!this.props.app} value={this.state.content} onChange={(e) => this.handleChange('content', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <button className={\"form-control form-control-lg btn \" + (displayEncryptionIcon && !encryptionEnabled ? \"btn-danger\" : \"btn-primary\")} disabled={!this.state.profileFound || this.state.sending} onClick={() => this.sendMail()}>\n            Send {encryptionIcon}</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport class Letter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: {\n        profileUrl: null,\n        displayName: '@' + props.letter.sender,\n      },\n    };\n  }\n\n  onClick() {\n    this.props.selectLetter(this.props.letter);\n  }\n\n  render() {\n    const profile = (\n      <div className=\"col-sm-6 col-md-4 col-lg-4 letter-profile\">\n        <Profile accountId={this.props.letter.sender} onFetch={(profile) => profile && this.setState({displayName: profile.displayName})} defaultProfileUrl={anon}/>\n      </div>\n    );\n    const subject = (\n      <div className=\"col-sm-4 col-md\">\n        <div className=\"letter-subject\">{this.props.letter.subject}</div>\n      </div>\n    );\n    const time = this.props.expanded ? (\n      <div className=\"col-sm-2 col-lg-2\">\n        <div className=\"letter-time\">{longTimeFormat(this.props.letter.time)}</div>\n      </div>\n    ) : (\n      <div className=\"col-sm-2 col-lg-1 d-none d-md-block\">\n        <div className=\"letter-time\">{timeFormat(this.props.letter.time)}</div>\n      </div>\n    );\n    if (this.props.expanded) {\n      return (\n        <div className=\"letter letter-expanded\">\n          <div className=\"row letter-expanded-header\" onClick={() => this.onClick()}>\n            {profile}\n            {subject}\n            {time}\n          </div>\n          <div className=\"letter-content-expanded\">\n            <pre>{this.props.letter.content}</pre>\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <button className=\"btn btn-primary\" onClick={() => this.props.replyTo(this.props.letter, this.state.displayName)}>Reply</button>\n              </div>\n              <div className=\"col-sm\">\n                <button className=\"btn btn-danger float-right\" onClick={() => this.props.deleteLetter(this.props.letter)}>DELETE THIS!</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={\"row letter letter-small\" + (this.props.letter.read ? \" letter-read\" : \" letter-unread\")} onClick={() => this.onClick()}>\n          {profile}\n          {subject}\n          <div className=\"col-sm d-none d-lg-block\">\n            <div className=\"letter-content\">{this.props.letter.content}</div>\n          </div>\n          {time}\n        </div>\n      );\n    }\n  }\n}\n\nfunction longTimeFormat(t) {\n  return new Date(t).toLocaleString();\n}\n\nfunction timeFormat(t) {\n  const d = new Date(t);\n  const now = new Date();\n  if (now.getDate() === d.getDate()) {\n    const hour = d.getHours() % 12;\n    const minute = d.getMinutes().toString().padStart(2, '0');\n    const daytime = d.getHours() >= 12 ? \"PM\" : \"AM\";\n    return `${hour}:${minute} ${daytime}`;\n  } else {\n    return d.toLocaleDateString();\n  }\n}\n","import React from 'react';\nimport * as nearlib from 'nearlib';\nimport { generateSeedPhrase } from 'near-seed-phrase';\n\nconst FaucetPrivateKey = 'ed25519:2Rtn6ms22rCRMgmGgLRSPPd6gYDCgWDuFrX6gERknSA8GKiCHE5L9Rksc1ihsSCDvMSptfbipzq29H7cDZhR1Ze3';\nconst FaucetName = 'meta';\nconst MinAccountIdLen = 2;\nconst MaxAccountIdLen = 64;\nconst ValidAccountRe = /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\nexport const AuthDataKey = \"meta-faucet-auth-data\";\n\nexport class PowFaucet extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            connected: false,\n            signedIn: false,\n            accountId: null,\n            newAccountId: \"\",\n            creating: false,\n            accountLoading: false,\n            newAccountExists: false,\n            computingProofOfWork: false,\n        };\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.initNear().then(() => {\n            this.mounted && this.setState({\n                connected: true,\n                signedIn: !!this._authData.accountId,\n                accountId: this._authData.accountId,\n            })\n        })\n    }\n\n    async initFaucet() {\n        let key = await this._keyStore.getKey(this._nearConfig.networkId, FaucetName);\n        if (!key) {\n            const keyPair = nearlib.KeyPair.fromString(FaucetPrivateKey);\n            await this._keyStore.setKey(this._nearConfig.networkId, FaucetName, keyPair);\n        }\n        const account = new nearlib.Account(this._near.connection, FaucetName);\n        this._faucetContract =  new nearlib.Contract(account, FaucetName, {\n            viewMethods: ['get_min_difficulty', 'get_account_suffix', 'get_num_created_accounts'],\n            changeMethods: ['create_account'],\n            sender: FaucetName\n        });\n        this._accountSuffix = await this._faucetContract.get_account_suffix();\n        this._minDifficulty = await this._faucetContract.get_min_difficulty();\n        this.mounted && this.setState({\n            numCreatedAccounts: await this._faucetContract.get_num_created_accounts(),\n        });\n        // console.log(JSON.stringify([...key.getPublicKey().data]));\n    }\n\n    async initNear() {\n        const nearConfig = {\n            networkId: 'default',\n            nodeUrl: 'https://rpc.nearprotocol.com',\n            contractName: FaucetName,\n            walletUrl: 'https://wallet.nearprotocol.com',\n        };\n        const keyStore = new nearlib.keyStores.BrowserLocalStorageKeyStore();\n        const near = await nearlib.connect(Object.assign({ deps: { keyStore } }, nearConfig));\n        this._keyStore = keyStore;\n        this._nearConfig = nearConfig;\n        this._near = near;\n\n        this._authData = JSON.parse(window.localStorage.getItem(AuthDataKey) || '{}');\n        await this.initFaucet();\n    }\n\n    handleChange(key, value) {\n        const stateChange = {\n            [key]: value,\n        };\n        if (key === 'newAccountId') {\n            value = value.toLowerCase().replace(/[^a-z0-9\\-_.]/, '');\n            stateChange[key] = value;\n            stateChange.newAccountExists = false;\n            if (this.isValidAccount(value)) {\n                stateChange.accountLoading = true;\n                this._near.connection.provider.query(`account/${value + this._accountSuffix}`, '').then((_a) => {\n                    if (this.state.newAccountId === value) {\n                        this.setState({\n                            accountLoading: false,\n                            newAccountExists: true,\n                        })\n                    }\n                }).catch((e) => {\n                    if (this.state.newAccountId === value) {\n                        this.setState({\n                            accountLoading: false,\n                            newAccountExists: false,\n                        })\n                    }\n                })\n            }\n        }\n        this.setState(stateChange);\n    }\n\n    isValidAccount(newAccountId) {\n        if (newAccountId.includes('.')) {\n            return false;\n        }\n        const accountId = newAccountId + this._accountSuffix;\n        return accountId.length >= MinAccountIdLen &&\n            accountId.length <= MaxAccountIdLen &&\n            accountId.match(ValidAccountRe);\n    }\n\n    newAccountClass() {\n        if (!this.state.newAccountId || this.state.accountLoading) {\n            return \"form-control form-control-large\";\n        } else if (!this.state.newAccountExists && this.isValidAccount(this.state.newAccountId)) {\n            return \"form-control form-control-large is-valid\";\n        } else {\n            return \"form-control form-control-large is-invalid\";\n        }\n    }\n\n    async computeProofOfWork(accountId, publicKey) {\n        let msg = [...new TextEncoder('utf-8').encode(accountId + ':')];\n        // curve\n        msg.push(0);\n        // key\n        msg.push(...publicKey.data);\n        // separator\n        msg.push(':'.charCodeAt(0));\n        // salt\n        msg.push(0, 0, 0, 0, 0, 0, 0, 0);\n        msg = new Uint8Array(msg);\n        const len = msg.length;\n        let bestDifficulty = 0;\n        for (let salt = 0; ; ++salt) {\n            // compute hash\n            const hashBuffer = new Uint8Array(await crypto.subtle.digest('SHA-256', msg));\n            // compute number of leading zero bits\n            let totalNumZeros = 0;\n            for (let i = 0; i < hashBuffer.length; ++i) {\n                let numZeros = Math.clz32(hashBuffer[i]) - 24;\n                totalNumZeros += numZeros;\n                if (numZeros < 8) {\n                    break;\n                }\n            }\n            // checking difficulty\n            if (totalNumZeros >= this._minDifficulty) {\n                this.setState({\n                    computingProofOfWork: false,\n                });\n                return salt;\n            } else if (totalNumZeros > bestDifficulty) {\n                bestDifficulty = totalNumZeros;\n                this.setState({\n                    proofOfWorkProgress: Math.trunc(bestDifficulty * 100 / this._minDifficulty),\n                    proofOfWorkDifficulty: bestDifficulty,\n                    proofOfWorkSalt: salt,\n                });\n            } else if (salt % 10000 === 0) {\n                this.setState({\n                    proofOfWorkSalt: salt\n                });\n            }\n            // incrementing salt\n            for (let i = len - 8; i < len; ++i) {\n                if (msg[i] === 255) {\n                    msg[i] = 0;\n                } else {\n                    ++msg[i];\n                    break;\n                }\n            }\n        }\n    }\n\n    async createAccount() {\n        this.setState({\n            creating: true,\n            computingProofOfWork: true,\n            proofOfWorkProgress: 0,\n            proofOfWorkDifficulty: 0,\n            proofOfWorkSalt: 0,\n        })\n        const newAccountId = this.state.newAccountId + this._accountSuffix;\n        const seed = generateSeedPhrase();\n        const newKeyPair = nearlib.KeyPair.fromString(seed.secretKey);\n        const salt = await this.computeProofOfWork(newAccountId, newKeyPair.getPublicKey());\n        await this._faucetContract.create_account({\n            account_id: newAccountId,\n            public_key: [0, ...newKeyPair.getPublicKey().data],\n            salt,\n        });\n        await this._keyStore.setKey(this._nearConfig.networkId, newAccountId, newKeyPair);\n        this._authData = {\n            accountId: newAccountId,\n            seed,\n        };\n        window.localStorage.setItem(AuthDataKey, JSON.stringify(this._authData));\n        this.setState({\n            signedIn: true,\n            accountId: newAccountId,\n            creating: false,\n            numCreatedAccounts: await this._faucetContract.get_num_created_accounts(),\n        })\n        this.props.onLogin(this._authData);\n    }\n\n    moveAccountToWallet() {\n        window.location = `https://wallet.nearprotocol.com/recover-with-link/${this._authData.accountId}/${this._authData.seed.seedPhrase}`;\n    }\n\n    logout() {\n        window.localStorage.removeItem(AuthDataKey);\n        this._authData = {};\n        this.setState({\n            signedIn: false,\n            accountId: null,\n            newAccountId: \"\",\n            creating: false,\n            accountLoading: false,\n            newAccountExists: false,\n            computingProofOfWork: false,\n        });\n    }\n\n    render() {\n        const content = !this.state.connected ? (\n            <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n        ) : (this.state.signedIn ? (\n            <div>\n                <h3>Hello, {this.state.accountId}</h3>\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-success\"\n                        onClick={() => this.moveAccountToWallet()}\n                    >\n                        Move account to NEAR Wallet\n                    </button>\n                </div>\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-danger\"\n                        onClick={() => this.logout()}\n                    >\n                        Logout from Faucet\n                    </button>\n                </div>\n            </div>\n        ) : (\n            <div>\n                <div className=\"form-group\">\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <div className=\"input-group-text\">{\"@\"}</div>\n                        </div>\n                        <input\n                            placeholder=\"bob\"\n                            id=\"accountId\"\n                            className={this.newAccountClass()}\n                            value={this.state.newAccountId}\n                            onChange={(e) => this.handleChange('newAccountId', e.target.value)}\n                            disabled={this.state.creating}\n                        />\n                        <div className=\"input-group-append\">\n                            <div className=\"input-group-text\">{this._accountSuffix}</div>\n                        </div>\n                    </div>\n                </div>\n                {this.state.newAccountExists && (\n                    <div className=\"alert alert-warning\" role=\"alert\">\n                        Account {'\"' + this.state.newAccountId + this._accountSuffix + '\"'} already exists!\n                    </div>\n                )}\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-primary\"\n                        disabled={this.state.creating || this.state.accountLoading || this.state.newAccountExists || !this.isValidAccount(this.state.newAccountId)}\n                        onClick={() => this.createAccount()}\n                    >\n                        {(this.state.creating || this.state.accountLoading) && (\n                            <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                        )} Create Account {this.isValidAccount(this.state.newAccountId) ? ('\"' + this.state.newAccountId + this._accountSuffix + '\"') : \"\"}\n                    </button>\n                </div>\n                {this.state.creating && (\n                    <div>\n                        {this.state.computingProofOfWork ? (\n                            <div>\n                                Computing Proof of Work. Done {this.state.proofOfWorkSalt} operations.\n                                <div className=\"progress\">\n                                    <div className=\"progress-bar\" role=\"progressbar\" style={{width: this.state.proofOfWorkProgress + '%'}} aria-valuenow={this.state.proofOfWorkProgress} aria-valuemin=\"0\"\n                                         aria-valuemax=\"100\">{this.state.proofOfWorkDifficulty} out of {this._minDifficulty}\n                                    </div>\n                                </div>\n                            </div>\n                        ) : (\n                            <div>\n                                Proof of Work is Done! Creating account {'\"' + this.state.newAccountId + this._accountSuffix + '\"'}\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        ));\n        return (\n            <div>\n                <h3>or create a new account</h3>\n                {content}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport nearlogo from './assets/gray_near_logo.svg';\nimport './css/App.css';\nimport * as nearlib from \"nearlib\";\nimport { OpenWebApp } from 'near-openweb-js';\nimport { ProfileApp } from \"./apps/ProfileApp\";\nimport { MailApp } from \"./apps/MailApp\";\n// import { KeysApp } from \"./apps/KeysApp\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { PowFaucet, AuthDataKey}  from \"./components/PowFaucet\";\n\nconst GAS = 2_000_000_000_000_000;\nconst TITLE = \"Open Web Home - NEAR\"\nconst DefaultTabIndexKey = \"metanearDefaultTabIndex\";\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: false,\n      apps: {},\n      logs: [],\n      unread: 0,\n      loading: false,\n      defaultTabIndex: JSON.parse(window.localStorage.getItem(DefaultTabIndexKey) || '0'),\n    }\n    this.signedInFlow = this.signedInFlow.bind(this);\n    this.requestSignIn = this.requestSignIn.bind(this);\n    this.requestSignOut = this.requestSignOut.bind(this);\n    this.signedOutFlow = this.signedOutFlow.bind(this);\n    this.checkSignIn = this.checkSignIn.bind(this);\n    this.initOpenWebApp = this.initOpenWebApp.bind(this);\n    window.nearlib = nearlib;\n  }\n\n  componentDidMount() {\n    this.checkSignIn();\n  }\n\n  async checkSignIn() {\n    let loggedIn = window.walletAccount.isSignedIn();\n    let authData = JSON.parse(window.localStorage.getItem(AuthDataKey) || '{}');\n    if (loggedIn || authData.accountId) {\n      await this.signedInFlow(authData);\n    } else {\n      this.signedOutFlow();\n    }\n  }\n\n  log(message) {\n    console.log(message);\n    this.setState({\n      logs: this.state.logs.concat([message])\n    })\n  }\n\n  async signedInFlow(authData) {\n    const accountId = authData.accountId || await this.props.wallet.getAccountId();\n    this.setState({\n      login: true,\n      loading: true,\n      accountId,\n    })\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    if (window.location.search.includes(\"all_keys\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    // Initializing our contract APIs by contract name and configuration.\n\n    this.log(\"Connecting to account...\");\n    const account = await new nearlib.Account(window.near.connection, accountId);\n    this.log(\"Querying state...\");\n    let state = await account.state();\n    /*\n    await new Promise((resolve, reject) =>{\n      setTimeout(() => {\n        resolve();\n      }, 5000);\n    })\n     */\n    console.log(state);\n    if (state.code_hash !== 'C8UmYSqATkuyhheJ7i7ryxPjfZL4nV8PfkovdMKitsmJ') {\n      this.log(\"Going to deploy the code\");\n      // no code. Need to deploy.\n      this.log(\"Downloading started...\");\n      let data = await fetch('/open_web.wasm');\n      let buf = await data.arrayBuffer();\n      this.log(\"Downloading done. Deploying contract...\");\n      await account.deployContract(new Uint8Array(buf));\n      if (state.code_hash === '11111111111111111111111111111111') {\n        this.log(\"Deploying done. Initializing contract...\");\n        // Gotta init it.\n        let contract = await new nearlib.Contract(account, accountId, {\n          viewMethods: [],\n          // Change methods can modify the state. But you don't receive the returned value when called.\n          changeMethods: ['new'],\n          // Sender is the account ID to initialize transactions.\n          sender: accountId\n        });\n        console.log(await contract.new());\n      }\n      this.log(\"The contract is deployed\");\n    }\n\n    const masterContract = await new nearlib.Contract(account, accountId, {\n      // View methods are read only. They don't modify the state, but usually return some value.\n      viewMethods: ['apps'],\n      // Change methods can modify the state. But you don't receive the returned value when called.\n      changeMethods: ['add_app_key', 'remove_app_key'],\n      // Sender is the account ID to initialize transactions.\n      sender: accountId\n    });\n\n    this.masterContract = masterContract;\n    window.masterContract = masterContract;\n    this.log(\"Fetching authorized apps...\");\n    console.log(\"Apps:\", await masterContract.apps());\n\n    // this.initOpenWebApp = this.initOpenWebApp.bind(this);\n\n    this.log(\"Initializing local apps...\");\n    const apps = {\n      profile: await this.initOpenWebApp('profile', accountId),\n      // graph: await this.initOpenWebApp('graph', accountId),\n      mail: await this.initOpenWebApp('mail', accountId),\n      // keys: await this.initOpenWebApp('keys', accountId)\n    };\n    window.apps = apps;\n    this.apps = apps;\n    this.setState({\n      apps,\n      loading: false,\n    })\n  }\n\n  async initOpenWebApp(appId, accountId) {\n    this.log(\"Initializing app: \" + appId + \" ...\");\n    const app = new OpenWebApp(appId, accountId, window.nearConfig);\n    await app.init();\n    if (!await app.ready()) {\n      let pk = await app.getAccessPublicKey();\n      this.log(\"Authorizing app for key \" + pk.toString() + \" ...\");\n      const serializedPk = await app.getSerializedAccessPublicKey();\n      const args = {\n        public_key: [...serializedPk],\n        app_id: appId,\n      };\n      await this.masterContract.add_app_key(args, GAS);\n      await app.onKeyAdded();\n    }\n    return app;\n  }\n\n  async requestSignIn() {\n    const appTitle = 'Open Web Home';\n    await this.props.wallet.requestSignIn(\n      \"\",\n      appTitle\n    )\n  }\n\n  requestSignOut = () => {\n    this.props.wallet.signOut();\n    setTimeout(this.signedOutFlow, 500);\n    console.log(\"after sign out\", this.props.wallet.isSignedIn())\n  }\n\n\n  signedOutFlow = () => {\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    this.setState({\n      login: false,\n    })\n  }\n\n  selectTab = (index) => {\n    window.localStorage.setItem(DefaultTabIndexKey, JSON.stringify(index));\n    this.setState({\n      defaultTabIndex: index,\n    })\n  }\n\n  render() {\n    document.title = (this.state.unread ? `(${this.state.unread}) ` : \"\") + TITLE;\n    if (!this.state.login) {\n      return <div className=\"App-header\">\n        <div>\n          <div className=\"image-wrapper\">\n            <img className=\"logo\" src={nearlogo} alt=\"NEAR logo\"/>\n          </div>\n          <h1>Hello ?</h1>\n          <div>\n            <button\n                className=\"btn btn-primary\"\n                onClick={this.requestSignIn}>Log in with NEAR Wallet</button>\n          </div>\n          <PowFaucet onLogin={this.signedInFlow}/>\n        </div>\n      </div>\n    } else if (this.state.loading) {\n      return <div className=\"loading-div\">\n        <div className=\"spinner-grow loading-spinner\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <pre className=\"text-left\">\n          {this.state.logs.join(\"\\n\")}\n        </pre>\n      </div>\n    } else {\n      return <div className={\"apps\" + (this.state.loading ? \" d-none\" : \"\")}>\n        <Tabs forceRenderTabPanel={true} defaultIndex={this.state.defaultTabIndex} onSelect={(i) => this.selectTab(i)}>\n          <TabList>\n            <Tab>Profile</Tab>\n            <Tab>Mail {this.state.unread ? `(${this.state.unread})` : \"\"}</Tab>\n            {/*<Tab>Keys</Tab>*/}\n          </TabList>\n\n          <TabPanel>\n            <ProfileApp app={this.state.apps.profile} logOut={this.requestSignOut}/>\n          </TabPanel>\n          <TabPanel>\n            <MailApp app={this.state.apps.mail} onNewMail={(unread) => this.setState({unread})}/>\n          </TabPanel>\n          {/*<TabPanel>\n            <KeysApp app={this.state.apps.keys}/>\n          </TabPanel>*/}\n        </Tabs>\n      </div>\n    }\n  }\n}\n","import React from \"react\";\nimport queryString from 'query-string';\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    const values = queryString.parse(this.props.location.search);\n    let {app_id, pub_key} = values;\n    if (app_id && pub_key) {\n      this.state = {\n        authorized:false,\n        new_app_id:app_id,\n        new_pub_key:pub_key\n      };\n    } else {\n      this.state = {\n        authorized:false,\n        new_app_id:\"\",\n        new_pub_key:\"\"\n      }\n    }\n  }\n\n componentDidMount() {\n    if (!this.props.loading && this.state.new_app_id && this.state.new_pub_key) {\n      this.props.initOpenWebApp(this.state.new_app_id, this.state.new_pub_key)\n        .then(res => {\n          this.setState({\n            authorized: true\n          })\n        });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      // this.init();\n    }\n  }\n  \n  // async fetchProfile(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  // async registerNewApp(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  render() {\n    return (\n      <div>\n        {this.state.authorized ? \n        <div>\n          <p>App <strong>{this.state.new_app_id}</strong> was added</p>\n          <p> Using the public key: {this.state.new_pub_key} </p>\n        </div> :\n        \"You need pass a key in order to add an app\"\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport { Home } from './Home';\nimport { Auth } from './Auth';\n\nclass Router extends Component {\n  render() {\n    return (\n      <HashRouter basename={process.env.PUBLIC_URL} hashType=\"noslash\">\n        <Switch>\n          <Route exact path=\"/\" component={() => <Home {...this.props}/>} />\n          <Route path=\"/auth\" component={() => <Auth {...this.props}/>} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport getConfig from './near/config.js';\nimport * as nearlib from 'nearlib';\n\n// Initializing contract\nasync function InitContract() {\n    window.nearConfig = getConfig('development')\n\n    // Initializing connection to the NEAR DevNet.\n    window.near = await nearlib.connect(Object.assign({ deps: { keyStore: new nearlib.keyStores.BrowserLocalStorageKeyStore() } }, window.nearConfig));\n    \n    // Needed to access wallet login\n    window.walletAccount = new nearlib.WalletAccount(window.near);\n    \n    // Getting the Account ID. If unauthorized yet, it's just empty string.\n    window.accountId = window.walletAccount.getAccountId();\n\n}\n\nwindow.nearInitPromise = InitContract().then(() => {\n    ReactDOM.render(<Router contract={window.contract} wallet={window.walletAccount}/>,\n      document.getElementById('root')\n    );\n  }).catch(console.error)","module.exports = __webpack_public_path__ + \"static/media/anon.5cbbd243.png\";","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Profile = undefined;\n\nvar _Profile = require('./Profile.js');\n\nvar _Profile2 = _interopRequireDefault(_Profile);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Profile = _Profile2.default;"],"sourceRoot":""}