{"version":3,"sources":["ProfileApp.js","MailApp.js","Home.js","Auth.js","App.js","index.js","assets/anon.png","assets/gray_near_logo.svg","openweb.js","config.js"],"names":["ProfileApp","props","keys","state","reduce","acc","key","chainValues","initialized","console","log","this","setState","Promise","all","map","app","get","values","i","Object","assign","prevProps","init","value","length","forEach","set","then","f","sourceImage","Image","reader","FileReader","readAsDataURL","onload","canvas","document","createElement","aspect","naturalWidth","naturalHeight","width","Math","round","max","height","ctx","getContext","imageSmoothingQuality","fillStyle","fillRect","drawImage","options","toDataURL","sort","a","b","handleChange","event","src","target","result","e","className","profileUrl","anon","displayName","accountId","htmlFor","placeholder","id","disabled","onChange","type","onFilesChange","onError","onFilesError","multiple","accepts","minFileSize","clickable","bio","onClick","save","React","Component","MailApp","receiverId","subject","content","sending","profileFetchTimeoutId","profileFetchIndex","numLetters","unread","expandedId","inbox","textarea","createRef","profileCache","letter","messageId","undefined","filter","push","time","read","onNewMail","version","num","allMigrations","encrypted","resolve","catch","migrateFrom","modifyLetter","fetchMessages","getFrom","appId","stateChange","toLowerCase","replace","profile","profileLoading","fetchProfile","fetchTimeoutId","clearTimeout","pullMessage","message","inner","JSON","parse","sender","trunc","newNumLetters","warn","error","setTimeout","sendMessage","stringify","finally","startsWith","Date","toLocaleDateString","join","split","s","current","focus","setSelectionRange","scrollLeft","scrollTop","remove","role","expanded","deleteLetter","replyTo","selectLetter","receiverClass","ref","rows","sendMail","Letter","t","profileName","toLocaleString","d","getDate","hour","getHours","minute","getMinutes","toString","padStart","daytime","timeFormat","Home","requestSignOut","wallet","signOut","signedOutFlow","isSignedIn","window","location","search","includes","origin","pathname","login","apps","logs","loading","signedInFlow","bind","requestSignIn","checkSignIn","initOpenWebApp","nearlib","walletAccount","concat","getAccountId","near","connection","account","code_hash","fetch","data","arrayBuffer","buf","deployContract","Uint8Array","viewMethods","changeMethods","contract","new","masterContract","graph","mail","OpenWebApp","nearConfig","ready","getPublicKey","pk","args","public_key","serialize","SCHEMA","app_id","add_app_key","onKeyAdded","title","nearlogo","alt","forceRenderTabPanel","Auth","queryString","pub_key","authorized","new_app_id","new_pub_key","res","App","basename","process","hashType","exact","path","component","nearInitPromise","async","getConfig","deps","keyStore","BrowserLocalStorageKeyStore","ReactDOM","render","getElementById","module","exports","config","_config","blocking","parseEncryptionKey","nacl","Buffer","keyKey","localStorage","getItem","keyPair","fromSecretKey","from","setItem","secretKey","_key","_keyStore","_near","_account","_contract","_networkId","networkId","getKey","_tmpKey","accessKey","fromRandom","Error","setKey","call","msg64","nonce","nonceLength","copy","box","decodedBuf","open","str","fullBuf","decryptSecretBox","forceReady","wrappedCall","encryptSecretBox","num_messages","pull_message","send_message","receiver_id","env","nodeUrl","contractName","walletUrl","keyPath","HOME","masterAccount","Cookies","require","cookieConfig","getJSON","nearPages"],"mappings":"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","file":"static/js/main.131b22f1.chunk.js","sourcesContent":["import React from \"react\";\nimport anon from \"./assets/anon.png\";\nimport Files from \"react-files\";\n\nconst uploadResizeWidth = 96;\nconst uploadResizeHeight = 96;\n\nexport class ProfileApp extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const keys = [\n      \"displayName\",\n      \"profileUrl\",\n      \"bio\",\n    ];\n    this.state = keys.reduce((acc, key) => {\n      acc[key] = \"\";\n      acc.chainValues[key] = null;\n      return acc;\n    }, {\n      keys,\n      chainValues: {},\n      initialized: false,\n    });\n  }\n\n  async init() {\n    console.log(\"init profile\");\n    this.setState({\n      initialized: true,\n    });\n    const values = await Promise.all(this.state.keys.map((key) => this.props.app.get(key)));\n    console.log(values);\n    const chainValues = this.state.keys.reduce((acc, key, i) => {\n      acc[key] = values[i] || \"\";\n      return acc;\n    }, {});\n    this.setState(Object.assign({chainValues}, chainValues));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      this.init();\n    }\n  }\n\n  handleChange(key, value) {\n    console.log(value.length);\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  async save() {\n    console.log(\"Saving\");\n    const chainValues = Object.assign({}, this.state.chainValues);\n    this.state.keys.forEach(key => {\n      if (this.state.chainValues[key] !== this.state[key]) {\n        chainValues[key] = this.state[key];\n        this.props.app.set(key, this.state[key]).then(() => {\n          console.log(\"Updated key `\" + key + \"` to value `\" + this.state[key] + '`');\n        });\n      }\n    });\n    this.setState({\n      chainValues\n    })\n  }\n\n  async onFilesChange(f) {\n    let sourceImage = new Image();\n    let reader = new FileReader();\n\n    reader.readAsDataURL(f[0]);\n\n    sourceImage.onload = () => {\n      // Create a canvas with the desired dimensions\n      let canvas = document.createElement(\"canvas\");\n      const aspect = sourceImage.naturalWidth / sourceImage.naturalHeight;\n      const width = Math.round(uploadResizeWidth * Math.max(1, aspect));\n      const height = Math.round(uploadResizeHeight * Math.max(1, 1 / aspect));\n      canvas.width = uploadResizeWidth;\n      canvas.height = uploadResizeHeight;\n      const ctx = canvas.getContext(\"2d\");\n\n      // Scale and draw the source image to the canvas\n      ctx.imageSmoothingQuality = \"high\";\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, uploadResizeWidth, uploadResizeHeight);\n      ctx.drawImage(sourceImage, (uploadResizeWidth - width) / 2, (uploadResizeHeight - height) / 2, width, height);\n\n      // Convert the canvas to a data URL in PNG format\n      const options = [\n        canvas.toDataURL('image/jpeg', 0.92),\n        canvas.toDataURL('image/webp', 0.92),\n        canvas.toDataURL('image/png')\n      ];\n      options.sort((a, b) => a.length - b.length);\n\n      this.handleChange('profileUrl', options[0]);\n    }\n\n    reader.onload = function(event) {\n      sourceImage.src = event.target.result;\n    };\n  }\n\n  async onFilesError(e, f) {\n    console.log(e, f);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <img className=\"profile-image\" src={this.state.profileUrl || anon}/>\n          <span className=\"letter-expanded-profile\">\n            <span className=\"letter-profile-name\">{this.state.displayName}</span>\n            {this.props.app && <span className=\"letter-account-id\">{\"(@\" + this.props.app.accountId + \")\"}</span>}\n          </span>\n        </div>\n        <hr/>\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"displayName\">Display Name</label>\n            <input placeholder=\"The REAL Satoshi\" id=\"displayName\" className=\"form-control\" disabled={!this.props.app} value={this.state.displayName} onChange={(e) => this.handleChange('displayName', e.target.value)} />\n          </div>\n          <label htmlFor=\"profileUrl\">Profile URL</label>\n          <div className=\"input-group\">\n            <input placeholder={\"https://metanear.com\" + anon} id=\"profileUrl\" className=\"form-control\" disabled={!this.props.app} value={this.state.profileUrl}\n                   onChange={(e) => this.handleChange('profileUrl', e.target.value)}/>\n            <div className=\"input-group-append\">\n              <Files\n                type=\"button\"\n                className='btn btn-outline-primary'\n                onChange={(f) => this.onFilesChange(f)}\n                onError={(e, f) => this.onFilesError(e, f)}\n                multiple={false}\n                accepts={['image/*']}\n                minFileSize={1}\n                clickable\n              >\n                Click to upload\n              </Files>\n            </div>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"bio\">Bio</label>\n            <textarea placeholder=\"I'm working on Bitcoin, so bankers can go home.\" id=\"bio\" className=\"form-control\" disabled={!this.props.app} value={this.state.bio} onChange={(e) => this.handleChange('bio', e.target.value)} />\n          </div>\n          <div className=\"form-group\">\n            <button onClick={() => this.save()}>Save changes</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport anon from \"./assets/anon.png\";\n\nconst RE = \"Re: \";\nconst currentVersion = 1;\n\nexport class MailApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      receiverId: \"\",\n      subject: \"\",\n      content: \"\",\n      sending: false,\n      profileFetchTimeoutId: null,\n      profileFetchIndex: 0,\n      numLetters: 0,\n      unread: 0,\n      expandedId: -1,\n      inbox: [\n        /*\n        {\n        messageId: -1,\n        sender: \"potato-lord\",\n        subject: \"DOPE\",\n        content: \"HELLO? HELLLOOOOO?\",\n        time: new Date().getTime() - 1000 * 42 * 60,\n      }, {\n        messageId: -2,\n        sender: \"potato-lord\",\n        subject: \"BLABLBALBLABLALBA L BALBLABAL LBLA\",\n        content: \"HELLO? HELLLOOOOO?HELLO? HELLLOOOOO?HELLO? HELLLOOOOO?HELLO? HELLLOOOOO?HELLO? HELLLOOOOO?\",\n        time: new Date().getTime() - 1000 * 23 * 60 * 60,\n      }, {\n        messageId: -4,\n        sender: \"sheeet\",\n        subject: \"Self mailing?\",\n        content: \"Best idea ever!\",\n        time: new Date().getTime() - 2 * 1000 * 24 * 60 * 60,\n      }\n      */\n\n      ],\n    }\n    this.textarea = React.createRef();\n    this.profileCache = {};\n  }\n\n  modifyLetter(letter, messageId) {\n    if (messageId === undefined) {\n      if (!letter) {\n        return;\n      }\n      messageId = letter.messageId;\n    }\n    const inbox = this.state.inbox.filter((a) => a.messageId != messageId);\n    if (letter) {\n      inbox.push(letter);\n    }\n    inbox.sort((a, b) => b.time - a.time);\n    const unread = inbox.reduce((acc, letter) => acc + (letter.read ? 0: 1), 0);\n    this.setState({\n      inbox,\n      unread,\n    });\n    this.props.onNewMail(unread);\n  }\n\n  async migrateFrom(version) {\n    if (version == 0) {\n      console.log(\"Migrating from version #0\");\n      const num = await this.props.app.get('numLetters');\n      const allMigrations = [this.props.app.set('numLetters', num, { encrypted: true })];\n      for (let i = 0; i < num; ++i) {\n        allMigrations.push(this.props.app.get('letter_' + i).then((letter) => {\n          if (letter) {\n            return this.props.app.set('letter_' + i, letter, {encrypted: true}).then(() => {\n              console.log(\"Migrated letter #\" + i);\n            })\n          }\n          return Promise.resolve();\n        }).catch((e) => console.log(\"Can't migrate letter #\", i, e)));\n      }\n      await Promise.all(allMigrations);\n      version++;\n    }\n    await this.props.app.set('version', version, { encrypted: true });\n  }\n\n  async init() {\n    console.log(\"init\");\n    this.setState({\n      initialized: true,\n    });\n    const version = await this.props.app.get('version', { encrypted: true }) || 0;\n    if (version < currentVersion) {\n      await this.migrateFrom(version);\n    }\n    const num = await this.props.app.get('numLetters', { encrypted: true }) || 0;\n    this.setState({\n      numLetters: num,\n    });\n    for (let i = Math.max(0, num - 10); i < num; ++i) {\n      this.props.app.get('letter_' + i, {encrypted: true}).then((letter) => this.modifyLetter(letter));\n    }\n    this.fetchMessages();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      this.init();\n    }\n  }\n\n  async fetchProfile(accountId) {\n    if (accountId in this.profileCache) {\n      return this.profileCache[accountId];\n    } else {\n      console.log(\"Fetching profile for \" + accountId);\n      try {\n        const values = await Promise.all([\n          this.props.app.getFrom(accountId, 'displayName',  { appId: 'profile' }),\n          this.props.app.getFrom(accountId, 'profileUrl', { appId: 'profile' }),\n        ]);\n        this.profileCache[accountId] = {\n          displayName: values[0] || \"\",\n          profileUrl: values[1],\n        };\n      } catch (e) {\n        this.profileCache[accountId] = false;\n      }\n      return this.profileCache[accountId];\n    }\n  }\n\n  handleChange(key, value) {\n    const stateChange = {\n      [key]: value,\n    };\n    if (key === 'receiverId') {\n      value = value.toLowerCase().replace(/[^a-z0-9\\-\\_\\.]/, '');\n      stateChange[key] = value;\n      const profileFetchIndex = this.state.profileFetchIndex + 1;\n      stateChange.profileFetchIndex = profileFetchIndex;\n      stateChange.profile = null;\n      if (value) {\n        stateChange.profileLoading = true;\n        this.fetchProfile(value).then((profile) => {\n          if (this.state.profileFetchIndex !== profileFetchIndex) {\n            return;\n          }\n          this.setState({\n            profileLoading: false,\n            profile,\n          });\n        });\n      } else {\n        stateChange.profileLoading = false;\n      }\n    }\n    this.setState(stateChange);\n  }\n\n  fetchMessages() {\n    if (!this.props.app) {\n      return;\n    }\n    if (this.fetchTimeoutId) {\n      clearTimeout(this.fetchTimeoutId);\n      this.fetchTimeoutId = null;\n    }\n    console.log(\"Fetching messages\");\n    this.props.app.pullMessage().then((message) => {\n      if (!message) {\n        this.fetchTimeoutId = setTimeout(() => { this.fetchMessages() }, 60 * 1000);\n        return;\n      }\n      try {\n        console.log(message);\n        const inner = JSON.parse(message.message);\n        if (inner.type === 'mail') {\n          const letter = {\n            messageId: this.state.numLetters,\n            sender: message.sender,\n            subject: inner.subject,\n            content: inner.content,\n            time: Math.trunc(message.time / 1000000),\n          }\n          const newNumLetters = this.state.numLetters + 1;\n          this.setState({\n            numLetters: newNumLetters,\n          });\n\n          this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n            console.log(\"Saved the letter: \", letter);\n          });\n          this.props.app.set(\"numLetters\", newNumLetters, {encrypted: true}).then(() => {\n              console.log(\"Saved the new number of letters: \", newNumLetters);\n          });\n          this.modifyLetter(letter);\n        } else {\n          console.warn(\"Unknown message\", message);\n        }\n      } catch (e) {\n        console.error(e);\n      } finally {\n        this.fetchMessages()\n      }\n    })\n  }\n\n  sendMail() {\n    if (!this.state.profile) {\n      return;\n    }\n    console.log(\"Sending mail\");\n    this.setState({\n      sending: true,\n    });\n    this.props.app.sendMessage(this.state.receiverId, JSON.stringify({\n      type: \"mail\",\n      subject: this.state.subject,\n      content: this.state.content,\n    })).then(() => {\n      this.setState({\n        subject: \"\",\n        content: \"\",\n      })\n    }).finally(() => {\n      this.setState({\n        sending: false,\n      });\n      this.fetchMessages();\n    });\n\n  }\n\n  receiverClass() {\n    if (!this.state.receiverId || this.state.profileLoading) {\n      return \"form-control\";\n    } else if (this.state.profile) {\n      return \"form-control is-valid\";\n    } else {\n      return \"form-control is-invalid\";\n    }\n  }\n\n  replyTo(letter, displayName) {\n    this.handleChange(\"receiverId\", letter.sender);\n    this.setState({\n      subject: (letter.subject.startsWith(RE) ? \"\" : RE) + letter.subject,\n      content: [\n        \"\",\n        \"\",\n        [\"On\", new Date(letter.time).toLocaleDateString(), displayName, \"@\" + letter.sender, \"wrote:\"].join(' '),\n        ...letter.content.split(/\\r?\\n/).map(s => \"| \" + s)\n      ].join(\"\\n\"),\n    }, () => {\n      this.textarea.current.focus();\n      this.textarea.current.setSelectionRange(0, 0);\n      this.textarea.current.scrollLeft = 0;\n      this.textarea.current.scrollTop = 0;\n    });\n  }\n\n  selectLetter(letter) {\n    this.setState({\n      expandedId: (this.state.expandedId === letter.messageId) ? -1 : letter.messageId,\n    });\n    if (!letter.read) {\n      letter = JSON.parse(JSON.stringify(letter));\n      letter.read = true;\n      this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n        console.log(\"Saved the letter: \", letter);\n      });\n      this.modifyLetter(letter);\n    }\n  }\n\n  deleteLetter(letter) {\n    this.props.app.remove(\"letter_\" + letter.messageId).then(() => {\n      console.log(\"Deleted the letter: \", letter);\n    });\n    this.modifyLetter(null, letter.messageId);\n  }\n\n  render() {\n    const profile = this.state.profileLoading ? (\n      <div className=\"col\">\n        <div className=\"spinner-grow\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    ) : this.state.profile ? (\n      <div className=\"col\">\n        <img className=\"profile-image\" src={this.state.profile.profileUrl || anon}/>\n        <span className=\"profile-name\">{this.state.profile.displayName}</span>\n      </div>\n    ) : null;\n    const inbox = true || this.props.app ?\n      this.state.inbox.map((letter, i) => <Letter\n          key={letter.messageId}\n          fetchProfile={(a) => this.fetchProfile(a)}\n          letter={letter}\n          expanded={letter.messageId == this.state.expandedId}\n          deleteLetter={(letter) => this.deleteLetter(letter)}\n          replyTo={(letter, displayName) => this.replyTo(letter, displayName)}\n          selectLetter={(letter) => this.selectLetter(letter)}/>) :\n      null;\n    return (\n      <div>\n        Inbox <button className=\"btn btn-sm\" onClick={() => this.fetchMessages()}>🔄</button>\n        <div>\n          {inbox}\n        </div>\n        <h3>Send</h3>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label className=\"sr-only\" htmlFor=\"toAccountId\">To Account ID</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">@</div>\n                </div>\n                <input type=\"text\" className={this.receiverClass()} id=\"toAccountId\" placeholder=\"To Account ID\" value={this.state.receiverId} disabled={!this.props.app} onChange={(e) => this.handleChange('receiverId', e.target.value)} />\n              </div>\n            </div>\n          </div>\n          {profile}\n        </div>\n        <div className=\"form-group\">\n          <label className=\"sr-only\" htmlFor=\"subject\">Subject</label>\n          <input type=\"text\" className=\"form-control\" id=\"subject\" placeholder=\"Subject\" disabled={!this.props.app} value={this.state.subject} onChange={(e) => this.handleChange('subject', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <textarea ref={this.textarea} id=\"content\" className=\"form-control\" rows=\"7\" disabled={!this.props.app} value={this.state.content} onChange={(e) => this.handleChange('content', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"form-control form-control-lg btn btn-primary\" disabled={!this.state.profile || this.state.sending} onClick={() => this.sendMail()}>Send</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport class Letter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: {\n        profileUrl: null,\n        displayName: '@' + props.letter.sender,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchProfile(this.props.letter.sender).then((profile) => {\n      this.setState({\n        profile,\n      })\n    });\n  }\n\n  onClick() {\n    this.props.selectLetter(this.props.letter);\n  }\n\n  render() {\n    const profileName = (\n      <span className=\"letter-expanded-profile\">\n        <span className=\"letter-profile-name\">{this.state.profile.displayName}</span>\n        <span className=\"letter-account-id\">{\"(@\" + this.props.letter.sender + \")\"}</span>\n      </span>\n    )\n    const profile = (\n      <div className=\"col-sm-6 col-md-4 col-lg-4 letter-profile\">\n        <img className=\"letter-profile-image\" src={this.state.profile.profileUrl || anon}/>\n        {profileName}\n      </div>\n    );\n    const subject = (\n      <div className=\"col-sm-4 col-md\">\n        <div className=\"letter-subject\">{this.props.letter.subject}</div>\n      </div>\n    );\n    const time = this.props.expanded ? (\n      <div className=\"col-sm-2 col-lg-2\">\n        <div className=\"letter-time\">{longTimeFormat(this.props.letter.time)}</div>\n      </div>\n    ) : (\n      <div className=\"col-sm-2 col-lg-1 d-none d-md-block\">\n        <div className=\"letter-time\">{timeFormat(this.props.letter.time)}</div>\n      </div>\n    );\n    if (this.props.expanded) {\n      return (\n        <div className=\"letter letter-expanded\">\n          <div className=\"row letter-expanded-header\" onClick={() => this.onClick()}>\n            {profile}\n            {subject}\n            {time}\n          </div>\n          <div className=\"letter-content-expanded\">\n            <pre>{this.props.letter.content}</pre>\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <button className=\"btn btn-primary\" onClick={() => this.props.replyTo(this.props.letter, this.state.profile.displayName)}>Reply</button>\n              </div>\n              <div className=\"col-sm\">\n                <button className=\"btn btn-danger float-right\" onClick={() => this.props.deleteLetter(this.props.letter)}>DELETE THIS!</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={\"row letter letter-small\" + (this.props.letter.read ? \" letter-read\" : \" letter-unread\")} onClick={() => this.onClick()}>\n          {profile}\n          {subject}\n          <div className=\"col-sm d-none d-lg-block\">\n            <div className=\"letter-content\">{this.props.letter.content}</div>\n          </div>\n          {time}\n        </div>\n      );\n    }\n  }\n}\n\nfunction longTimeFormat(t) {\n  return new Date(t).toLocaleString();\n}\n\nfunction timeFormat(t) {\n  const d = new Date(t);\n  const now = new Date();\n  if (now.getDate() === d.getDate()) {\n    const hour = d.getHours() % 12;\n    const minute = d.getMinutes().toString().padStart(2, '0');\n    const daytime = d.getHours() >= 12 ? \"PM\" : \"AM\";\n    return `${hour}:${minute} ${daytime}`;\n  } else {\n    return d.toLocaleDateString();\n  }\n}\n","import React, { Component } from 'react';\nimport nearlogo from './assets/gray_near_logo.svg';\nimport './App.css';\nimport * as nearlib from \"nearlib\";\nimport { OpenWebApp } from './openweb.js';\nimport { ProfileApp } from \"./ProfileApp\";\nimport { MailApp } from \"./MailApp\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nconst GAS = 2_000_000_000_000_000;\nconst TITLE = \"Open Web Home - NEAR\"\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: false,\n      apps: {},\n      logs: [],\n      unread: 0,\n      loading: false,\n    }\n    this.signedInFlow = this.signedInFlow.bind(this);\n    this.requestSignIn = this.requestSignIn.bind(this);\n    this.requestSignOut = this.requestSignOut.bind(this);\n    this.signedOutFlow = this.signedOutFlow.bind(this);\n    this.checkSignIn = this.checkSignIn.bind(this);\n    this.initOpenWebApp = this.initOpenWebApp.bind(this);\n    window.nearlib = nearlib;\n  }\n\n  componentDidMount() {\n    this.checkSignIn();\n  }\n\n  async checkSignIn() {\n    let loggedIn = window.walletAccount.isSignedIn();\n    if (loggedIn) {\n      await this.signedInFlow();\n    } else {\n      this.signedOutFlow();\n    }\n  }\n\n  log(message) {\n    console.log(message);\n    this.setState({\n      logs: this.state.logs.concat([message])\n    })\n  }\n\n  async signedInFlow() {\n    console.log(\"come in sign in flow\")\n    const accountId = await this.props.wallet.getAccountId()\n    this.setState({\n      login: true,\n      loading: true,\n      accountId,\n    })\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    if (window.location.search.includes(\"all_keys\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    // Initializing our contract APIs by contract name and configuration.\n\n    this.log(\"Connecting to account...\");\n    const account = await new nearlib.Account(window.near.connection, accountId);\n    this.log(\"Querying state...\");\n    let state = await account.state();\n    /*\n    await new Promise((resolve, reject) =>{\n      setTimeout(() => {\n        resolve();\n      }, 5000);\n    })\n     */\n    console.log(state);\n    if (state.code_hash !== 'C8UmYSqATkuyhheJ7i7ryxPjfZL4nV8PfkovdMKitsmJ') {\n      this.log(\"Going to deploy the code\");\n      // no code. Need to deploy.\n      this.log(\"Downloading started...\");\n      let data = await fetch('/open_web.wasm');\n      let buf = await data.arrayBuffer();\n      this.log(\"Downloading done. Deploying contract...\");\n      await account.deployContract(new Uint8Array(buf));\n      if (state.code_hash === '11111111111111111111111111111111') {\n        this.log(\"Deploying done. Initializing contract...\");\n        // Gotta init it.\n        let contract = await new nearlib.Contract(account, accountId, {\n          viewMethods: [],\n          // Change methods can modify the state. But you don't receive the returned value when called.\n          changeMethods: ['new'],\n          // Sender is the account ID to initialize transactions.\n          sender: accountId\n        });\n        console.log(await contract.new());\n      }\n      this.log(\"The contract is deployed\");\n    }\n\n    const masterContract = await new nearlib.Contract(account, accountId, {\n      // View methods are read only. They don't modify the state, but usually return some value.\n      viewMethods: ['apps'],\n      // Change methods can modify the state. But you don't receive the returned value when called.\n      changeMethods: ['add_app_key', 'remove_app_key'],\n      // Sender is the account ID to initialize transactions.\n      sender: accountId\n    });\n\n    this.masterContract = masterContract;\n    window.masterContract = masterContract;\n    this.log(\"Fetching authorized apps...\");\n    console.log(\"Apps:\", await masterContract.apps());\n\n    // this.initOpenWebApp = this.initOpenWebApp.bind(this);\n    \n    this.log(\"Initializing local apps...\");\n    const apps = {\n      profile: await this.initOpenWebApp('profile', accountId),\n      graph: await this.initOpenWebApp('graph', accountId),\n      mail: await this.initOpenWebApp('mail', accountId)\n    };\n    window.apps = apps;\n    this.apps = apps;\n    this.setState({\n      apps,\n      loading: false,\n    })\n    console.log(apps);\n  }\n\n  async initOpenWebApp(appId, accountId) {\n    this.log(\"Initializing app: \" + appId + \" ...\");\n    const app = await new OpenWebApp(appId, accountId, window.nearConfig);\n    await app.init();\n    if (!await app.ready()) {\n      let pk = await app.getPublicKey();\n      this.log(\"Authorizing app for key \" + pk.toString() + \" ...\");\n      const args = {\n        public_key: [...nearlib.utils.serialize.serialize(nearlib.transactions.SCHEMA, pk)],\n        app_id: appId,\n      };\n      await this.masterContract.add_app_key(args, GAS);\n      await app.onKeyAdded();\n    }\n    this.log(\"Done\");\n    return app;\n  }\n\n  async requestSignIn() {\n    const appTitle = 'Open Web Home';\n    await this.props.wallet.requestSignIn(\n      \"\",\n      appTitle\n    )\n  }\n\n  requestSignOut = () => {\n    this.props.wallet.signOut();\n    setTimeout(this.signedOutFlow, 500);\n    console.log(\"after sign out\", this.props.wallet.isSignedIn())\n  }\n\n\n  signedOutFlow = () => {\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    this.setState({\n      login: false,\n    })\n  }\n\n  render() {\n    document.title = (this.state.unread ? `(${this.state.unread}) ` : \"\") + TITLE;\n    return (\n      <div className=\"App-header\">\n        <div className=\"image-wrapper\">\n          <img className=\"logo\" src={nearlogo} alt=\"NEAR logo\" />\n        </div>\n        <h1>Hello{this.state.login ? \", \" + this.state.accountId : \"?\"}</h1>\n        <div>\n          {this.state.login ? <button onClick={this.requestSignOut}>Log out</button>\n            : <button onClick={this.requestSignIn}>Log in with NEAR</button>}\n        </div>\n        <br/>\n        {this.state.loading && (\n          <div className=\"loading-div\">\n            <div className=\"spinner-grow loading-spinner\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n            <pre className=\"text-left\">\n              {this.state.logs.join(\"\\n\")}\n            </pre>\n          </div>\n        )}\n        {this.state.login && (\n          <div className={\"apps\" + (this.state.loading ? \" d-none\" : \"\")}>\n            <Tabs forceRenderTabPanel={true}>\n              <TabList>\n                <Tab>Profile</Tab>\n                <Tab>Mail {this.state.unread ? `(${this.state.unread})` : \"\"}</Tab>\n              </TabList>\n\n              <TabPanel>\n                <ProfileApp app={this.state.apps.profile}/>\n              </TabPanel>\n              <TabPanel>\n                <MailApp app={this.state.apps.mail} onNewMail={(unread) => this.setState({unread})}/>\n              </TabPanel>\n            </Tabs>\n          </div>\n        )}\n      </div>\n    )\n  }\n\n}\n","import React from \"react\";\nimport queryString from 'query-string';\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    const values = queryString.parse(this.props.location.search);\n    let {app_id, pub_key} = values;\n    if (app_id && pub_key) {\n      this.state = {\n        authorized:false,\n        new_app_id:app_id,\n        new_pub_key:pub_key\n      };\n    } else {\n      this.state = {\n        authorized:false,\n        new_app_id:\"\",\n        new_pub_key:\"\"\n      }\n    }\n  }\n\n componentDidMount() {\n    if (!this.props.loading && this.state.new_app_id && this.state.new_pub_key) {\n      this.props.initOpenWebApp(this.state.new_app_id, this.state.new_pub_key)\n        .then(res => {\n          this.setState({\n            authorized: true\n          })\n        });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      // this.init();\n    }\n  }\n  \n  // async fetchProfile(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  // async registerNewApp(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  render() {\n    return (\n      <div>\n        {this.state.authorized ? \n        <div>\n          <p>App <strong>{this.state.new_app_id}</strong> was added</p>\n          <p> Using the public key: {this.state.new_pub_key} </p>\n        </div> :\n        \"You need pass a key in order to add an app\"\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport { Home } from './Home';\nimport { Auth } from './Auth';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename={process.env.PUBLIC_URL} hashType=\"noslash\">\n        <Switch>\n          <Route exact path=\"/\" component={() => <Home {...this.props}/>} />\n          <Route path=\"/auth\" component={() => <Auth {...this.props}/>} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport getConfig from './config.js';\nimport * as nearlib from 'nearlib';\n\n// Initializing contract\nasync function InitContract() {\n    window.nearConfig = getConfig('development')\n    console.log(\"nearConfig\", window.nearConfig);\n\n    // Initializing connection to the NEAR DevNet.\n    window.near = await nearlib.connect(Object.assign({ deps: { keyStore: new nearlib.keyStores.BrowserLocalStorageKeyStore() } }, window.nearConfig));\n    \n    // Needed to access wallet login\n    window.walletAccount = new nearlib.WalletAccount(window.near);\n    \n    // Getting the Account ID. If unauthorized yet, it's just empty string.\n    window.accountId = window.walletAccount.getAccountId();\n\n}\n\nwindow.nearInitPromise = InitContract().then(() => {\n    ReactDOM.render(<App contract={window.contract} wallet={window.walletAccount}/>,\n      document.getElementById('root')\n    );\n  }).catch(console.error)","module.exports = __webpack_public_path__ + \"static/media/anon.5cbbd243.png\";","module.exports = __webpack_public_path__ + \"static/media/gray_near_logo.55517b93.svg\";","import * as nearlib from \"nearlib\";\nimport * as nacl from \"tweetnacl\";\n\nconst GAS = 2_000_000_000_000_000;\n\n/**\n  a class representing the OpenWebApp API\n\n  this API supports local contract methods\n  - get: gets a value from local storage\n  - set: sets a value on local storage\n  - remove: deletes a value from local storage\n\n  and remote contract methods\n  - pull: reads a message from a remote contract\n  - post / send: sends a message to a remote contract\n */\nexport class OpenWebApp {\n  constructor(appId, accountId, config) {\n    this.appId = appId;\n    this.accountId = accountId;\n    this._config = config;\n    this.blocking = Promise.resolve();\n    this.parseEncryptionKey();\n    window.nacl = nacl;\n    window.Buffer = Buffer;\n  }\n\n  /**\n    read private key from local storage\n    - if found, recreate the related key pair\n    - if not found, create a new key pair and save it to local storage\n   */\n  parseEncryptionKey() {\n    const keyKey = \"enc_key:\" + this.accountId + \":\" + this.appId + \":\";\n    let key = localStorage.getItem(keyKey);\n    if (key) {\n      key = nacl.box.keyPair.fromSecretKey(Buffer.from(key, 'base64'));\n    } else {\n      key = new nacl.box.keyPair();\n      localStorage.setItem(keyKey, Buffer.from(key.secretKey).toString('base64'));\n    }\n    this._key = key;\n  }\n\n  /**\n    initialize the client-side application with a BrowserLocalStorageKeyStore\n    and a connection to the NEAR platform, binding OpenWebContract methods:\n\n    - get, set, remove: local invocation methods for controlling the state of local applications\n    - pull_message, send_message: remote invocation methods for communicating with contracts of other users\n    - apps, num_messages: convenience methods for listing all apps on the OpenWeb and messages for a specific app\n   */\n  async init() {\n    this._keyStore = new nearlib.keyStores.BrowserLocalStorageKeyStore(\n      localStorage, \"app:\" + this.appId,\n    );\n    this._near = await nearlib.connect(Object.assign({ deps: { keyStore:  this._keyStore } }, this._config));\n    this._account = new nearlib.Account(this._near.connection, this.accountId);\n    this._contract = new nearlib.Contract(this._account, this.accountId, {\n      viewMethods: ['get', 'apps', 'num_messages'],\n      changeMethods: ['set', 'remove', 'pull_message', 'send_message'],\n      sender: this.accountId\n    });\n    this._networkId = this._config.networkId;\n  }\n\n  /**\n    helper method to check if the user is logged in with the app\n   */\n  async ready() {\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    return !!key;\n  }\n\n  /**\n    produce a public key on the user account\n    @return {string} existing (or create new) public key for the current account\n   */\n  async getPublicKey() {\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    if (key) {\n      return key.getPublicKey();\n    }\n    if (this._tmpKey) {\n      return this._tmpKey.getPublicKey();\n    }\n    const accessKey = nearlib.KeyPair.fromRandom('ed25519');\n    this._tmpKey = accessKey;\n    return accessKey.getPublicKey();\n  }\n\n  /**\n    capture new keys in the keystore\n   */\n  async onKeyAdded() {\n    if (!this._tmpKey) {\n      throw new Error('The key is not initialized yet');\n    }\n    await this._keyStore.setKey(this._networkId, this.accountId, this._tmpKey);\n    this._tmpKey = null;\n  }\n\n  /**\n   * enforces that the app is ready\n   * @returns {Promise<void>}\n   */\n  async forceReady() {\n    if (!await this.ready()) {\n      throw new Error('Not ready yet');\n    }\n  }\n\n  /**\n    wrap a call in a Promise for async handling?\n\n    @param {Function} call the function to be wrapped in a Promise\n    @return {Promise} the Promise to return\n   */\n  wrappedCall(call) {\n    this.blocking = this.blocking.then(() => call()).catch(() => call());\n    return this.blocking;\n  }\n\n  /**\n    unbox encrypted messages\n    @param {string} msg64 encrypted message encoded as Base64\n    @return {string} decoded contents of the box\n   */\n  decryptSecretBox(msg64) {\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.secretbox.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.secretbox.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.secretbox.open(box, nonce, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n    box an unencrypted message\n    @param {string} str the message to wrap in a box\n    @return {string} base64 encoded box of incoming message\n   */\n  encryptSecretBox(str) {\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.secretbox.nonceLength);\n    const box = nacl.secretbox(buf, nonce, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.secretbox.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.secretbox.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n    get data from a local app.  apps can decide whether or not to encrypt their contents\n\n    @param {string} key the key used to store a value in the app\n    @param {object} options to specify:\n    - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n    - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned by the local app\n   */\n  async get(key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    let str = await this._contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    get a value from a remote app installed on another account\n\n    @param {string} accountId account from which to get a value\n    @param {string} key the key to use to identify the value\n    @param {object} options to specify:\n     - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n     - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned from the remote app\n   */\n  async getFrom(accountId, key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    const account = new nearlib.Account(this._near.connection, accountId);\n    const contract = new nearlib.Contract(account, accountId, {\n      viewMethods: ['get'],\n      changeMethods: [],\n      sender: this.accountId\n    });\n\n    let str = await contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    return a list of installed apps\n    @return {object} collection of installed apps\n   */\n  async apps() {\n    return await this._contract.apps();\n  }\n\n  /**\n    set a value in local storage\n\n    @param {string} key identifier for the value to be set\n    @param {string} value the value to be set\n    @param {object} options to specify:\n      - {bool} `encrypted` flag indicating whether to encrypt (box) the value. Default false.\n   */\n  async set(key, value, options) {\n    this.forceReady();\n    options = Object.assign({\n      encrypted: false,\n    }, options);\n    await this.wrappedCall(() => this._contract.set({\n      key,\n      value: options.encrypted ? this.encryptSecretBox(JSON.stringify(value)) : JSON.stringify(value),\n    }, GAS));\n  }\n\n  /**\n    remove a key-value pair from local storage\n\n    @param {string} key key to be removed\n   */\n  async remove(key) {\n    this.forceReady();\n    await this.wrappedCall(() => this._contract.remove({\n      key,\n    }, GAS));\n  }\n\n  /**\n    retrieve a message\n\n    @return {any} return async? pull from local storage, null if not found\n   */\n  async pullMessage() {\n    this.forceReady();\n    if (await this._contract.num_messages({app_id: this.appId}) > 0) {\n      return await this.wrappedCall(() => this._contract.pull_message({}, GAS));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n    send a message to another account\n\n    @param {string} receiverId account id which will receive the message\n    @param {string} message the content of the message\n    @param {object} options to specify:\n      - {bool} `encrypted` flag indicating whether or not to encrypt the message with remote key. Default false.\n      - {string} `appId` the app ID to receive the message. Same app by default.\n   */\n  async sendMessage(receiverId, message, options) {\n    this.forceReady();\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    await this.wrappedCall(() => this._contract.send_message({\n      receiver_id: receiverId,\n      app_id: options.appId,\n      message,\n    }, GAS));\n  }\n}\n","(function() {\n    const CONTRACT_NAME = 'react-template'; /* TODO: fill this in!*/\n    const DEFAULT_ENV = 'development'; \n    \n    function getConfig(env) {\n        switch (env) {\n\n        case 'production':\n        case 'development':\n            return {\n                networkId: 'default',\n                nodeUrl: 'https://rpc.nearprotocol.com',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://wallet.nearprotocol.com',\n            };\n        case 'staging':\n            return {\n                networkId: 'staging',\n                nodeUrl: 'https://staging-rpc.nearprotocol.com/',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://near-wallet-staging.onrender.com',\n            };\n        case 'local':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                keyPath: `${process.env.HOME}/.near/validator_key.json`,\n                walletUrl: 'http://localhost:4000/wallet',\n                contractName: CONTRACT_NAME,\n            };\n        case 'test':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'test-remote':\n        case 'ci':\n            return {\n                networkId: 'shared-test',\n                nodeUrl: 'http://shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'ci-staging':\n            return {\n                networkId: 'shared-test-staging',\n                nodeUrl: 'http://staging-shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        default:\n            throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n        }\n    }\n    \n    let Cookies = require('js-cookie');\n    const cookieConfig = typeof Cookies != 'undefined' && Cookies.getJSON('fiddleConfig');\n    if (typeof module !== 'undefined' && module.exports) {\n        console.log(\"module works\")\n        module.exports = getConfig;\n    } else {\n        console.log(\"Cookie works\")\n        window.nearConfig =  cookieConfig && cookieConfig.nearPages ? cookieConfig : getConfig(DEFAULT_ENV);\n    }\n})();\n"],"sourceRoot":""}