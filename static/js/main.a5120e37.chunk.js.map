{"version":3,"sources":["assets/gray_near_logo.svg","assets/encryptionOn.png","assets/encryptionOff.png","assets/anon.png","apps/ProfileApp.js","apps/Chat/ChatApp.js","apps/MailApp.js","components/PowFaucet.js","Home.js","Auth.js","Router.js","index.js","apps/Chat/Channel.js","apps/Chat/ChatMessage.js"],"names":["module","exports","ProfileApp","props","keys","state","reduce","acc","key","chainValues","initialized","saving","hasChanges","appReady","profile","newState","this","setState","app","waitReady","then","maybeInit","prevProps","value","some","console","log","Object","assign","promises","forEach","push","set","Promise","all","f","sourceImage","Image","reader","FileReader","readAsDataURL","onload","canvas","document","createElement","aspect","naturalWidth","naturalHeight","width","Math","round","max","height","ctx","getContext","imageSmoothingQuality","fillStyle","fillRect","drawImage","options","toDataURL","sort","a","b","length","handleChange","event","src","target","result","e","className","onClick","logOut","accountId","profileUrl","displayName","bio","defaultProfileUrl","anon","onFetch","init","htmlFor","placeholder","id","disabled","onChange","type","onFilesChange","onError","onFilesError","multiple","accepts","minFileSize","clickable","save","role","aria-hidden","React","Component","ProfileInlineStyle","whiteSpace","display","profileImage","borderRadius","verticalAlign","marginRight","profileName","profileDisplayName","profileAccountId","ChatApp","text","channelId","sending","currentMessage","textInput","createRef","current","focus","senderId","time","Date","getTime","message","JSON","stringify","ChatMessage","channel_id","sendMessage","ChatContract","preventDefault","stopPropagation","Channel","styles","ref","onKeyDown","MailApp","receiverId","subject","content","numLetters","unread","expandedId","profileFound","profileLoading","keyLoading","theirPublicKey64","inbox","textarea","keyCache","letter","messageId","undefined","filter","read","onUnread","version","num","get","allMigrations","i","encrypted","resolve","catch","storeEncryptionPublicKey","migrateFrom","modifyLetter","fetchMessages","getStoredEncryptionPublicKey","fetchKey","stateChange","toLowerCase","replace","fetchTimeoutId","clearTimeout","pullMessage","setTimeout","inner","parse","isEncrypted","fromAppId","appId","decryptMessage","sender","decryptedMessage","trunc","newNumLetters","warn","error","encryptMessage","startsWith","toLocaleDateString","join","split","map","s","setSelectionRange","scrollLeft","scrollTop","remove","encryptionEnabled","displayEncryptionIcon","encryptionAlt","encryptionIcon","encryptionOn","encryptionOff","title","alt","updateKey","expanded","deleteLetter","replyTo","selectLetter","aria-label","receiverClass","rows","sendMail","Letter","t","toLocaleString","d","getDate","hour","getHours","minute","getMinutes","toString","padStart","daytime","timeFormat","ValidAccountRe","AuthDataKey","PowFaucet","connected","signedIn","newAccountId","creating","accountLoading","newAccountExists","computingProofOfWork","mounted","initNear","_authData","_keyStore","getKey","_nearConfig","networkId","keyPair","nearlib","fromString","setKey","account","_near","connection","_faucetContract","viewMethods","changeMethods","get_account_suffix","_accountSuffix","get_min_difficulty","_minDifficulty","get_num_created_accounts","numCreatedAccounts","nearConfig","nodeUrl","contractName","walletUrl","keyStore","BrowserLocalStorageKeyStore","deps","near","window","localStorage","getItem","initFaucet","isValidAccount","provider","query","_a","includes","match","publicKey","msg","TextEncoder","encode","data","charCodeAt","Uint8Array","len","bestDifficulty","salt","crypto","subtle","digest","hashBuffer","totalNumZeros","numZeros","clz32","proofOfWorkProgress","proofOfWorkDifficulty","proofOfWorkSalt","seed","generateSeedPhrase","newKeyPair","secretKey","computeProofOfWork","getPublicKey","create_account","account_id","public_key","setItem","onLogin","location","seedPhrase","removeItem","moveAccountToWallet","logout","newAccountClass","createAccount","style","aria-valuenow","aria-valuemin","aria-valuemax","Home","selectTab","index","defaultTabIndex","login","apps","logs","mailUnread","chatUnread","loading","offlineChatApp","signedInFlow","bind","requestSignIn","requestSignOut","signedOutFlow","checkSignIn","initMetaNearApp","loggedIn","walletAccount","isSignedIn","authData","concat","wallet","getAccountId","search","origin","pathname","code_hash","fetch","arrayBuffer","buf","deployContract","contract","new","masterContract","chat","mail","MetaNearApp","ready","getAccessPublicKey","pk","getSerializedAccessPublicKey","serializedPk","args","app_id","add_app_key","onKeyAdded","signOut","forceRenderTabPanel","defaultIndex","onSelect","flexGrow","nearlogo","Auth","values","queryString","pub_key","authorized","new_app_id","new_pub_key","res","Router","basename","process","hashType","exact","path","component","nearInitPromise","InitContract","ReactDOM","render","getElementById","messages","channelHash","cachedRanges","cachedMessages","fetchingMessages","channelInnerRef","textEncoder","Buffer","from","r","first","last","updateState","scrollHeight","scrollDown","cache","loadCache","fetchNewMessages","rs","fromIndex","toIndex","getFrom","ChannelMessages","from_index","limit","m","addNewMessage","sender_id","channel","ChannelStatus","channelStatus","numChannelMessages","num_messages","lastNumMessages","lastMessage","chatMessage","onReply","showMeta","pending","ProfileMessageStyle","p","toLocaleTimeString","formatTime","onProfile"],"mappings":"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","file":"static/js/main.a5120e37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gray_near_logo.55517b93.svg\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOn.23e3b306.png\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOff.475ce496.png\";","module.exports = __webpack_public_path__ + \"static/media/anon.5cbbd243.png\";","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport Files from \"react-files\";\nimport { Profile } from \"metanear-react-components\";\n\nconst uploadResizeWidth = 96;\nconst uploadResizeHeight = 96;\n\nexport class ProfileApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const keys = [\n      \"displayName\",\n      \"profileUrl\",\n      \"bio\",\n    ];\n    this.state = keys.reduce((acc, key) => {\n      acc[key] = \"\";\n      acc.chainValues[key] = null;\n      return acc;\n    }, {\n      keys,\n      chainValues: {},\n      initialized: false,\n      saving: false,\n      hasChanges: false,\n      appReady: false,\n    });\n  }\n\n  async init(profile) {\n    if (!profile) {\n      return;\n    }\n    const newState = this.state.keys.reduce((state, key) => {\n      state[key] = profile[key] || \"\";\n      state.chainValues[key] = state[key];\n      return state;\n    }, {\n      chainValues: {}\n    });\n    this.setState(newState);\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => {\n        this.setState({\n          appReady: true,\n        })\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  handleChange(key, value) {\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  hasChanges() {\n    return this.state.keys.some(key => this.state.chainValues[key] !== this.state[key]);\n  }\n\n  async save() {\n    this.setState({\n      saving: true,\n    });\n    console.log(\"Saving\");\n    const chainValues = Object.assign({}, this.state.chainValues);\n    const promises = [];\n    this.state.keys.forEach(key => {\n      if (this.state.chainValues[key] !== this.state[key]) {\n        chainValues[key] = this.state[key];\n        promises.push(this.props.app.set(key, this.state[key]).then(() => {\n          console.log(\"Updated key `\" + key + \"` to value `\" + this.state[key] + '`');\n        }));\n      }\n    });\n    Promise.all(promises).then(() => {\n      this.setState({\n        chainValues,\n        saving: false,\n      })\n    });\n  }\n\n  async onFilesChange(f) {\n    let sourceImage = new Image();\n    let reader = new FileReader();\n\n    reader.readAsDataURL(f[0]);\n\n    sourceImage.onload = () => {\n      // Create a canvas with the desired dimensions\n      let canvas = document.createElement(\"canvas\");\n      const aspect = sourceImage.naturalWidth / sourceImage.naturalHeight;\n      const width = Math.round(uploadResizeWidth * Math.max(1, aspect));\n      const height = Math.round(uploadResizeHeight * Math.max(1, 1 / aspect));\n      canvas.width = uploadResizeWidth;\n      canvas.height = uploadResizeHeight;\n      const ctx = canvas.getContext(\"2d\");\n\n      // Scale and draw the source image to the canvas\n      ctx.imageSmoothingQuality = \"high\";\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, uploadResizeWidth, uploadResizeHeight);\n      ctx.drawImage(sourceImage, (uploadResizeWidth - width) / 2, (uploadResizeHeight - height) / 2, width, height);\n\n      // Convert the canvas to a data URL in PNG format\n      const options = [\n        canvas.toDataURL('image/jpeg', 0.92),\n        // Disabling webp because it doesn't work on iOS.\n        // canvas.toDataURL('image/webp', 0.92),\n        canvas.toDataURL('image/png')\n      ];\n      options.sort((a, b) => a.length - b.length);\n\n      this.handleChange('profileUrl', options[0]);\n    }\n\n    reader.onload = function(event) {\n      sourceImage.src = event.target.result;\n    };\n  }\n\n  async onFilesError(e, f) {\n    console.log(e, f);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <button className=\"float-right\" onClick={this.props.logOut}>Log out</button>\n          <Profile\n            accountId={this.props.app && this.props.app.accountId}\n            profileUrl={this.state.profileUrl}\n            displayName={this.state.displayName}\n            bio={this.state.bio}\n            defaultProfileUrl={anon}\n            onFetch={(profile) => this.init(profile)}\n          />\n        </div>\n        <hr/>\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"displayName\">Display Name</label>\n            <input placeholder=\"The REAL Satoshi\" id=\"displayName\" className=\"form-control\" disabled={!this.props.app} value={this.state.displayName} onChange={(e) => this.handleChange('displayName', e.target.value)} />\n          </div>\n          <label htmlFor=\"profileUrl\">Profile URL</label>\n          <div className=\"input-group\">\n            <input placeholder={\"https://metanear.com\" + anon} id=\"profileUrl\" className=\"form-control\" disabled={!this.props.app} value={this.state.profileUrl}\n                   onChange={(e) => this.handleChange('profileUrl', e.target.value)}/>\n            <div className=\"input-group-append\">\n              <Files\n                type=\"button\"\n                className='btn btn-outline-primary'\n                onChange={(f) => this.onFilesChange(f)}\n                onError={(e, f) => this.onFilesError(e, f)}\n                multiple={false}\n                accepts={['image/*']}\n                minFileSize={1}\n                clickable\n              >\n                Click to upload\n              </Files>\n            </div>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"bio\">Bio</label>\n            <textarea placeholder=\"I'm working on Bitcoin, so bankers can go home.\" id=\"bio\" className=\"form-control\" disabled={!this.props.app} value={this.state.bio} onChange={(e) => this.handleChange('bio', e.target.value)} />\n          </div>\n          <div className=\"form-group\">\n            <button\n                className=\"btn btn-primary\"\n                disabled={this.state.saving || !this.hasChanges()}\n                onClick={() => this.save()}\n            >\n              {this.state.saving && (\n                  <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n              )} Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport anon from \"../../assets/anon.png\";\nimport { Profile } from \"metanear-react-components\";\nimport { Channel, ChatContract } from \"./Channel\";\nimport './Chat.css';\n\nconst ProfileInlineStyle = {\n  profile: {\n    whiteSpace: 'nowrap',\n    display: 'inline-block',\n  },\n  profileImage: {\n    height: '2em',\n    width: '2em',\n    borderRadius: '50%',\n    verticalAlign: 'middle',\n    marginRight: '0.5em',\n  },\n  profileName: {\n    display: 'none',\n  },\n  profileDisplayName: {},\n  profileAccountId: {},\n};\n\nexport class ChatApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      appReady: false,\n      text: \"\",\n      channelId: \"public\",\n      sending: false,\n      currentMessage: null,\n    };\n    this.textInput = React.createRef();\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => {\n        this.setState({\n          appReady: true,\n        }, () => {\n          this.textInput.current.focus();\n        })\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  handleChange(key, value) {\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  async sendMessage() {\n    console.log(\"Sending chat message\");\n    let text = this.state.text;\n    this.setState({\n      sending: true,\n      text: \"\",\n      currentMessage: {\n        text,\n        senderId: this.props.app.accountId,\n        time: new Date().getTime(),\n      }\n    });\n    try {\n      let message = JSON.stringify({\n        ChatMessage: {\n          channel_id: this.state.channelId,\n          text,\n        }\n      });\n      await this.props.app.sendMessage(ChatContract, message);\n      text = \"\";\n    } catch (e) {\n      console.log(\"Failed to send the chat message\", e);\n    } finally {\n      this.setState({\n        text,\n        sending: false,\n        currentMessage: null,\n      });\n    };\n  }\n\n  onKeyDown(event) {\n    // 'keypress' event misbehaves on mobile so we track 'Enter' key via 'keydown' event\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendMessage();\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"chat-app h100 cflex\">\n        <div className=\"channels\">\n          <div className=\"current-channel\">#{this.state.channelId}</div>\n        </div>\n        <Channel channelId={this.state.channelId} app={this.props.app} currentMessage={this.state.currentMessage}/>\n        <br/>\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            {this.state.appReady && (<Profile accountId={this.props.app.accountId} defaultProfileUrl={anon} styles={ProfileInlineStyle}/>)}\n          </div>\n          <input ref={this.textInput}\n                 id=\"text\"\n                 placeholder={\"Message #\" + this.state.channelId}\n                 className=\"form-control form-control\"\n                 disabled={!this.state.appReady || this.state.sending}\n                 value={this.state.text}\n                 onKeyDown={(e) => this.onKeyDown(e)}\n                 onChange={(e) => this.handleChange('text', e.target.value)}/>\n          <div className=\"input-group-append\">\n            <button\n                className='btn btn-primary'\n                disabled={!this.state.appReady || this.state.sending}\n                onClick={() => this.sendMessage()}\n            >\n              {this.state.sending && (\n                  <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n              )} Send\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport encryptionOn from \"../assets/encryptionOn.png\";\nimport encryptionOff from \"../assets/encryptionOff.png\";\nimport { Profile } from \"metanear-react-components\";\n\nconst RE = \"Re: \";\nconst currentVersion = 2;\n\nexport class MailApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      receiverId: \"\",\n      subject: \"\",\n      content: \"\",\n      sending: false,\n      numLetters: 0,\n      unread: 0,\n      expandedId: -1,\n      profileFound: false,\n      profileLoading: false,\n      keyLoading: false,\n      theirPublicKey64: null,\n      inbox: [],\n    }\n    this.textarea = React.createRef();\n    this.keyCache = {};\n  }\n\n  modifyLetter(letter, messageId) {\n    if (messageId === undefined) {\n      if (!letter) {\n        return;\n      }\n      messageId = letter.messageId;\n    }\n    const inbox = this.state.inbox.filter((a) => a.messageId !== messageId);\n    if (letter) {\n      inbox.push(letter);\n    }\n    inbox.sort((a, b) => b.time - a.time);\n    const unread = inbox.reduce((acc, letter) => acc + (letter.read ? 0: 1), 0);\n    this.setState({\n      inbox,\n      unread,\n    });\n    this.props.onUnread(unread);\n  }\n\n  async migrateFrom(version) {\n    if (version === 0) {\n      console.log(\"Migrating from version #0\");\n      let num = 0;\n      try {\n        num = await this.props.app.get('numLetters');\n      } catch (e) {\n        // whatever. Probably died during migration.\n      }\n      const allMigrations = [];\n      for (let i = 0; i < num; ++i) {\n        allMigrations.push(this.props.app.get('letter_' + i).then((letter) => {\n          if (letter) {\n            return this.props.app.set('letter_' + i, letter, {encrypted: true}).then(() => {\n              console.log(\"Migrated letter #\" + i);\n            })\n          }\n          return Promise.resolve();\n        }).catch((e) => console.log(\"Can't migrate letter #\", i, e)));\n      }\n      await Promise.all(allMigrations);\n      await this.props.app.set('numLetters', num, { encrypted: true });\n      version++;\n    }\n    if (version === 1) {\n      console.log(\"Migrating from version #1\");\n      await this.props.app.storeEncryptionPublicKey();\n      version++;\n    }\n    await this.props.app.set('version', version, { encrypted: true });\n  }\n\n  async init() {\n    let version;\n    try {\n      version = await this.props.app.get('version', {encrypted: true}) || 0;\n    } catch (e) {\n      // likely mismatched keys\n      console.log(e);\n      return;\n    }\n    if (version < currentVersion) {\n      await this.migrateFrom(version);\n    }\n    const num = await this.props.app.get('numLetters', { encrypted: true }) || 0;\n    this.setState({\n      numLetters: num,\n    });\n    for (let i = Math.max(0, num - 10); i < num; ++i) {\n      this.props.app.get('letter_' + i, {encrypted: true}).then((letter) => this.modifyLetter(letter));\n    }\n    this.fetchMessages();\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => this.init());\n    }\n  }\n\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  async fetchKey(accountId) {\n    if (accountId in this.keyCache) {\n      return await this.keyCache[accountId];\n    } else {\n      console.log(\"Fetching key for \" + accountId);\n      this.keyCache[accountId] = this.props.app.getStoredEncryptionPublicKey(accountId, {}).catch((e) => false);\n      return await this.keyCache[accountId];\n    }\n  }\n\n  updateKey(profile) {\n    if (!this.props.app) {\n      return;\n    }\n    this.setState({\n      profileLoading: false,\n      profileFound: !!profile,\n    });\n    if (!profile) {\n      return;\n    }\n    this.setState({\n      keyLoading: true,\n    })\n    this.fetchKey(profile.accountId).then((theirPublicKey64) => {\n      this.setState({\n        keyLoading: false,\n        theirPublicKey64,\n      })\n    });\n  }\n\n  handleChange(key, value) {\n    const stateChange = {\n      [key]: value,\n    };\n    if (key === 'receiverId') {\n      value = value.toLowerCase().replace(/[^a-z0-9\\-_.]/, '');\n      stateChange[key] = value;\n      stateChange.profileLoading = true;\n      stateChange.theirPublicKey64 = false;\n    }\n    this.setState(stateChange);\n  }\n\n  async fetchMessages() {\n    if (!this.props.app) {\n      return;\n    }\n    if (this.fetchTimeoutId) {\n      clearTimeout(this.fetchTimeoutId);\n      this.fetchTimeoutId = null;\n    }\n    console.log(\"Fetching messages\");\n    const message = await this.props.app.pullMessage();\n    if (!message) {\n      this.fetchTimeoutId = setTimeout(() => { this.fetchMessages() }, 60 * 1000);\n      return;\n    }\n    try {\n      console.log(message);\n      let inner = JSON.parse(message.message);\n      const isEncrypted = inner.type === 'encrypted';\n      const fromAppId = inner.fromAppId || this.props.app.appId;\n      if (isEncrypted) {\n        const decryptedMessage = await this.props.app.decryptMessage(inner.content, {\n          accountId: message.sender,\n          appId: inner.fromAppId,\n        });\n        inner = JSON.parse(decryptedMessage);\n      }\n      if (inner.type === 'mail') {\n        const letter = {\n          messageId: this.state.numLetters,\n          isEncrypted,\n          fromAppId,\n          sender: message.sender,\n          subject: inner.subject,\n          content: inner.content,\n          time: Math.trunc(message.time / 1000000),\n        }\n        const newNumLetters = this.state.numLetters + 1;\n        this.setState({\n          numLetters: newNumLetters,\n        });\n\n        this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n          console.log(\"Saved the letter: \", letter);\n        });\n        this.props.app.set(\"numLetters\", newNumLetters, {encrypted: true}).then(() => {\n            console.log(\"Saved the new number of letters: \", newNumLetters);\n        });\n        this.modifyLetter(letter);\n      } else {\n        console.warn(\"Unknown message\", message);\n      }\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.fetchMessages()\n    }\n  }\n\n  async sendMail() {\n    if (!this.state.profileFound) {\n      return;\n    }\n    console.log(\"Sending mail\");\n    this.setState({\n      sending: true,\n    });\n    try {\n      let message = JSON.stringify({\n        type: \"mail\",\n        subject: this.state.subject,\n        content: this.state.content,\n      });\n      if (this.state.theirPublicKey64) {\n        const content = await this.props.app.encryptMessage(message, {\n          theirPublicKey64: this.state.theirPublicKey64,\n        });\n        message = JSON.stringify({\n          type: \"encrypted\",\n          fromAppId: this.props.app.appId,\n          content,\n        })\n      }\n      await this.props.app.sendMessage(this.state.receiverId, message);\n      this.setState({\n        subject: \"\",\n        content: \"\",\n      })\n    } catch (e) {\n      console.log(\"Failed to send the message\", e);\n    } finally {\n      this.setState({\n        sending: false,\n      });\n      setTimeout(() => this.fetchMessages(), 2000);\n    };\n  }\n\n  receiverClass() {\n    if (!this.state.receiverId || this.state.profileLoading) {\n      return \"form-control\";\n    } else if (this.state.profileFound) {\n      return \"form-control is-valid\";\n    } else {\n      return \"form-control is-invalid\";\n    }\n  }\n\n  replyTo(letter, displayName) {\n    this.handleChange(\"receiverId\", letter.sender);\n    this.setState({\n      subject: (letter.subject.startsWith(RE) ? \"\" : RE) + letter.subject,\n      content: [\n        \"\",\n        \"\",\n        [\"On\", new Date(letter.time).toLocaleDateString(), displayName, \"@\" + letter.sender, \"wrote:\"].join(' '),\n        ...letter.content.split(/\\r?\\n/).map(s => \"| \" + s)\n      ].join(\"\\n\"),\n    }, () => {\n      this.textarea.current.focus();\n      this.textarea.current.setSelectionRange(0, 0);\n      this.textarea.current.scrollLeft = 0;\n      this.textarea.current.scrollTop = 0;\n    });\n  }\n\n  selectLetter(letter) {\n    this.setState({\n      expandedId: (this.state.expandedId === letter.messageId) ? -1 : letter.messageId,\n    });\n    if (!letter.read) {\n      letter = JSON.parse(JSON.stringify(letter));\n      letter.read = true;\n      this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n        console.log(\"Saved the letter: \", letter);\n      });\n      this.modifyLetter(letter);\n    }\n  }\n\n  deleteLetter(letter) {\n    this.props.app.remove(\"letter_\" + letter.messageId).then(() => {\n      console.log(\"Deleted the letter: \", letter);\n    });\n    this.modifyLetter(null, letter.messageId);\n  }\n\n  render() {\n    const encryptionEnabled = this.state.theirPublicKey64;\n    const displayEncryptionIcon = this.state.profileFound && !this.state.keyLoading;\n    const encryptionAlt = encryptionEnabled ? \"Encryption is ON\" : \"Not secure! Encryption is OFF\";\n    const encryptionIcon = displayEncryptionIcon &&\n      <img className=\"encryption-icon\" src={encryptionEnabled ? encryptionOn : encryptionOff}\n          title={encryptionAlt} alt={encryptionAlt}/>;\n    const profile = <Profile accountId={this.state.receiverId} onFetch={(profile) => this.updateKey(profile)} defaultProfileUrl={anon}/>;\n    const inbox = this.state.inbox.map((letter, i) => (\n      <Letter\n        key={letter.messageId}\n        letter={letter}\n        expanded={letter.messageId === this.state.expandedId}\n        deleteLetter={(letter) => this.deleteLetter(letter)}\n        replyTo={(letter, displayName) => this.replyTo(letter, displayName)}\n        selectLetter={(letter) => this.selectLetter(letter)} />\n    ));\n    return (\n      <div>\n        Inbox <button className=\"btn btn-sm\" onClick={() => this.fetchMessages()}><span role=\"img\" aria-label=\"Refresh\">🔄</span></button>\n        <div>\n          {inbox}\n        </div>\n        <h3>Send</h3>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label className=\"sr-only\" htmlFor=\"toAccountId\">To Account ID</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">@</div>\n                </div>\n                <input type=\"text\" className={this.receiverClass()} id=\"toAccountId\" placeholder=\"To Account ID\" value={this.state.receiverId} disabled={!this.props.app} onChange={(e) => this.handleChange('receiverId', e.target.value)} />\n              </div>\n            </div>\n          </div>\n          {profile}\n        </div>\n        <div className=\"form-group\">\n          <label className=\"sr-only\" htmlFor=\"subject\">Subject</label>\n          <input type=\"text\" className=\"form-control\" id=\"subject\" placeholder=\"Subject\" disabled={!this.props.app} value={this.state.subject} onChange={(e) => this.handleChange('subject', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <textarea ref={this.textarea} id=\"content\" className=\"form-control\" rows=\"7\" disabled={!this.props.app} value={this.state.content} onChange={(e) => this.handleChange('content', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <button className={\"form-control form-control-lg btn \" + (displayEncryptionIcon && !encryptionEnabled ? \"btn-danger\" : \"btn-primary\")} disabled={!this.state.profileFound || this.state.sending} onClick={() => this.sendMail()}>\n            Send {encryptionIcon}</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport class Letter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: {\n        profileUrl: null,\n        displayName: '@' + props.letter.sender,\n      },\n    };\n  }\n\n  onClick() {\n    this.props.selectLetter(this.props.letter);\n  }\n\n  render() {\n    const profile = (\n      <div className=\"col-sm-6 col-md-4 col-lg-4 letter-profile\">\n        <Profile accountId={this.props.letter.sender} onFetch={(profile) => profile && this.setState({displayName: profile.displayName})} defaultProfileUrl={anon}/>\n      </div>\n    );\n    const subject = (\n      <div className=\"col-sm-4 col-md\">\n        <div className=\"letter-subject\">{this.props.letter.subject}</div>\n      </div>\n    );\n    const time = this.props.expanded ? (\n      <div className=\"col-sm-2 col-lg-2\">\n        <div className=\"letter-time\">{longTimeFormat(this.props.letter.time)}</div>\n      </div>\n    ) : (\n      <div className=\"col-sm-2 col-lg-1 d-none d-md-block\">\n        <div className=\"letter-time\">{timeFormat(this.props.letter.time)}</div>\n      </div>\n    );\n    if (this.props.expanded) {\n      return (\n        <div className=\"letter letter-expanded\">\n          <div className=\"row letter-expanded-header\" onClick={() => this.onClick()}>\n            {profile}\n            {subject}\n            {time}\n          </div>\n          <div className=\"letter-content-expanded\">\n            <pre>{this.props.letter.content}</pre>\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <button className=\"btn btn-primary\" onClick={() => this.props.replyTo(this.props.letter, this.state.displayName)}>Reply</button>\n              </div>\n              <div className=\"col-sm\">\n                <button className=\"btn btn-danger float-right\" onClick={() => this.props.deleteLetter(this.props.letter)}>DELETE THIS!</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={\"row letter letter-small\" + (this.props.letter.read ? \" letter-read\" : \" letter-unread\")} onClick={() => this.onClick()}>\n          {profile}\n          {subject}\n          <div className=\"col-sm d-none d-lg-block\">\n            <div className=\"letter-content\">{this.props.letter.content}</div>\n          </div>\n          {time}\n        </div>\n      );\n    }\n  }\n}\n\nfunction longTimeFormat(t) {\n  return new Date(t).toLocaleString();\n}\n\nfunction timeFormat(t) {\n  const d = new Date(t);\n  const now = new Date();\n  if (now.getDate() === d.getDate()) {\n    const hour = d.getHours() % 12;\n    const minute = d.getMinutes().toString().padStart(2, '0');\n    const daytime = d.getHours() >= 12 ? \"PM\" : \"AM\";\n    return `${hour}:${minute} ${daytime}`;\n  } else {\n    return d.toLocaleDateString();\n  }\n}\n","import React from 'react';\nimport * as nearlib from 'nearlib';\nimport { generateSeedPhrase } from 'near-seed-phrase';\n\nconst FaucetPrivateKey = 'ed25519:2Rtn6ms22rCRMgmGgLRSPPd6gYDCgWDuFrX6gERknSA8GKiCHE5L9Rksc1ihsSCDvMSptfbipzq29H7cDZhR1Ze3';\nconst FaucetName = 'meta';\nconst MinAccountIdLen = 2;\nconst MaxAccountIdLen = 64;\nconst ValidAccountRe = /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\nexport const AuthDataKey = \"meta-faucet-auth-data\";\n\nexport class PowFaucet extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            connected: false,\n            signedIn: false,\n            accountId: null,\n            newAccountId: \"\",\n            creating: false,\n            accountLoading: false,\n            newAccountExists: false,\n            computingProofOfWork: false,\n        };\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.initNear().then(() => {\n            this.mounted && this.setState({\n                connected: true,\n                signedIn: !!this._authData.accountId,\n                accountId: this._authData.accountId,\n            })\n        })\n    }\n\n    async initFaucet() {\n        let key = await this._keyStore.getKey(this._nearConfig.networkId, FaucetName);\n        if (!key) {\n            const keyPair = nearlib.KeyPair.fromString(FaucetPrivateKey);\n            await this._keyStore.setKey(this._nearConfig.networkId, FaucetName, keyPair);\n        }\n        const account = new nearlib.Account(this._near.connection, FaucetName);\n        this._faucetContract =  new nearlib.Contract(account, FaucetName, {\n            viewMethods: ['get_min_difficulty', 'get_account_suffix', 'get_num_created_accounts'],\n            changeMethods: ['create_account'],\n            sender: FaucetName\n        });\n        this._accountSuffix = await this._faucetContract.get_account_suffix();\n        this._minDifficulty = await this._faucetContract.get_min_difficulty();\n        this.mounted && this.setState({\n            numCreatedAccounts: await this._faucetContract.get_num_created_accounts(),\n        });\n        // console.log(JSON.stringify([...key.getPublicKey().data]));\n    }\n\n    async initNear() {\n        const nearConfig = {\n            networkId: 'default',\n            nodeUrl: 'https://rpc.nearprotocol.com',\n            contractName: FaucetName,\n            walletUrl: 'https://wallet.nearprotocol.com',\n        };\n        const keyStore = new nearlib.keyStores.BrowserLocalStorageKeyStore();\n        const near = await nearlib.connect(Object.assign({ deps: { keyStore } }, nearConfig));\n        this._keyStore = keyStore;\n        this._nearConfig = nearConfig;\n        this._near = near;\n\n        this._authData = JSON.parse(window.localStorage.getItem(AuthDataKey) || '{}');\n        await this.initFaucet();\n    }\n\n    handleChange(key, value) {\n        const stateChange = {\n            [key]: value,\n        };\n        if (key === 'newAccountId') {\n            value = value.toLowerCase().replace(/[^a-z0-9\\-_.]/, '');\n            stateChange[key] = value;\n            stateChange.newAccountExists = false;\n            if (this.isValidAccount(value)) {\n                stateChange.accountLoading = true;\n                this._near.connection.provider.query(`account/${value + this._accountSuffix}`, '').then((_a) => {\n                    if (this.state.newAccountId === value) {\n                        this.setState({\n                            accountLoading: false,\n                            newAccountExists: true,\n                        })\n                    }\n                }).catch((e) => {\n                    if (this.state.newAccountId === value) {\n                        this.setState({\n                            accountLoading: false,\n                            newAccountExists: false,\n                        })\n                    }\n                })\n            }\n        }\n        this.setState(stateChange);\n    }\n\n    isValidAccount(newAccountId) {\n        if (newAccountId.includes('.')) {\n            return false;\n        }\n        const accountId = newAccountId + this._accountSuffix;\n        return accountId.length >= MinAccountIdLen &&\n            accountId.length <= MaxAccountIdLen &&\n            accountId.match(ValidAccountRe);\n    }\n\n    newAccountClass() {\n        if (!this.state.newAccountId || this.state.accountLoading) {\n            return \"form-control form-control-large\";\n        } else if (!this.state.newAccountExists && this.isValidAccount(this.state.newAccountId)) {\n            return \"form-control form-control-large is-valid\";\n        } else {\n            return \"form-control form-control-large is-invalid\";\n        }\n    }\n\n    async computeProofOfWork(accountId, publicKey) {\n        let msg = [...new TextEncoder('utf-8').encode(accountId + ':')];\n        // curve\n        msg.push(0);\n        // key\n        msg.push(...publicKey.data);\n        // separator\n        msg.push(':'.charCodeAt(0));\n        // salt\n        msg.push(0, 0, 0, 0, 0, 0, 0, 0);\n        msg = new Uint8Array(msg);\n        const len = msg.length;\n        let bestDifficulty = 0;\n        for (let salt = 0; ; ++salt) {\n            // compute hash\n            const hashBuffer = new Uint8Array(await crypto.subtle.digest('SHA-256', msg));\n            // compute number of leading zero bits\n            let totalNumZeros = 0;\n            for (let i = 0; i < hashBuffer.length; ++i) {\n                let numZeros = Math.clz32(hashBuffer[i]) - 24;\n                totalNumZeros += numZeros;\n                if (numZeros < 8) {\n                    break;\n                }\n            }\n            // checking difficulty\n            if (totalNumZeros >= this._minDifficulty) {\n                this.setState({\n                    computingProofOfWork: false,\n                });\n                return salt;\n            } else if (totalNumZeros > bestDifficulty) {\n                bestDifficulty = totalNumZeros;\n                this.setState({\n                    proofOfWorkProgress: Math.trunc(bestDifficulty * 100 / this._minDifficulty),\n                    proofOfWorkDifficulty: bestDifficulty,\n                    proofOfWorkSalt: salt,\n                });\n            } else if (salt % 10000 === 0) {\n                this.setState({\n                    proofOfWorkSalt: salt\n                });\n            }\n            // incrementing salt\n            for (let i = len - 8; i < len; ++i) {\n                if (msg[i] === 255) {\n                    msg[i] = 0;\n                } else {\n                    ++msg[i];\n                    break;\n                }\n            }\n        }\n    }\n\n    async createAccount() {\n        this.setState({\n            creating: true,\n            computingProofOfWork: true,\n            proofOfWorkProgress: 0,\n            proofOfWorkDifficulty: 0,\n            proofOfWorkSalt: 0,\n        })\n        const newAccountId = this.state.newAccountId + this._accountSuffix;\n        const seed = generateSeedPhrase();\n        const newKeyPair = nearlib.KeyPair.fromString(seed.secretKey);\n        const salt = await this.computeProofOfWork(newAccountId, newKeyPair.getPublicKey());\n        await this._faucetContract.create_account({\n            account_id: newAccountId,\n            public_key: [0, ...newKeyPair.getPublicKey().data],\n            salt,\n        });\n        await this._keyStore.setKey(this._nearConfig.networkId, newAccountId, newKeyPair);\n        this._authData = {\n            accountId: newAccountId,\n            seed,\n        };\n        window.localStorage.setItem(AuthDataKey, JSON.stringify(this._authData));\n        this.setState({\n            signedIn: true,\n            accountId: newAccountId,\n            creating: false,\n            numCreatedAccounts: await this._faucetContract.get_num_created_accounts(),\n        })\n        this.props.onLogin(this._authData);\n    }\n\n    moveAccountToWallet() {\n        window.location = `https://wallet.nearprotocol.com/recover-with-link/${this._authData.accountId}/${this._authData.seed.seedPhrase}`;\n    }\n\n    logout() {\n        window.localStorage.removeItem(AuthDataKey);\n        this._authData = {};\n        this.setState({\n            signedIn: false,\n            accountId: null,\n            newAccountId: \"\",\n            creating: false,\n            accountLoading: false,\n            newAccountExists: false,\n            computingProofOfWork: false,\n        });\n    }\n\n    render() {\n        const content = !this.state.connected ? (\n            <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n        ) : (this.state.signedIn ? (\n            <div>\n                <h3>Hello, {this.state.accountId}</h3>\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-success\"\n                        onClick={() => this.moveAccountToWallet()}\n                    >\n                        Move account to NEAR Wallet\n                    </button>\n                </div>\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-danger\"\n                        onClick={() => this.logout()}\n                    >\n                        Logout from Faucet\n                    </button>\n                </div>\n            </div>\n        ) : (\n            <div>\n                <div className=\"form-group\">\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <div className=\"input-group-text\">{\"@\"}</div>\n                        </div>\n                        <input\n                            placeholder=\"bob\"\n                            id=\"accountId\"\n                            className={this.newAccountClass()}\n                            value={this.state.newAccountId}\n                            onChange={(e) => this.handleChange('newAccountId', e.target.value)}\n                            disabled={this.state.creating}\n                        />\n                        <div className=\"input-group-append\">\n                            <div className=\"input-group-text\">{this._accountSuffix}</div>\n                        </div>\n                    </div>\n                </div>\n                {this.state.newAccountExists && (\n                    <div className=\"alert alert-warning\" role=\"alert\">\n                        Account {'\"' + this.state.newAccountId + this._accountSuffix + '\"'} already exists!\n                    </div>\n                )}\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-primary\"\n                        disabled={this.state.creating || this.state.accountLoading || this.state.newAccountExists || !this.isValidAccount(this.state.newAccountId)}\n                        onClick={() => this.createAccount()}\n                    >\n                        {(this.state.creating || this.state.accountLoading) && (\n                            <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                        )} Create Account {this.isValidAccount(this.state.newAccountId) ? ('\"' + this.state.newAccountId + this._accountSuffix + '\"') : \"\"}\n                    </button>\n                </div>\n                {this.state.creating && (\n                    <div>\n                        {this.state.computingProofOfWork ? (\n                            <div>\n                                Computing Proof of Work. Done {this.state.proofOfWorkSalt} operations.\n                                <div className=\"progress\">\n                                    <div className=\"progress-bar\" role=\"progressbar\" style={{width: this.state.proofOfWorkProgress + '%'}} aria-valuenow={this.state.proofOfWorkProgress} aria-valuemin=\"0\"\n                                         aria-valuemax=\"100\">{this.state.proofOfWorkDifficulty} out of {this._minDifficulty}\n                                    </div>\n                                </div>\n                            </div>\n                        ) : (\n                            <div>\n                                Proof of Work is Done! Creating account {'\"' + this.state.newAccountId + this._accountSuffix + '\"'}\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        ));\n        return (\n            <div>\n                <h3>or create a new account</h3>\n                {content}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport nearlogo from './assets/gray_near_logo.svg';\nimport './css/App.css';\nimport * as nearlib from \"nearlib\";\nimport { MetaNearApp } from 'metanear-sdk-js';\nimport { ProfileApp } from \"./apps/ProfileApp\";\nimport { ChatApp } from \"./apps/Chat/ChatApp\";\nimport { MailApp } from \"./apps/MailApp\";\n// import { KeysApp } from \"./apps/KeysApp\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { PowFaucet, AuthDataKey}  from \"./components/PowFaucet\";\nimport {Channel} from \"./apps/Chat/Channel\";\n\nconst GAS = 200_000_000_000_000;\nconst TITLE = \"Meta NEAR - User-centric web\"\nconst DefaultTabIndexKey = \"metanearDefaultTabIndex\";\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: false,\n      apps: {},\n      logs: [],\n      mailUnread: 0,\n      chatUnread: 0,\n      loading: false,\n      defaultTabIndex: JSON.parse(window.localStorage.getItem(DefaultTabIndexKey) || '0'),\n      offlineChatApp: null,\n    }\n    this.signedInFlow = this.signedInFlow.bind(this);\n    this.requestSignIn = this.requestSignIn.bind(this);\n    this.requestSignOut = this.requestSignOut.bind(this);\n    this.signedOutFlow = this.signedOutFlow.bind(this);\n    this.checkSignIn = this.checkSignIn.bind(this);\n    this.initMetaNearApp = this.initMetaNearApp.bind(this);\n    window.nearlib = nearlib;\n  }\n\n  componentDidMount() {\n    this.checkSignIn();\n  }\n\n  async checkSignIn() {\n    let loggedIn = window.walletAccount.isSignedIn();\n    let authData = JSON.parse(window.localStorage.getItem(AuthDataKey) || '{}');\n    if (loggedIn || authData.accountId) {\n      await this.signedInFlow(authData);\n    } else {\n      this.signedOutFlow();\n    }\n  }\n\n  log(message) {\n    console.log(message);\n    this.setState({\n      logs: this.state.logs.concat([message])\n    })\n  }\n\n  async signedInFlow(authData) {\n    const accountId = authData.accountId || await this.props.wallet.getAccountId();\n    this.setState({\n      login: true,\n      loading: true,\n      accountId,\n    })\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    if (window.location.search.includes(\"all_keys\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    // Initializing our contract APIs by contract name and configuration.\n\n    this.log(\"Connecting to account...\");\n    const account = await new nearlib.Account(window.near.connection, accountId);\n    this.log(\"Querying state...\");\n    let state = await account.state();\n    /*\n    await new Promise((resolve, reject) =>{\n      setTimeout(() => {\n        resolve();\n      }, 5000);\n    })\n     */\n    console.log(state);\n    if (state.code_hash !== 'F6iocDrCDzBCxUN9PKPeVp7GqDuPve4g3ypHQQrmEw5E') {\n      this.log(\"Going to deploy the code\");\n      // no code. Need to deploy.\n      this.log(\"Downloading started...\");\n      let data = await fetch('/metanear_user.wasm');\n      let buf = await data.arrayBuffer();\n      this.log(\"Downloading done. Deploying contract...\");\n      await account.deployContract(new Uint8Array(buf));\n      if (state.code_hash === '11111111111111111111111111111111') {\n        this.log(\"Deploying done. Initializing contract...\");\n        // Gotta init it.\n        let contract = await new nearlib.Contract(account, accountId, {\n          viewMethods: [],\n          // Change methods can modify the state. But you don't receive the returned value when called.\n          changeMethods: ['new'],\n          // Sender is the account ID to initialize transactions.\n          sender: accountId\n        });\n        console.log(await contract.new());\n      }\n      this.log(\"The contract is deployed\");\n    }\n\n    const masterContract = await new nearlib.Contract(account, accountId, {\n      // View methods are read only. They don't modify the state, but usually return some value.\n      viewMethods: ['apps'],\n      // Change methods can modify the state. But you don't receive the returned value when called.\n      changeMethods: ['add_app_key', 'remove_app_key'],\n      // Sender is the account ID to initialize transactions.\n      sender: accountId\n    });\n\n    this.masterContract = masterContract;\n    window.masterContract = masterContract;\n    this.log(\"Fetching authorized apps...\");\n    console.log(\"Apps:\", await masterContract.apps());\n\n    this.log(\"Initializing local apps...\");\n    const apps = {\n      profile: await this.initMetaNearApp('profile', accountId),\n      chat: await this.initMetaNearApp('chat', accountId),\n      mail: await this.initMetaNearApp('mail', accountId),\n      // keys: await this.initMetaNearApp('keys', accountId)\n    };\n    window.apps = apps;\n    this.apps = apps;\n    this.setState({\n      apps,\n      loading: false,\n    })\n  }\n\n  async initMetaNearApp(appId, accountId) {\n    this.log(\"Initializing app: \" + appId + \" ...\");\n    const app = new MetaNearApp(appId, accountId, window.nearConfig);\n    await app.init();\n    if (!await app.ready()) {\n      let pk = await app.getAccessPublicKey();\n      this.log(\"Authorizing app for key \" + pk.toString() + \" ...\");\n      const serializedPk = await app.getSerializedAccessPublicKey();\n      const args = {\n        public_key: [...serializedPk],\n        app_id: appId,\n      };\n      await this.masterContract.add_app_key(args, GAS);\n      await app.onKeyAdded();\n    }\n    return app;\n  }\n\n  async requestSignIn() {\n    const appTitle = 'Open Web Home';\n    await this.props.wallet.requestSignIn(\n      \"\",\n      appTitle\n    )\n  }\n\n  requestSignOut() {\n    this.props.wallet.signOut();\n    setTimeout(this.signedOutFlow, 500);\n    console.log(\"after sign out\", this.props.wallet.isSignedIn())\n  }\n\n\n  async signedOutFlow() {\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    this.setState({\n      login: false,\n    })\n    if (!this.state.offlineChatApp) {\n      const app = new MetaNearApp(\"chat\", null, window.nearConfig);\n      await app.init();\n      this.setState({\n        offlineChatApp: app,\n      })\n    }\n  }\n\n  selectTab = (index) => {\n    window.localStorage.setItem(DefaultTabIndexKey, JSON.stringify(index));\n    this.setState({\n      defaultTabIndex: index,\n    })\n  }\n\n  render() {\n    const unread = this.state.mailUnread + this.state.chatUnread;\n    document.title = (unread ? `(${unread}) ` : \"\") + TITLE;\n    if (!this.state.login) {\n      return <div className=\"App-header\">\n        <div>\n          <div className=\"image-wrapper\">\n            <img className=\"logo\" src={nearlogo} alt=\"NEAR logo\"/>\n          </div>\n          <div>\n            <button\n                className=\"btn btn-primary\"\n                onClick={this.requestSignIn}>Log in with NEAR Wallet</button>\n          </div>\n          <PowFaucet onLogin={this.signedInFlow}/>\n          <hr/>\n          <div>\n            <h3>To join #public chat </h3>\n            <Channel channelId=\"public\" app={this.state.offlineChatApp}/>\n          </div>\n        </div>\n      </div>\n    } else if (this.state.loading) {\n      return <div className=\"loading-div\">\n        <div className=\"spinner-grow loading-spinner\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <pre className=\"text-left\">\n          {this.state.logs.join(\"\\n\")}\n        </pre>\n      </div>\n    } else {\n      return <div className={\"h100 apps\" + (this.state.loading ? \" d-none\" : \"\")}>\n        <Tabs className=\"h100 cflex\" forceRenderTabPanel={true} defaultIndex={this.state.defaultTabIndex} onSelect={(i) => this.selectTab(i)}>\n          <TabList>\n            <Tab>Profile</Tab>\n            <Tab>Public Chat {this.state.chatUnread ? `(${this.state.chatUnread})` : \"\"}</Tab>\n            <Tab>Mail {this.state.mailUnread ? `(${this.state.mailUnread})` : \"\"}</Tab>\n            {/*<Tab>Keys</Tab>*/}\n          </TabList>\n\n          <TabPanel>\n            <ProfileApp app={this.state.apps.profile} logOut={this.requestSignOut}/>\n          </TabPanel>\n          <TabPanel style={{flexGrow: '1'}}>\n            <ChatApp app={this.state.apps.chat} onUnread={(chatUnread) => this.setState({chatUnread})}/>\n          </TabPanel>\n          <TabPanel>\n            <MailApp app={this.state.apps.mail} onUnread={(mailUnread) => this.setState({mailUnread})}/>\n          </TabPanel>\n          {/*<TabPanel>\n            <KeysApp app={this.state.apps.keys}/>\n          </TabPanel>*/}\n        </Tabs>\n      </div>\n    }\n  }\n}\n","import React from \"react\";\nimport queryString from 'query-string';\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    const values = queryString.parse(this.props.location.search);\n    let {app_id, pub_key} = values;\n    if (app_id && pub_key) {\n      this.state = {\n        authorized:false,\n        new_app_id:app_id,\n        new_pub_key:pub_key\n      };\n    } else {\n      this.state = {\n        authorized:false,\n        new_app_id:\"\",\n        new_pub_key:\"\"\n      }\n    }\n  }\n\n componentDidMount() {\n    if (!this.props.loading && this.state.new_app_id && this.state.new_pub_key) {\n      this.props.initMetaNearApp(this.state.new_app_id, this.state.new_pub_key)\n        .then(res => {\n          this.setState({\n            authorized: true\n          })\n        });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      // this.init();\n    }\n  }\n\n  // async fetchProfile(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  // async registerNewApp(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  render() {\n    return (\n      <div>\n        {this.state.authorized ?\n        <div>\n          <p>App <strong>{this.state.new_app_id}</strong> was added</p>\n          <p> Using the public key: {this.state.new_pub_key} </p>\n        </div> :\n        \"You need pass a key in order to add an app\"\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport { Home } from './Home';\nimport { Auth } from './Auth';\n\nclass Router extends Component {\n  render() {\n    return (\n      <HashRouter basename={process.env.PUBLIC_URL} hashType=\"noslash\">\n        <Switch>\n          <Route exact path=\"/\" component={() => <Home {...this.props}/>} />\n          <Route path=\"/auth\" component={() => <Auth {...this.props}/>} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport * as nearlib from 'nearlib';\n\n// Initializing contract\nasync function InitContract() {\n    window.nearConfig = {\n        networkId: 'default',\n        nodeUrl: 'https://rpc.nearprotocol.com',\n        walletUrl: 'https://wallet.nearprotocol.com',\n    };\n\n    // Initializing connection to the NEAR DevNet.\n    window.near = await nearlib.connect(Object.assign({ deps: { keyStore: new nearlib.keyStores.BrowserLocalStorageKeyStore() } }, window.nearConfig));\n\n    // Needed to access wallet login\n    window.walletAccount = new nearlib.WalletAccount(window.near);\n\n    // Getting the Account ID. If unauthorized yet, it's just empty string.\n    window.accountId = window.walletAccount.getAccountId();\n\n}\n\nwindow.nearInitPromise = InitContract().then(() => {\n    ReactDOM.render(<Router contract={window.contract} wallet={window.walletAccount}/>,\n      document.getElementById('root')\n    );\n  }).catch(console.error)\n","import React from \"react\";\nimport { ChatMessage } from \"./ChatMessage\";\n\nexport const ChatContract = 'metanear-chat';\n\nconst FetchMessagesLimit = 10;\nconst MinTimeDiffForMetaMs = 5 * 60 * 1000;\n\nexport class Channel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            initialized: false,\n            appReady: false,\n            messages: [],\n        };\n        this.channelId = null;\n        this.channelHash = null;\n        this.cachedRanges = null;\n        this.cachedMessages = {};\n        this.fetchingMessages = false;\n        this.fetchTimeoutId = null;\n        this.channelInnerRef = React.createRef();\n        this.mounted = false;\n    }\n\n    async loadCache(channelId) {\n        const textEncoder = new TextEncoder('utf-8');\n        const buf = textEncoder.encode('c:' + channelId);\n\n        this.channelId = channelId;\n        this.cachedMessages = {};\n        this.channelHash =  Buffer.from(await crypto.subtle.digest('SHA-256', buf)).toString('base64');\n\n        this.cachedRanges = JSON.parse(window.localStorage.getItem(this.channelHash + ':cachedRanges') || \"null\") || []\n        this.cachedRanges.forEach((r) => {\n            for (let i = r.first; i < r.last; ++i) {\n                this.cachedMessages[i] = JSON.parse(window.localStorage.getItem(this.channelHash + ':m:' + i) || \"null\");\n            }\n        });\n        this.updateState(true);\n    }\n\n    scrollDown() {\n        this.channelInnerRef.current.scrollTop = this.channelInnerRef.current.scrollHeight;\n    }\n\n    updateState(scrollDown) {\n        if (!this.mounted) {\n            return;\n        }\n        this.setState({\n            messages: Object.values(this.cachedMessages)\n        }, () => {\n            if (scrollDown)  {\n                this.scrollDown();\n            }\n        })\n    }\n\n    maybeInit() {\n        if (this.props.channelId && this.channelId !== this.props.channelId) {\n            const cache = this.loadCache(this.props.channelId);\n            if (this.state.appReady) {\n                cache.then(() => {\n                    this.fetchNewMessages();\n                });\n            }\n        }\n        if (this.props.app && !this.state.initialized) {\n            this.setState({\n                initialized: true,\n                appReady: true,\n            });\n            this.fetchNewMessages();\n        }\n    }\n\n    componentDidMount() {\n        this.maybeInit()\n        this.mounted = true;\n    }\n\n    componentDidUpdate(prevProps) {\n        this.maybeInit()\n        if (this.props.currentMessage) {\n            setTimeout(() => {\n                this.scrollDown();\n            }, 10);\n        }\n        if (!this.props.currentMessage && prevProps.currentMessage) {\n            this.fetchNewMessages();\n        }\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        if (this.fetchTimeoutId) {\n            clearTimeout(this.fetchTimeoutId);\n            this.fetchTimeoutId = null;\n        }\n    }\n\n\n    addNewMessage(channelId, message) {\n        if (channelId !== this.channelId) {\n            return;\n        }\n        const index = message.index;\n        if (index in this.cachedMessages) {\n            return;\n        }\n        this.cachedMessages[index] = message;\n        window.localStorage.setItem(this.channelHash + ':m:' + index, JSON.stringify(message));\n\n        this.cachedRanges.push({\n            first: index,\n            last: index + 1,\n        });\n        this.cachedRanges.sort((a, b) => a.first - b.first);\n        this.cachedRanges = this.cachedRanges.reduce((rs, r) => {\n            if (r.first === r.last) {\n                return rs;\n            }\n            if (!rs.length) {\n                rs.push(r);\n            }\n            if (rs[rs.length - 1].last === r.first) {\n                rs[rs.length - 1].last = r.last;\n            }\n            return rs;\n        }, []);\n        window.localStorage.setItem(this.channelHash + ':cachedRanges', JSON.stringify(this.cachedRanges));\n    }\n\n    async fetchMessages(channelId, fromIndex, toIndex) {\n        fromIndex = Math.max(fromIndex, toIndex - FetchMessagesLimit);\n        let messages = await this.props.app.getFrom(ChatContract, JSON.stringify({\n            ChannelMessages: {\n                channel_id: channelId,\n                from_index: fromIndex,\n                limit: toIndex - fromIndex,\n            }\n        }), {});\n        messages.messages.forEach((m, i) => {\n          this.addNewMessage(channelId, {\n              index: fromIndex + i,\n              senderId: m.sender_id,\n              text: m.text,\n              time: m.time,\n          });\n        })\n    }\n\n    async fetchNewMessages() {\n        if (this.fetchingMessages) {\n            return;\n        }\n        try {\n            this.fetchingMessages = true;\n            if (this.fetchTimeoutId) {\n                clearTimeout(this.fetchTimeoutId);\n                this.fetchTimeoutId = null;\n            }\n            console.log(\"Fetching chat messages\");\n            const channel = this.channelId;\n            let channelStatus = await this.props.app.getFrom(ChatContract, JSON.stringify({\n                ChannelStatus: {\n                    channel_id: channel,\n                }\n            }), {});\n            let numChannelMessages = channelStatus.num_messages;\n            let lastNumMessages = this.cachedRanges.length ? this.cachedRanges[this.cachedRanges.length - 1].last : 0;\n            if (lastNumMessages < numChannelMessages) {\n                await this.fetchMessages(channel, lastNumMessages, numChannelMessages);\n                this.updateState(true);\n            }\n        }\n        finally {\n            this.fetchingMessages = false;\n            if (this.mounted) {\n                this.fetchTimeoutId = setTimeout(() => this.fetchNewMessages(), 2000);\n            }\n        }\n    }\n\n    render() {\n        let lastMessage = null;\n        return (\n            <div className=\"channel fgrow\" ref={this.channelInnerRef}>\n                {this.state.messages.map((message) => {\n                    const chatMessage = <ChatMessage\n                        key={this.channelHash + message.index}\n                        message={message}\n                        onReply={() => this.onReply(message)}\n                        showMeta={!lastMessage || message.senderId !== lastMessage.senderId || message.time - lastMessage.time > MinTimeDiffForMetaMs}\n                    />;\n                    lastMessage = message;\n                    return chatMessage;\n                })}\n                {this.props.currentMessage && (\n                    <ChatMessage\n                        key={\"currentMessage\"}\n                        message={this.props.currentMessage}\n                        pending={true}\n                        showMeta={true}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport anon from \"../../assets/anon.png\";\nimport {Profile} from \"metanear-react-components\";\n\nconst ProfileMessageStyle = {\n    profile: {\n        display: 'none',\n    },\n};\n\nconst formatTime = (t) => {\n    const d = new Date(t);\n    const c = new Date();\n    if (c.getDate() === d.getDate()) {\n        return d.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n    } else {\n        return d.toLocaleDateString()\n    }\n}\n\nexport class ChatMessage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayName: \"\",\n            profileUrl: anon,\n        };\n    }\n\n\n    onProfile(p) {\n        this.setState({\n            displayName: (p && p.displayName) || \"\",\n            profileUrl: (p && p.profileUrl) || anon,\n        })\n    }\n\n    render() {\n        const message = this.props.message;\n        const content = message.text;\n        const senderId = message.senderId;\n        const time = formatTime(message.time);\n        const p = this.props.showMeta && <Profile accountId={senderId} styles={ProfileMessageStyle} onFetch={(p) => this.onProfile(p)}/>;\n        return (\n            <div className={\"chat-message\" + (this.props.pending ? \" chat-message-pending\" : \"\") + (!this.props.showMeta ? \" chat-message-no-meta\" : \"\")}>\n                {p}\n                <img className=\"chat-message-profile\" src={this.state.profileUrl} alt={`Profile @${senderId}`}/>\n                <div className=\"chat-message-content\">\n                    <div className=\"chat-message-meta\">\n                        <div className=\"chat-message-sender-name\">{this.state.displayName || (\"@\" + senderId)}</div>\n                        {this.state.displayName && <div className=\"chat-message-sender-id\">{\"(@\" + senderId + \")\"}</div>}\n                        {this.props.pending ?\n                            <div className=\"chat-message-time\"><span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span> sending</div> :\n                            <div className=\"chat-message-time\">{time}</div>\n                        }\n                    </div>\n                    {content}\n                </div>\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}