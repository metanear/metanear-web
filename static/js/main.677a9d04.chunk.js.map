{"version":3,"sources":["../../../near-openweb-js/src/openweb.js","assets/gray_near_logo.svg","assets/encryptionOn.png","assets/encryptionOff.png","near/config.js","apps/ProfileApp.js","apps/MailApp.js","components/PowFaucet.js","Home.js","Auth.js","Router.js","index.js","assets/anon.png"],"names":["encryptionKey","OpenWebApp","appId","accountId","nearConfig","this","_nearConfig","blocking","Promise","resolve","parseEncryptionKey","window","nacl","Buffer","keyKey","key","localStorage","getItem","buf","from","length","secretKeyLength","Error","keyPair","fromSecretKey","setItem","secretKey","toString","_key","newSecretKey64","_keyStore","nearlib","BrowserLocalStorageKeyStore","Object","assign","deps","keyStore","_near","_account","connection","_contract","viewMethods","changeMethods","sender","_networkId","networkId","_init","_innerInit","init","getKey","ready","_ready","_keyAwait","getPublicKey","_tmpKey","accessKey","fromRandom","serialize","SCHEMA","getAccessPublicKey","options","getFrom","publicKey","set","getEncryptionPublicKey","setKey","call","then","catch","msg64","nonce","Uint8Array","nonceLength","copy","box","decodedBuf","open","str","fullBuf","theirPublicKey","publicKeyLength","encrypted","get","app_id","JSON","parse","decryptSecretBox","account","contract","apps","value","forceReady","wrappedCall","encryptSecretBox","stringify","remove","num_messages","pull_message","theirPublicKey64","content","getTheirPublicKey","encryptBox","decryptBox","receiverId","message","send_message","receiver_id","module","exports","getConfig","env","nodeUrl","contractName","walletUrl","keyPath","process","HOME","masterAccount","Cookies","require","cookieConfig","getJSON","nearPages","ProfileApp","props","keys","state","reduce","acc","chainValues","initialized","saving","hasChanges","appReady","profile","newState","setState","app","waitReady","maybeInit","prevProps","some","console","log","promises","forEach","push","all","f","sourceImage","Image","reader","FileReader","readAsDataURL","onload","canvas","document","createElement","aspect","naturalWidth","naturalHeight","width","Math","round","max","height","ctx","getContext","imageSmoothingQuality","fillStyle","fillRect","drawImage","toDataURL","sort","a","b","handleChange","event","src","target","result","e","className","onClick","logOut","profileUrl","displayName","bio","defaultProfileUrl","anon","onFetch","htmlFor","placeholder","id","disabled","onChange","type","onFilesChange","onError","onFilesError","multiple","accepts","minFileSize","clickable","save","role","aria-hidden","React","Component","MailApp","subject","sending","numLetters","unread","expandedId","profileFound","profileLoading","keyLoading","inbox","textarea","createRef","keyCache","letter","messageId","undefined","filter","time","read","onNewMail","version","num","allMigrations","i","storeEncryptionPublicKey","migrateFrom","modifyLetter","fetchMessages","getStoredEncryptionPublicKey","fetchKey","stateChange","toLowerCase","replace","fetchTimeoutId","clearTimeout","pullMessage","setTimeout","inner","isEncrypted","fromAppId","decryptMessage","decryptedMessage","trunc","newNumLetters","warn","error","encryptMessage","sendMessage","startsWith","Date","toLocaleDateString","join","split","map","s","current","focus","setSelectionRange","scrollLeft","scrollTop","encryptionEnabled","displayEncryptionIcon","encryptionAlt","encryptionIcon","encryptionOn","encryptionOff","title","alt","updateKey","expanded","deleteLetter","replyTo","selectLetter","aria-label","receiverClass","ref","rows","sendMail","Letter","t","toLocaleString","d","getDate","hour","getHours","minute","getMinutes","padStart","daytime","timeFormat","ValidAccountRe","AuthDataKey","PowFaucet","connected","signedIn","newAccountId","creating","accountLoading","newAccountExists","computingProofOfWork","mounted","initNear","_authData","fromString","_faucetContract","get_account_suffix","_accountSuffix","get_min_difficulty","_minDifficulty","get_num_created_accounts","numCreatedAccounts","near","initFaucet","isValidAccount","provider","query","_a","includes","match","msg","TextEncoder","encode","data","charCodeAt","len","bestDifficulty","salt","crypto","subtle","digest","hashBuffer","totalNumZeros","numZeros","clz32","proofOfWorkProgress","proofOfWorkDifficulty","proofOfWorkSalt","seed","generateSeedPhrase","newKeyPair","computeProofOfWork","create_account","account_id","public_key","onLogin","location","seedPhrase","removeItem","moveAccountToWallet","logout","newAccountClass","createAccount","style","aria-valuenow","aria-valuemin","aria-valuemax","Home","requestSignOut","wallet","signOut","signedOutFlow","isSignedIn","search","origin","pathname","login","selectTab","index","defaultTabIndex","logs","loading","signedInFlow","bind","requestSignIn","checkSignIn","initOpenWebApp","loggedIn","walletAccount","authData","concat","getAccountId","code_hash","fetch","arrayBuffer","deployContract","new","masterContract","mail","pk","getSerializedAccessPublicKey","serializedPk","args","add_app_key","onKeyAdded","forceRenderTabPanel","defaultIndex","onSelect","nearlogo","Auth","values","queryString","pub_key","authorized","new_app_id","new_pub_key","res","Router","basename","hashType","exact","path","component","nearInitPromise","InitContract","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.677a9d04.chunk.js","sourcesContent":["import * as nearlib from \"nearlib\";\nimport * as nacl from \"tweetnacl\";\n\nconst GAS = 2000000000000000;\n\nconst encryptionKey = \"encryptionKey\";\n\n/**\n  a class representing the OpenWebApp API\n\n  this API supports local contract methods\n  - get: gets a value from local storage\n  - set: sets a value on local storage\n  - remove: deletes a value from local storage\n\n  and remote contract methods\n  - pull: reads a message from a remote contract\n  - post / send: sends a message to a remote contract\n */\nclass OpenWebApp {\n  constructor(appId, accountId, nearConfig) {\n    this.appId = appId;\n    this.accountId = accountId;\n    this._nearConfig = nearConfig;\n    this.blocking = Promise.resolve();\n    this.parseEncryptionKey();\n    window.nacl = nacl;\n    window.Buffer = Buffer;\n  }\n\n  /**\n    read private key from local storage\n    - if found, recreate the related key pair\n    - if not found, create a new key pair and save it to local storage\n   */\n  parseEncryptionKey() {\n    const keyKey = \"enc_key:\" + this.accountId + \":\" + this.appId + \":\";\n    let key = localStorage.getItem(keyKey);\n    if (key) {\n      const buf = Buffer.from(key, 'base64');\n      if (buf.length !== nacl.box.secretKeyLength) {\n        throw new Error(\"Given secret key has wrong length\");\n      }\n      key = nacl.box.keyPair.fromSecretKey(buf);\n    } else {\n      key = new nacl.box.keyPair();\n      localStorage.setItem(keyKey, Buffer.from(key.secretKey).toString('base64'));\n    }\n    this._key = key;\n  }\n\n  /**\n   updates local secret key to the new given secret key and stores it to local storage.\n   @param newSecretKey64 base64 encoded secret key\n   */\n  updateEncryptionKey(newSecretKey64) {\n    const buf = Buffer.from(newSecretKey64, 'base64');\n    if (buf.length !== nacl.box.secretKeyLength) {\n      throw new Error(\"Given secret key has wrong length\");\n    }\n    const key = nacl.box.keyPair.fromSecretKey(buf);\n    this._key = key;\n    const keyKey = \"enc_key:\" + this.accountId + \":\" + this.appId + \":\";\n    localStorage.setItem(keyKey, Buffer.from(key.secretKey).toString('base64'));\n  }\n\n  async _innerInit() {\n    this._keyStore = new nearlib.keyStores.BrowserLocalStorageKeyStore(\n      localStorage, \"app:\" + this.appId + \":\",\n    );\n    this._near = await nearlib.connect(Object.assign({ deps: { keyStore:  this._keyStore } }, this._nearConfig));\n    this._account = new nearlib.Account(this._near.connection, this.accountId);\n    this._contract = new nearlib.Contract(this._account, this.accountId, {\n      viewMethods: ['get', 'apps', 'num_messages'],\n      changeMethods: ['set', 'remove', 'pull_message', 'send_message'],\n      sender: this.accountId\n    });\n    this._networkId = this._nearConfig.networkId;\n    return true;\n  }\n\n  /**\n    initialize the client-side application with a BrowserLocalStorageKeyStore\n    and a connection to the NEAR platform, binding OpenWebContract methods:\n\n    - get, set, remove: local invocation methods for controlling the state of local applications\n    - pull_message, send_message: remote invocation methods for communicating with contracts of other users\n    - apps, num_messages: convenience methods for listing all apps on the OpenWeb and messages for a specific app\n   */\n  async init() {\n    return this._init || (this._init = this._innerInit());\n  }\n\n  /**\n    helper method to check if the the user is logged in with the app\n   */\n  async ready() {\n    await this.init();\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    return !!key;\n  }\n\n  /**\n   helper method to wait until the the user is logged in with the app\n   */\n  async waitReady() {\n    return await this.ready() || this._ready || (this._ready = (new Promise((resolve) => {\n      this._keyAwait = resolve;\n    })));\n  }\n\n  /**\n    produce a public key on the user account\n    @return {string} existing (or create new) public key for the current account\n   */\n  async getAccessPublicKey() {\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    if (key) {\n      return key.getPublicKey();\n    }\n    if (this._tmpKey) {\n      return this._tmpKey.getPublicKey();\n    }\n    const accessKey = nearlib.KeyPair.fromRandom('ed25519');\n    this._tmpKey = accessKey;\n    return accessKey.getPublicKey();\n  }\n\n  /**\n    returns a public key on the user account in binary borsh serialized format\n    @returns {Promise<Uint8Array>} public access key\n   */\n  async getSerializedAccessPublicKey() {\n    return nearlib.utils.serialize.serialize(nearlib.transactions.SCHEMA, await this.getAccessPublicKey());\n  }\n\n  /**\n    returns the encryption key stored under given accountId\n\n    @param {string|null} accountId optional accountId to get stored encryption key (your account by default).\n    @param {object} options to specify:\n    - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n    - {string} `appId` the name of the app. Same app by default.\n    @returns {Promise<string|null>} the stored encryption key in base64 format or null\n   */\n  async getStoredEncryptionPublicKey(accountId, options) {\n    return this.getFrom(accountId || this.accountId, encryptionKey, options)\n  }\n\n\n  getEncryptionPublicKey() {\n    return Buffer.from(this._key.publicKey).toString('base64')\n  }\n\n  async storeEncryptionPublicKey() {\n    return this.set(encryptionKey, this.getEncryptionPublicKey());\n  }\n\n  /**\n    capture new keys in the keystore\n   */\n  async onKeyAdded() {\n    if (!this._tmpKey) {\n      throw new Error('The key is not initialized yet');\n    }\n    await this._keyStore.setKey(this._networkId, this.accountId, this._tmpKey);\n    this._tmpKey = null;\n    if (this._keyAwait) {\n      this._keyAwait();\n    }\n  }\n\n  /**\n    enforces that the app is ready\n\n    @returns {Promise<void>}\n   */\n  async forceReady() {\n    if (!await this.ready()) {\n      throw new Error('Not ready yet');\n    }\n  }\n\n  /**\n    wrap a call in a Promise for async handling?\n\n    @param {Function} call the function to be wrapped in a Promise\n    @return {Promise} the Promise to return\n   */\n  wrappedCall(call) {\n    this.blocking = this.blocking.then(() => call()).catch(() => call());\n    return this.blocking;\n  }\n\n  /**\n    unbox encrypted messages with our secret key\n    @param {string} msg64 encrypted message encoded as Base64\n    @return {string} decoded contents of the box\n   */\n  decryptSecretBox(msg64) {\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.secretbox.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.secretbox.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.secretbox.open(box, nonce, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n    box an unencrypted message with our secret key\n    @param {string} str the message to wrap in a box\n    @return {string} base64 encoded box of incoming message\n   */\n  encryptSecretBox(str) {\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.secretbox.nonceLength);\n    const box = nacl.secretbox(buf, nonce, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.secretbox.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.secretbox.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n   unbox encrypted messages with our secret key\n   @param {string} msg64 encrypted message encoded as Base64\n   @param {Uint8Array} theirPublicKey the public key to use to verify the message\n   @return {string} decoded contents of the box\n   */\n  decryptBox(msg64, theirPublicKey) {\n    if (theirPublicKey.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Given encryption public key is invalid.\");\n    }\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.box.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.box.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.box.open(box, nonce, theirPublicKey, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n   box an unencrypted message with their public key and sign it with our secret key\n   @param {string} str the message to wrap in a box\n   @param {Uint8Array} theirPublicKey the public key to use to encrypt the message\n   @returns {string} base64 encoded box of incoming message\n   */\n  encryptBox(str, theirPublicKey) {\n    if (theirPublicKey.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Given encryption public key is invalid.\");\n    }\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.box.nonceLength);\n    const box = nacl.box(buf, nonce, theirPublicKey, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.box.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.box.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n    get data from a local app.  apps can decide whether or not to encrypt their contents\n\n    @param {string} key the key used to store a value in the app\n    @param {object} options to specify:\n    - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n    - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned by the local app\n   */\n  async get(key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    let str = await this._contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    get a value from a remote app installed on another account\n\n    @param {string} accountId account from which to get a value\n    @param {string} key the key to use to identify the value\n    @param {object} options to specify:\n     - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n     - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned from the remote app\n   */\n  async getFrom(accountId, key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    const account = new nearlib.Account(this._near.connection, accountId);\n    const contract = new nearlib.Contract(account, accountId, {\n      viewMethods: ['get'],\n      changeMethods: [],\n      sender: this.accountId\n    });\n\n    let str = await contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    return a list of installed apps\n    @return {object} collection of installed apps\n   */\n  async apps() {\n    return await this._contract.apps();\n  }\n\n  /**\n    set a value in local storage\n\n    @param {string} key identifier for the value to be set\n    @param {string} value the value to be set\n    @param {object} options to specify:\n      - {bool} `encrypted` flag indicating whether to encrypt (box) the value. Default false.\n   */\n  async set(key, value, options) {\n    await this.forceReady();\n    options = Object.assign({\n      encrypted: false,\n    }, options);\n    await this.wrappedCall(() => this._contract.set({\n      key,\n      value: options.encrypted ? this.encryptSecretBox(JSON.stringify(value)) : JSON.stringify(value),\n    }, GAS));\n  }\n\n  /**\n    remove a key-value pair from local storage\n\n    @param {string} key key to be removed\n   */\n  async remove(key) {\n    await this.forceReady();\n    await this.wrappedCall(() => this._contract.remove({\n      key,\n    }, GAS));\n  }\n\n  /**\n    retrieve a message\n\n    @return {any} return async? pull from local storage, null if not found\n   */\n  async pullMessage() {\n    await this.forceReady();\n    if (await this._contract.num_messages({app_id: this.appId}) > 0) {\n      return await this.wrappedCall(() => this._contract.pull_message({}, GAS));\n    } else {\n      return null;\n    }\n  }\n\n  async getTheirPublicKey(options) {\n    options = Object.assign({\n      accountId: null,\n      theirPublicKey: null,\n      theirPublicKey64: null,\n      encryptionKey,\n      appId: this.appId,\n    }, options);\n    if (options.theirPublicKey) {\n      return options.theirPublicKey;\n    }\n    if (!options.theirPublicKey64) {\n      if (!options.accountId) {\n        throw new Error(\"Either accountId or theirPublicKey64 has to be provided\");\n      }\n      options.theirPublicKey64 = await this.getFrom(options.accountId, options.encryptionKey, {\n        appId: options.appId,\n      });\n    }\n    if (!options.theirPublicKey64) {\n      throw new Error(\"Their app doesn't provide the encryption public key.\");\n    }\n    const buf = Buffer.from(options.theirPublicKey64, 'base64');\n    if (buf.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Their encryption public key is invalid.\");\n    }\n    const theirPublicKey = new Uint8Array(nacl.box.publicKeyLength);\n    theirPublicKey.set(buf);\n    return theirPublicKey;\n  }\n\n  /**\n   * Encrypts given content. Typical usage: encryptMessage(\"hello world\", {accountId: bla})\n   *\n   * @param {string} content The message to encrypt\n   * @param options\n   * @returns {Promise<string>}\n   */\n  async encryptMessage(content, options) {\n    const theirPublicKey = await this.getTheirPublicKey(options);\n    return this.encryptBox(content, theirPublicKey);\n  }\n\n  async decryptMessage(msg64, options) {\n    const theirPublicKey = await this.getTheirPublicKey(options);\n    return this.decryptBox(msg64, theirPublicKey);\n  }\n\n  /**\n    send a message to another account\n\n    @param {string} receiverId account id which will receive the message\n    @param {string} message the content of the message\n    @param {object} options to specify:\n      - {string} `appId` the app ID to receive the message. Same app by default.\n   */\n  async sendMessage(receiverId, message, options) {\n    this.forceReady();\n    options = Object.assign({\n      appId: this.appId,\n    }, options);\n    await this.wrappedCall(() => this._contract.send_message({\n      receiver_id: receiverId,\n      app_id: options.appId,\n      message,\n    }, GAS));\n  }\n}\n\nexport {encryptionKey, OpenWebApp}\n","module.exports = __webpack_public_path__ + \"static/media/gray_near_logo.55517b93.svg\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOn.23e3b306.png\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOff.475ce496.png\";","(function() {\n    const CONTRACT_NAME = 'react-template'; /* TODO: fill this in!*/\n    const DEFAULT_ENV = 'development'; \n    \n    function getConfig(env) {\n        switch (env) {\n\n        case 'production':\n        case 'development':\n            return {\n                networkId: 'default',\n                nodeUrl: 'https://rpc.nearprotocol.com',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://wallet.nearprotocol.com',\n            };\n        case 'staging':\n            return {\n                networkId: 'staging',\n                nodeUrl: 'https://staging-rpc.nearprotocol.com/',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://near-wallet-staging.onrender.com',\n            };\n        case 'local':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                keyPath: `${process.env.HOME}/.near/validator_key.json`,\n                walletUrl: 'http://localhost:4000/wallet',\n                contractName: CONTRACT_NAME,\n            };\n        case 'test':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'test-remote':\n        case 'ci':\n            return {\n                networkId: 'shared-test',\n                nodeUrl: 'http://shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'ci-staging':\n            return {\n                networkId: 'shared-test-staging',\n                nodeUrl: 'http://staging-shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        default:\n            throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n        }\n    }\n    \n    let Cookies = require('js-cookie');\n    const cookieConfig = typeof Cookies != 'undefined' && Cookies.getJSON('fiddleConfig');\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = getConfig;\n    } else {\n        window.nearConfig =  cookieConfig && cookieConfig.nearPages ? cookieConfig : getConfig(DEFAULT_ENV);\n    }\n})();\n","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport Files from \"react-files\";\nimport { Profile } from \"react-near-openweb\";\n\nconst uploadResizeWidth = 96;\nconst uploadResizeHeight = 96;\n\nexport class ProfileApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const keys = [\n      \"displayName\",\n      \"profileUrl\",\n      \"bio\",\n    ];\n    this.state = keys.reduce((acc, key) => {\n      acc[key] = \"\";\n      acc.chainValues[key] = null;\n      return acc;\n    }, {\n      keys,\n      chainValues: {},\n      initialized: false,\n      saving: false,\n      hasChanges: false,\n      appReady: false,\n    });\n  }\n\n  async init(profile) {\n    if (!profile) {\n      return;\n    }\n    const newState = this.state.keys.reduce((state, key) => {\n      state[key] = profile[key] || \"\";\n      state.chainValues[key] = state[key];\n      return state;\n    }, {\n      chainValues: {}\n    });\n    this.setState(newState);\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => {\n        this.setState({\n          appReady: true,\n        })\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  handleChange(key, value) {\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  hasChanges() {\n    return this.state.keys.some(key => this.state.chainValues[key] !== this.state[key]);\n  }\n\n  async save() {\n    this.setState({\n      saving: true,\n    });\n    console.log(\"Saving\");\n    const chainValues = Object.assign({}, this.state.chainValues);\n    const promises = [];\n    this.state.keys.forEach(key => {\n      if (this.state.chainValues[key] !== this.state[key]) {\n        chainValues[key] = this.state[key];\n        promises.push(this.props.app.set(key, this.state[key]).then(() => {\n          console.log(\"Updated key `\" + key + \"` to value `\" + this.state[key] + '`');\n        }));\n      }\n    });\n    Promise.all(promises).then(() => {\n      this.setState({\n        chainValues,\n        saving: false,\n      })\n    });\n  }\n\n  async onFilesChange(f) {\n    let sourceImage = new Image();\n    let reader = new FileReader();\n\n    reader.readAsDataURL(f[0]);\n\n    sourceImage.onload = () => {\n      // Create a canvas with the desired dimensions\n      let canvas = document.createElement(\"canvas\");\n      const aspect = sourceImage.naturalWidth / sourceImage.naturalHeight;\n      const width = Math.round(uploadResizeWidth * Math.max(1, aspect));\n      const height = Math.round(uploadResizeHeight * Math.max(1, 1 / aspect));\n      canvas.width = uploadResizeWidth;\n      canvas.height = uploadResizeHeight;\n      const ctx = canvas.getContext(\"2d\");\n\n      // Scale and draw the source image to the canvas\n      ctx.imageSmoothingQuality = \"high\";\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, uploadResizeWidth, uploadResizeHeight);\n      ctx.drawImage(sourceImage, (uploadResizeWidth - width) / 2, (uploadResizeHeight - height) / 2, width, height);\n\n      // Convert the canvas to a data URL in PNG format\n      const options = [\n        canvas.toDataURL('image/jpeg', 0.92),\n        // Disabling webp because it doesn't work on iOS.\n        // canvas.toDataURL('image/webp', 0.92),\n        canvas.toDataURL('image/png')\n      ];\n      options.sort((a, b) => a.length - b.length);\n\n      this.handleChange('profileUrl', options[0]);\n    }\n\n    reader.onload = function(event) {\n      sourceImage.src = event.target.result;\n    };\n  }\n\n  async onFilesError(e, f) {\n    console.log(e, f);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <button className=\"float-right\" onClick={this.props.logOut}>Log out</button>\n          <Profile\n            accountId={this.props.app && this.props.app.accountId}\n            profileUrl={this.state.profileUrl}\n            displayName={this.state.displayName}\n            bio={this.state.bio}\n            defaultProfileUrl={anon}\n            onFetch={(profile) => this.init(profile)}\n          />\n        </div>\n        <hr/>\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"displayName\">Display Name</label>\n            <input placeholder=\"The REAL Satoshi\" id=\"displayName\" className=\"form-control\" disabled={!this.props.app} value={this.state.displayName} onChange={(e) => this.handleChange('displayName', e.target.value)} />\n          </div>\n          <label htmlFor=\"profileUrl\">Profile URL</label>\n          <div className=\"input-group\">\n            <input placeholder={\"https://metanear.com\" + anon} id=\"profileUrl\" className=\"form-control\" disabled={!this.props.app} value={this.state.profileUrl}\n                   onChange={(e) => this.handleChange('profileUrl', e.target.value)}/>\n            <div className=\"input-group-append\">\n              <Files\n                type=\"button\"\n                className='btn btn-outline-primary'\n                onChange={(f) => this.onFilesChange(f)}\n                onError={(e, f) => this.onFilesError(e, f)}\n                multiple={false}\n                accepts={['image/*']}\n                minFileSize={1}\n                clickable\n              >\n                Click to upload\n              </Files>\n            </div>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"bio\">Bio</label>\n            <textarea placeholder=\"I'm working on Bitcoin, so bankers can go home.\" id=\"bio\" className=\"form-control\" disabled={!this.props.app} value={this.state.bio} onChange={(e) => this.handleChange('bio', e.target.value)} />\n          </div>\n          <div className=\"form-group\">\n            <button\n                className=\"btn btn-primary\"\n                disabled={this.state.saving || !this.hasChanges()}\n                onClick={() => this.save()}\n            >\n              {this.state.saving && (\n                  <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n              )} Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport encryptionOn from \"../assets/encryptionOn.png\";\nimport encryptionOff from \"../assets/encryptionOff.png\";\nimport { Profile } from \"react-near-openweb\";\n\nconst RE = \"Re: \";\nconst currentVersion = 2;\n\nexport class MailApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      receiverId: \"\",\n      subject: \"\",\n      content: \"\",\n      sending: false,\n      numLetters: 0,\n      unread: 0,\n      expandedId: -1,\n      profileFound: false,\n      profileLoading: false,\n      keyLoading: false,\n      theirPublicKey64: null,\n      inbox: [],\n    }\n    this.textarea = React.createRef();\n    this.keyCache = {};\n  }\n\n  modifyLetter(letter, messageId) {\n    if (messageId === undefined) {\n      if (!letter) {\n        return;\n      }\n      messageId = letter.messageId;\n    }\n    const inbox = this.state.inbox.filter((a) => a.messageId !== messageId);\n    if (letter) {\n      inbox.push(letter);\n    }\n    inbox.sort((a, b) => b.time - a.time);\n    const unread = inbox.reduce((acc, letter) => acc + (letter.read ? 0: 1), 0);\n    this.setState({\n      inbox,\n      unread,\n    });\n    this.props.onNewMail(unread);\n  }\n\n  async migrateFrom(version) {\n    if (version === 0) {\n      console.log(\"Migrating from version #0\");\n      let num = 0;\n      try {\n        num = await this.props.app.get('numLetters');\n      } catch (e) {\n        // whatever. Probably died during migration.\n      }\n      const allMigrations = [];\n      for (let i = 0; i < num; ++i) {\n        allMigrations.push(this.props.app.get('letter_' + i).then((letter) => {\n          if (letter) {\n            return this.props.app.set('letter_' + i, letter, {encrypted: true}).then(() => {\n              console.log(\"Migrated letter #\" + i);\n            })\n          }\n          return Promise.resolve();\n        }).catch((e) => console.log(\"Can't migrate letter #\", i, e)));\n      }\n      await Promise.all(allMigrations);\n      await this.props.app.set('numLetters', num, { encrypted: true });\n      version++;\n    }\n    if (version === 1) {\n      console.log(\"Migrating from version #1\");\n      await this.props.app.storeEncryptionPublicKey();\n      version++;\n    }\n    await this.props.app.set('version', version, { encrypted: true });\n  }\n\n  async init() {\n    let version;\n    try {\n      version = await this.props.app.get('version', {encrypted: true}) || 0;\n    } catch (e) {\n      // likely mismatched keys\n      console.log(e);\n      return;\n    }\n    if (version < currentVersion) {\n      await this.migrateFrom(version);\n    }\n    const num = await this.props.app.get('numLetters', { encrypted: true }) || 0;\n    this.setState({\n      numLetters: num,\n    });\n    for (let i = Math.max(0, num - 10); i < num; ++i) {\n      this.props.app.get('letter_' + i, {encrypted: true}).then((letter) => this.modifyLetter(letter));\n    }\n    this.fetchMessages();\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => this.init());\n    }\n  }\n\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  async fetchKey(accountId) {\n    if (accountId in this.keyCache) {\n      return await this.keyCache[accountId];\n    } else {\n      console.log(\"Fetching key for \" + accountId);\n      this.keyCache[accountId] = this.props.app.getStoredEncryptionPublicKey(accountId, {}).catch((e) => false);\n      return await this.keyCache[accountId];\n    }\n  }\n\n  updateKey(profile) {\n    if (!this.props.app) {\n      return;\n    }\n    this.setState({\n      profileLoading: false,\n      profileFound: !!profile,\n    });\n    if (!profile) {\n      return;\n    }\n    this.setState({\n      keyLoading: true,\n    })\n    this.fetchKey(profile.accountId).then((theirPublicKey64) => {\n      this.setState({\n        keyLoading: false,\n        theirPublicKey64,\n      })\n    });\n  }\n\n  handleChange(key, value) {\n    const stateChange = {\n      [key]: value,\n    };\n    if (key === 'receiverId') {\n      value = value.toLowerCase().replace(/[^a-z0-9\\-_.]/, '');\n      stateChange[key] = value;\n      stateChange.profileLoading = true;\n      stateChange.theirPublicKey64 = false;\n    }\n    this.setState(stateChange);\n  }\n\n  async fetchMessages() {\n    if (!this.props.app) {\n      return;\n    }\n    if (this.fetchTimeoutId) {\n      clearTimeout(this.fetchTimeoutId);\n      this.fetchTimeoutId = null;\n    }\n    console.log(\"Fetching messages\");\n    const message = await this.props.app.pullMessage();\n    if (!message) {\n      this.fetchTimeoutId = setTimeout(() => { this.fetchMessages() }, 60 * 1000);\n      return;\n    }\n    try {\n      console.log(message);\n      let inner = JSON.parse(message.message);\n      const isEncrypted = inner.type === 'encrypted';\n      const fromAppId = inner.fromAppId || this.props.app.appId;\n      if (isEncrypted) {\n        const decryptedMessage = await this.props.app.decryptMessage(inner.content, {\n          accountId: message.sender,\n          appId: inner.fromAppId,\n        });\n        inner = JSON.parse(decryptedMessage);\n      }\n      if (inner.type === 'mail') {\n        const letter = {\n          messageId: this.state.numLetters,\n          isEncrypted,\n          fromAppId,\n          sender: message.sender,\n          subject: inner.subject,\n          content: inner.content,\n          time: Math.trunc(message.time / 1000000),\n        }\n        const newNumLetters = this.state.numLetters + 1;\n        this.setState({\n          numLetters: newNumLetters,\n        });\n\n        this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n          console.log(\"Saved the letter: \", letter);\n        });\n        this.props.app.set(\"numLetters\", newNumLetters, {encrypted: true}).then(() => {\n            console.log(\"Saved the new number of letters: \", newNumLetters);\n        });\n        this.modifyLetter(letter);\n      } else {\n        console.warn(\"Unknown message\", message);\n      }\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.fetchMessages()\n    }\n  }\n\n  async sendMail() {\n    if (!this.state.profileFound) {\n      return;\n    }\n    console.log(\"Sending mail\");\n    this.setState({\n      sending: true,\n    });\n    try {\n      let message = JSON.stringify({\n        type: \"mail\",\n        subject: this.state.subject,\n        content: this.state.content,\n      });\n      if (this.state.theirPublicKey64) {\n        const content = await this.props.app.encryptMessage(message, {\n          theirPublicKey64: this.state.theirPublicKey64,\n        });\n        message = JSON.stringify({\n          type: \"encrypted\",\n          fromAppId: this.props.app.appId,\n          content,\n        })\n      }\n      await this.props.app.sendMessage(this.state.receiverId, message);\n      this.setState({\n        subject: \"\",\n        content: \"\",\n      })\n    } catch (e) {\n      console.log(\"Failed to send the message\", e);\n    } finally {\n      this.setState({\n        sending: false,\n      });\n      setTimeout(() => this.fetchMessages(), 2000);\n    };\n  }\n\n  receiverClass() {\n    if (!this.state.receiverId || this.state.profileLoading) {\n      return \"form-control\";\n    } else if (this.state.profileFound) {\n      return \"form-control is-valid\";\n    } else {\n      return \"form-control is-invalid\";\n    }\n  }\n\n  replyTo(letter, displayName) {\n    this.handleChange(\"receiverId\", letter.sender);\n    this.setState({\n      subject: (letter.subject.startsWith(RE) ? \"\" : RE) + letter.subject,\n      content: [\n        \"\",\n        \"\",\n        [\"On\", new Date(letter.time).toLocaleDateString(), displayName, \"@\" + letter.sender, \"wrote:\"].join(' '),\n        ...letter.content.split(/\\r?\\n/).map(s => \"| \" + s)\n      ].join(\"\\n\"),\n    }, () => {\n      this.textarea.current.focus();\n      this.textarea.current.setSelectionRange(0, 0);\n      this.textarea.current.scrollLeft = 0;\n      this.textarea.current.scrollTop = 0;\n    });\n  }\n\n  selectLetter(letter) {\n    this.setState({\n      expandedId: (this.state.expandedId === letter.messageId) ? -1 : letter.messageId,\n    });\n    if (!letter.read) {\n      letter = JSON.parse(JSON.stringify(letter));\n      letter.read = true;\n      this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n        console.log(\"Saved the letter: \", letter);\n      });\n      this.modifyLetter(letter);\n    }\n  }\n\n  deleteLetter(letter) {\n    this.props.app.remove(\"letter_\" + letter.messageId).then(() => {\n      console.log(\"Deleted the letter: \", letter);\n    });\n    this.modifyLetter(null, letter.messageId);\n  }\n\n  render() {\n    const encryptionEnabled = this.state.theirPublicKey64;\n    const displayEncryptionIcon = this.state.profileFound && !this.state.keyLoading;\n    const encryptionAlt = encryptionEnabled ? \"Encryption is ON\" : \"Not secure! Encryption is OFF\";\n    const encryptionIcon = displayEncryptionIcon &&\n      <img className=\"encryption-icon\" src={encryptionEnabled ? encryptionOn : encryptionOff}\n          title={encryptionAlt} alt={encryptionAlt}/>;\n    const profile = <Profile accountId={this.state.receiverId} onFetch={(profile) => this.updateKey(profile)} defaultProfileUrl={anon}/>;\n    const inbox = this.state.inbox.map((letter, i) => (\n      <Letter\n        key={letter.messageId}\n        letter={letter}\n        expanded={letter.messageId === this.state.expandedId}\n        deleteLetter={(letter) => this.deleteLetter(letter)}\n        replyTo={(letter, displayName) => this.replyTo(letter, displayName)}\n        selectLetter={(letter) => this.selectLetter(letter)} />\n    ));\n    return (\n      <div>\n        Inbox <button className=\"btn btn-sm\" onClick={() => this.fetchMessages()}><span role=\"img\" aria-label=\"Refresh\">🔄</span></button>\n        <div>\n          {inbox}\n        </div>\n        <h3>Send</h3>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label className=\"sr-only\" htmlFor=\"toAccountId\">To Account ID</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">@</div>\n                </div>\n                <input type=\"text\" className={this.receiverClass()} id=\"toAccountId\" placeholder=\"To Account ID\" value={this.state.receiverId} disabled={!this.props.app} onChange={(e) => this.handleChange('receiverId', e.target.value)} />\n              </div>\n            </div>\n          </div>\n          {profile}\n        </div>\n        <div className=\"form-group\">\n          <label className=\"sr-only\" htmlFor=\"subject\">Subject</label>\n          <input type=\"text\" className=\"form-control\" id=\"subject\" placeholder=\"Subject\" disabled={!this.props.app} value={this.state.subject} onChange={(e) => this.handleChange('subject', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <textarea ref={this.textarea} id=\"content\" className=\"form-control\" rows=\"7\" disabled={!this.props.app} value={this.state.content} onChange={(e) => this.handleChange('content', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <button className={\"form-control form-control-lg btn \" + (displayEncryptionIcon && !encryptionEnabled ? \"btn-danger\" : \"btn-primary\")} disabled={!this.state.profileFound || this.state.sending} onClick={() => this.sendMail()}>\n            Send {encryptionIcon}</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport class Letter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: {\n        profileUrl: null,\n        displayName: '@' + props.letter.sender,\n      },\n    };\n  }\n\n  onClick() {\n    this.props.selectLetter(this.props.letter);\n  }\n\n  render() {\n    const profile = (\n      <div className=\"col-sm-6 col-md-4 col-lg-4 letter-profile\">\n        <Profile accountId={this.props.letter.sender} onFetch={(profile) => profile && this.setState({displayName: profile.displayName})} defaultProfileUrl={anon}/>\n      </div>\n    );\n    const subject = (\n      <div className=\"col-sm-4 col-md\">\n        <div className=\"letter-subject\">{this.props.letter.subject}</div>\n      </div>\n    );\n    const time = this.props.expanded ? (\n      <div className=\"col-sm-2 col-lg-2\">\n        <div className=\"letter-time\">{longTimeFormat(this.props.letter.time)}</div>\n      </div>\n    ) : (\n      <div className=\"col-sm-2 col-lg-1 d-none d-md-block\">\n        <div className=\"letter-time\">{timeFormat(this.props.letter.time)}</div>\n      </div>\n    );\n    if (this.props.expanded) {\n      return (\n        <div className=\"letter letter-expanded\">\n          <div className=\"row letter-expanded-header\" onClick={() => this.onClick()}>\n            {profile}\n            {subject}\n            {time}\n          </div>\n          <div className=\"letter-content-expanded\">\n            <pre>{this.props.letter.content}</pre>\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <button className=\"btn btn-primary\" onClick={() => this.props.replyTo(this.props.letter, this.state.displayName)}>Reply</button>\n              </div>\n              <div className=\"col-sm\">\n                <button className=\"btn btn-danger float-right\" onClick={() => this.props.deleteLetter(this.props.letter)}>DELETE THIS!</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={\"row letter letter-small\" + (this.props.letter.read ? \" letter-read\" : \" letter-unread\")} onClick={() => this.onClick()}>\n          {profile}\n          {subject}\n          <div className=\"col-sm d-none d-lg-block\">\n            <div className=\"letter-content\">{this.props.letter.content}</div>\n          </div>\n          {time}\n        </div>\n      );\n    }\n  }\n}\n\nfunction longTimeFormat(t) {\n  return new Date(t).toLocaleString();\n}\n\nfunction timeFormat(t) {\n  const d = new Date(t);\n  const now = new Date();\n  if (now.getDate() === d.getDate()) {\n    const hour = d.getHours() % 12;\n    const minute = d.getMinutes().toString().padStart(2, '0');\n    const daytime = d.getHours() >= 12 ? \"PM\" : \"AM\";\n    return `${hour}:${minute} ${daytime}`;\n  } else {\n    return d.toLocaleDateString();\n  }\n}\n","import React from 'react';\nimport * as nearlib from 'nearlib';\nimport { generateSeedPhrase } from 'near-seed-phrase';\n\nconst FaucetPrivateKey = 'ed25519:2Rtn6ms22rCRMgmGgLRSPPd6gYDCgWDuFrX6gERknSA8GKiCHE5L9Rksc1ihsSCDvMSptfbipzq29H7cDZhR1Ze3';\nconst FaucetName = 'meta';\nconst MinAccountIdLen = 2;\nconst MaxAccountIdLen = 64;\nconst ValidAccountRe = /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\nexport const AuthDataKey = \"meta-faucet-auth-data\";\n\nexport class PowFaucet extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            connected: false,\n            signedIn: false,\n            accountId: null,\n            newAccountId: \"\",\n            creating: false,\n            accountLoading: false,\n            newAccountExists: false,\n            computingProofOfWork: false,\n        };\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.initNear().then(() => {\n            this.mounted && this.setState({\n                connected: true,\n                signedIn: !!this._authData.accountId,\n                accountId: this._authData.accountId,\n            })\n        })\n    }\n\n    async initFaucet() {\n        let key = await this._keyStore.getKey(this._nearConfig.networkId, FaucetName);\n        if (!key) {\n            const keyPair = nearlib.KeyPair.fromString(FaucetPrivateKey);\n            await this._keyStore.setKey(this._nearConfig.networkId, FaucetName, keyPair);\n        }\n        const account = new nearlib.Account(this._near.connection, FaucetName);\n        this._faucetContract =  new nearlib.Contract(account, FaucetName, {\n            viewMethods: ['get_min_difficulty', 'get_account_suffix', 'get_num_created_accounts'],\n            changeMethods: ['create_account'],\n            sender: FaucetName\n        });\n        this._accountSuffix = await this._faucetContract.get_account_suffix();\n        this._minDifficulty = await this._faucetContract.get_min_difficulty();\n        this.mounted && this.setState({\n            numCreatedAccounts: await this._faucetContract.get_num_created_accounts(),\n        });\n        // console.log(JSON.stringify([...key.getPublicKey().data]));\n    }\n\n    async initNear() {\n        const nearConfig = {\n            networkId: 'default',\n            nodeUrl: 'https://rpc.nearprotocol.com',\n            contractName: FaucetName,\n            walletUrl: 'https://wallet.nearprotocol.com',\n        };\n        const keyStore = new nearlib.keyStores.BrowserLocalStorageKeyStore();\n        const near = await nearlib.connect(Object.assign({ deps: { keyStore } }, nearConfig));\n        this._keyStore = keyStore;\n        this._nearConfig = nearConfig;\n        this._near = near;\n\n        this._authData = JSON.parse(window.localStorage.getItem(AuthDataKey) || '{}');\n        await this.initFaucet();\n    }\n\n    handleChange(key, value) {\n        const stateChange = {\n            [key]: value,\n        };\n        if (key === 'newAccountId') {\n            value = value.toLowerCase().replace(/[^a-z0-9\\-_.]/, '');\n            stateChange[key] = value;\n            stateChange.newAccountExists = false;\n            if (this.isValidAccount(value)) {\n                stateChange.accountLoading = true;\n                this._near.connection.provider.query(`account/${value + this._accountSuffix}`, '').then((_a) => {\n                    if (this.state.newAccountId === value) {\n                        this.setState({\n                            accountLoading: false,\n                            newAccountExists: true,\n                        })\n                    }\n                }).catch((e) => {\n                    if (this.state.newAccountId === value) {\n                        this.setState({\n                            accountLoading: false,\n                            newAccountExists: false,\n                        })\n                    }\n                })\n            }\n        }\n        this.setState(stateChange);\n    }\n\n    isValidAccount(newAccountId) {\n        if (newAccountId.includes('.')) {\n            return false;\n        }\n        const accountId = newAccountId + this._accountSuffix;\n        return accountId.length >= MinAccountIdLen &&\n            accountId.length <= MaxAccountIdLen &&\n            accountId.match(ValidAccountRe);\n    }\n\n    newAccountClass() {\n        if (!this.state.newAccountId || this.state.accountLoading) {\n            return \"form-control form-control-large\";\n        } else if (!this.state.newAccountExists && this.isValidAccount(this.state.newAccountId)) {\n            return \"form-control form-control-large is-valid\";\n        } else {\n            return \"form-control form-control-large is-invalid\";\n        }\n    }\n\n    async computeProofOfWork(accountId, publicKey) {\n        let msg = [...new TextEncoder('utf-8').encode(accountId + ':')];\n        // curve\n        msg.push(0);\n        // key\n        msg.push(...publicKey.data);\n        // separator\n        msg.push(':'.charCodeAt(0));\n        // salt\n        msg.push(0, 0, 0, 0, 0, 0, 0, 0);\n        msg = new Uint8Array(msg);\n        const len = msg.length;\n        let bestDifficulty = 0;\n        for (let salt = 0; ; ++salt) {\n            // compute hash\n            const hashBuffer = new Uint8Array(await crypto.subtle.digest('SHA-256', msg));\n            // compute number of leading zero bits\n            let totalNumZeros = 0;\n            for (let i = 0; i < hashBuffer.length; ++i) {\n                let numZeros = Math.clz32(hashBuffer[i]) - 24;\n                totalNumZeros += numZeros;\n                if (numZeros < 8) {\n                    break;\n                }\n            }\n            // checking difficulty\n            if (totalNumZeros >= this._minDifficulty) {\n                this.setState({\n                    computingProofOfWork: false,\n                });\n                return salt;\n            } else if (totalNumZeros > bestDifficulty) {\n                bestDifficulty = totalNumZeros;\n                this.setState({\n                    proofOfWorkProgress: Math.trunc(bestDifficulty * 100 / this._minDifficulty),\n                    proofOfWorkDifficulty: bestDifficulty,\n                    proofOfWorkSalt: salt,\n                });\n            } else if (salt % 10000 === 0) {\n                this.setState({\n                    proofOfWorkSalt: salt\n                });\n            }\n            // incrementing salt\n            for (let i = len - 8; i < len; ++i) {\n                if (msg[i] === 255) {\n                    msg[i] = 0;\n                } else {\n                    ++msg[i];\n                    break;\n                }\n            }\n        }\n    }\n\n    async createAccount() {\n        this.setState({\n            creating: true,\n            computingProofOfWork: true,\n            proofOfWorkProgress: 0,\n            proofOfWorkDifficulty: 0,\n            proofOfWorkSalt: 0,\n        })\n        const newAccountId = this.state.newAccountId + this._accountSuffix;\n        const seed = generateSeedPhrase();\n        const newKeyPair = nearlib.KeyPair.fromString(seed.secretKey);\n        const salt = await this.computeProofOfWork(newAccountId, newKeyPair.getPublicKey());\n        await this._faucetContract.create_account({\n            account_id: newAccountId,\n            public_key: [0, ...newKeyPair.getPublicKey().data],\n            salt,\n        });\n        await this._keyStore.setKey(this._nearConfig.networkId, newAccountId, newKeyPair);\n        this._authData = {\n            accountId: newAccountId,\n            seed,\n        };\n        window.localStorage.setItem(AuthDataKey, JSON.stringify(this._authData));\n        this.setState({\n            signedIn: true,\n            accountId: newAccountId,\n            creating: false,\n            numCreatedAccounts: await this._faucetContract.get_num_created_accounts(),\n        })\n        this.props.onLogin(this._authData);\n    }\n\n    moveAccountToWallet() {\n        window.location = `https://wallet.nearprotocol.com/recover-with-link/${this._authData.accountId}/${this._authData.seed.seedPhrase}`;\n    }\n\n    logout() {\n        window.localStorage.removeItem(AuthDataKey);\n        this._authData = {};\n        this.setState({\n            signedIn: false,\n            accountId: null,\n            newAccountId: \"\",\n            creating: false,\n            accountLoading: false,\n            newAccountExists: false,\n            computingProofOfWork: false,\n        });\n    }\n\n    render() {\n        const content = !this.state.connected ? (\n            <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n        ) : (this.state.signedIn ? (\n            <div>\n                <h3>Hello, {this.state.accountId}</h3>\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-success\"\n                        onClick={() => this.moveAccountToWallet()}\n                    >\n                        Move account to NEAR Wallet\n                    </button>\n                </div>\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-danger\"\n                        onClick={() => this.logout()}\n                    >\n                        Logout from Faucet\n                    </button>\n                </div>\n            </div>\n        ) : (\n            <div>\n                <div className=\"form-group\">\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <div className=\"input-group-text\">{\"@\"}</div>\n                        </div>\n                        <input\n                            placeholder=\"bob\"\n                            id=\"accountId\"\n                            className={this.newAccountClass()}\n                            value={this.state.newAccountId}\n                            onChange={(e) => this.handleChange('newAccountId', e.target.value)}\n                            disabled={this.state.creating}\n                        />\n                        <div className=\"input-group-append\">\n                            <div className=\"input-group-text\">{this._accountSuffix}</div>\n                        </div>\n                    </div>\n                </div>\n                {this.state.newAccountExists && (\n                    <div className=\"alert alert-warning\" role=\"alert\">\n                        Account {'\"' + this.state.newAccountId + this._accountSuffix + '\"'} already exists!\n                    </div>\n                )}\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-primary\"\n                        disabled={this.state.creating || this.state.accountLoading || this.state.newAccountExists || !this.isValidAccount(this.state.newAccountId)}\n                        onClick={() => this.createAccount()}\n                    >\n                        {(this.state.creating || this.state.accountLoading) && (\n                            <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                        )} Create Account {this.isValidAccount(this.state.newAccountId) ? ('\"' + this.state.newAccountId + this._accountSuffix + '\"') : \"\"}\n                    </button>\n                </div>\n                {this.state.creating && (\n                    <div>\n                        {this.state.computingProofOfWork ? (\n                            <div>\n                                Computing Proof of Work. Done {this.state.proofOfWorkSalt} operations.\n                                <div className=\"progress\">\n                                    <div className=\"progress-bar\" role=\"progressbar\" style={{width: this.state.proofOfWorkProgress + '%'}} aria-valuenow={this.state.proofOfWorkProgress} aria-valuemin=\"0\"\n                                         aria-valuemax=\"100\">{this.state.proofOfWorkDifficulty} out of {this._minDifficulty}\n                                    </div>\n                                </div>\n                            </div>\n                        ) : (\n                            <div>\n                                Proof of Work is Done! Creating account {'\"' + this.state.newAccountId + this._accountSuffix + '\"'}\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        ));\n        return (\n            <div>\n                <h3>or create a new account</h3>\n                {content}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport nearlogo from './assets/gray_near_logo.svg';\nimport './css/App.css';\nimport * as nearlib from \"nearlib\";\nimport { OpenWebApp } from 'near-openweb-js';\nimport { ProfileApp } from \"./apps/ProfileApp\";\nimport { MailApp } from \"./apps/MailApp\";\n// import { KeysApp } from \"./apps/KeysApp\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { PowFaucet, AuthDataKey}  from \"./components/PowFaucet\";\n\nconst GAS = 2_000_000_000_000_000;\nconst TITLE = \"Open Web Home - NEAR\"\nconst DefaultTabIndexKey = \"metanearDefaultTabIndex\";\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: false,\n      apps: {},\n      logs: [],\n      unread: 0,\n      loading: false,\n      defaultTabIndex: JSON.parse(window.localStorage.getItem(DefaultTabIndexKey) || '0'),\n    }\n    this.signedInFlow = this.signedInFlow.bind(this);\n    this.requestSignIn = this.requestSignIn.bind(this);\n    this.requestSignOut = this.requestSignOut.bind(this);\n    this.signedOutFlow = this.signedOutFlow.bind(this);\n    this.checkSignIn = this.checkSignIn.bind(this);\n    this.initOpenWebApp = this.initOpenWebApp.bind(this);\n    window.nearlib = nearlib;\n  }\n\n  componentDidMount() {\n    this.checkSignIn();\n  }\n\n  async checkSignIn() {\n    let loggedIn = window.walletAccount.isSignedIn();\n    let authData = JSON.parse(window.localStorage.getItem(AuthDataKey) || '{}');\n    if (loggedIn || authData.accountId) {\n      await this.signedInFlow(authData);\n    } else {\n      this.signedOutFlow();\n    }\n  }\n\n  log(message) {\n    console.log(message);\n    this.setState({\n      logs: this.state.logs.concat([message])\n    })\n  }\n\n  async signedInFlow(authData) {\n    const accountId = authData.accountId || await this.props.wallet.getAccountId();\n    this.setState({\n      login: true,\n      loading: true,\n      accountId,\n    })\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    if (window.location.search.includes(\"all_keys\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    // Initializing our contract APIs by contract name and configuration.\n\n    this.log(\"Connecting to account...\");\n    const account = await new nearlib.Account(window.near.connection, accountId);\n    this.log(\"Querying state...\");\n    let state = await account.state();\n    /*\n    await new Promise((resolve, reject) =>{\n      setTimeout(() => {\n        resolve();\n      }, 5000);\n    })\n     */\n    console.log(state);\n    if (state.code_hash !== 'C8UmYSqATkuyhheJ7i7ryxPjfZL4nV8PfkovdMKitsmJ') {\n      this.log(\"Going to deploy the code\");\n      // no code. Need to deploy.\n      this.log(\"Downloading started...\");\n      let data = await fetch('/open_web.wasm');\n      let buf = await data.arrayBuffer();\n      this.log(\"Downloading done. Deploying contract...\");\n      await account.deployContract(new Uint8Array(buf));\n      if (state.code_hash === '11111111111111111111111111111111') {\n        this.log(\"Deploying done. Initializing contract...\");\n        // Gotta init it.\n        let contract = await new nearlib.Contract(account, accountId, {\n          viewMethods: [],\n          // Change methods can modify the state. But you don't receive the returned value when called.\n          changeMethods: ['new'],\n          // Sender is the account ID to initialize transactions.\n          sender: accountId\n        });\n        console.log(await contract.new());\n      }\n      this.log(\"The contract is deployed\");\n    }\n\n    const masterContract = await new nearlib.Contract(account, accountId, {\n      // View methods are read only. They don't modify the state, but usually return some value.\n      viewMethods: ['apps'],\n      // Change methods can modify the state. But you don't receive the returned value when called.\n      changeMethods: ['add_app_key', 'remove_app_key'],\n      // Sender is the account ID to initialize transactions.\n      sender: accountId\n    });\n\n    this.masterContract = masterContract;\n    window.masterContract = masterContract;\n    this.log(\"Fetching authorized apps...\");\n    console.log(\"Apps:\", await masterContract.apps());\n\n    // this.initOpenWebApp = this.initOpenWebApp.bind(this);\n\n    this.log(\"Initializing local apps...\");\n    const apps = {\n      profile: await this.initOpenWebApp('profile', accountId),\n      // graph: await this.initOpenWebApp('graph', accountId),\n      mail: await this.initOpenWebApp('mail', accountId),\n      // keys: await this.initOpenWebApp('keys', accountId)\n    };\n    window.apps = apps;\n    this.apps = apps;\n    this.setState({\n      apps,\n      loading: false,\n    })\n  }\n\n  async initOpenWebApp(appId, accountId) {\n    this.log(\"Initializing app: \" + appId + \" ...\");\n    const app = new OpenWebApp(appId, accountId, window.nearConfig);\n    await app.init();\n    if (!await app.ready()) {\n      let pk = await app.getAccessPublicKey();\n      this.log(\"Authorizing app for key \" + pk.toString() + \" ...\");\n      const serializedPk = await app.getSerializedAccessPublicKey();\n      const args = {\n        public_key: [...serializedPk],\n        app_id: appId,\n      };\n      await this.masterContract.add_app_key(args, GAS);\n      await app.onKeyAdded();\n    }\n    return app;\n  }\n\n  async requestSignIn() {\n    const appTitle = 'Open Web Home';\n    await this.props.wallet.requestSignIn(\n      \"\",\n      appTitle\n    )\n  }\n\n  requestSignOut = () => {\n    this.props.wallet.signOut();\n    setTimeout(this.signedOutFlow, 500);\n    console.log(\"after sign out\", this.props.wallet.isSignedIn())\n  }\n\n\n  signedOutFlow = () => {\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    this.setState({\n      login: false,\n    })\n  }\n\n  selectTab = (index) => {\n    window.localStorage.setItem(DefaultTabIndexKey, JSON.stringify(index));\n    this.setState({\n      defaultTabIndex: index,\n    })\n  }\n\n  render() {\n    document.title = (this.state.unread ? `(${this.state.unread}) ` : \"\") + TITLE;\n    if (!this.state.login) {\n      return <div className=\"App-header\">\n        <div>\n          <div className=\"image-wrapper\">\n            <img className=\"logo\" src={nearlogo} alt=\"NEAR logo\"/>\n          </div>\n          <h1>Hello ?</h1>\n          <div>\n            <button\n                className=\"btn btn-primary\"\n                onClick={this.requestSignIn}>Log in with NEAR Wallet</button>\n          </div>\n          <PowFaucet onLogin={this.signedInFlow}/>\n        </div>\n      </div>\n    } else if (this.state.loading) {\n      return <div className=\"loading-div\">\n        <div className=\"spinner-grow loading-spinner\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <pre className=\"text-left\">\n          {this.state.logs.join(\"\\n\")}\n        </pre>\n      </div>\n    } else {\n      return <div className={\"apps\" + (this.state.loading ? \" d-none\" : \"\")}>\n        <Tabs forceRenderTabPanel={true} defaultIndex={this.state.defaultTabIndex} onSelect={(i) => this.selectTab(i)}>\n          <TabList>\n            <Tab>Profile</Tab>\n            <Tab>Mail {this.state.unread ? `(${this.state.unread})` : \"\"}</Tab>\n            {/*<Tab>Keys</Tab>*/}\n          </TabList>\n\n          <TabPanel>\n            <ProfileApp app={this.state.apps.profile} logOut={this.requestSignOut}/>\n          </TabPanel>\n          <TabPanel>\n            <MailApp app={this.state.apps.mail} onNewMail={(unread) => this.setState({unread})}/>\n          </TabPanel>\n          {/*<TabPanel>\n            <KeysApp app={this.state.apps.keys}/>\n          </TabPanel>*/}\n        </Tabs>\n      </div>\n    }\n  }\n}\n","import React from \"react\";\nimport queryString from 'query-string';\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    const values = queryString.parse(this.props.location.search);\n    let {app_id, pub_key} = values;\n    if (app_id && pub_key) {\n      this.state = {\n        authorized:false,\n        new_app_id:app_id,\n        new_pub_key:pub_key\n      };\n    } else {\n      this.state = {\n        authorized:false,\n        new_app_id:\"\",\n        new_pub_key:\"\"\n      }\n    }\n  }\n\n componentDidMount() {\n    if (!this.props.loading && this.state.new_app_id && this.state.new_pub_key) {\n      this.props.initOpenWebApp(this.state.new_app_id, this.state.new_pub_key)\n        .then(res => {\n          this.setState({\n            authorized: true\n          })\n        });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      // this.init();\n    }\n  }\n  \n  // async fetchProfile(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  // async registerNewApp(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  render() {\n    return (\n      <div>\n        {this.state.authorized ? \n        <div>\n          <p>App <strong>{this.state.new_app_id}</strong> was added</p>\n          <p> Using the public key: {this.state.new_pub_key} </p>\n        </div> :\n        \"You need pass a key in order to add an app\"\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport { Home } from './Home';\nimport { Auth } from './Auth';\n\nclass Router extends Component {\n  render() {\n    return (\n      <HashRouter basename={process.env.PUBLIC_URL} hashType=\"noslash\">\n        <Switch>\n          <Route exact path=\"/\" component={() => <Home {...this.props}/>} />\n          <Route path=\"/auth\" component={() => <Auth {...this.props}/>} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport getConfig from './near/config.js';\nimport * as nearlib from 'nearlib';\n\n// Initializing contract\nasync function InitContract() {\n    window.nearConfig = getConfig('development')\n\n    // Initializing connection to the NEAR DevNet.\n    window.near = await nearlib.connect(Object.assign({ deps: { keyStore: new nearlib.keyStores.BrowserLocalStorageKeyStore() } }, window.nearConfig));\n    \n    // Needed to access wallet login\n    window.walletAccount = new nearlib.WalletAccount(window.near);\n    \n    // Getting the Account ID. If unauthorized yet, it's just empty string.\n    window.accountId = window.walletAccount.getAccountId();\n\n}\n\nwindow.nearInitPromise = InitContract().then(() => {\n    ReactDOM.render(<Router contract={window.contract} wallet={window.walletAccount}/>,\n      document.getElementById('root')\n    );\n  }).catch(console.error)","module.exports = __webpack_public_path__ + \"static/media/anon.5cbbd243.png\";"],"sourceRoot":""}