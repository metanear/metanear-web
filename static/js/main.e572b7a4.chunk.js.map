{"version":3,"sources":["apps/Chat/ChatMessage.js","assets/gray_near_logo.svg","assets/encryptionOn.png","assets/encryptionOff.png","assets/anon.png","apps/ProfileApp.js","apps/Chat/ChatApp.js","apps/MailApp.js","components/PowFaucet.js","Home.js","Auth.js","Router.js","index.js","apps/Chat/Channel.js"],"names":["ProfileMessageStyle","profile","display","ChatMessage","props","state","displayName","profileUrl","anon","p","this","setState","message","content","text","senderId","time","t","d","Date","getDate","toLocaleTimeString","hour","minute","toLocaleDateString","formatTime","showMeta","accountId","styles","onFetch","onProfile","className","pending","src","alt","role","aria-hidden","React","Component","module","exports","ProfileApp","keys","reduce","acc","key","chainValues","initialized","saving","hasChanges","appReady","newState","app","waitReady","then","maybeInit","prevProps","value","some","console","log","Object","assign","promises","forEach","push","set","Promise","all","f","sourceImage","Image","reader","FileReader","readAsDataURL","onload","canvas","document","createElement","aspect","naturalWidth","naturalHeight","width","Math","round","max","height","ctx","getContext","imageSmoothingQuality","fillStyle","fillRect","drawImage","options","toDataURL","sort","a","b","length","handleChange","event","target","result","e","onClick","logOut","bio","defaultProfileUrl","init","htmlFor","placeholder","id","disabled","onChange","type","onFilesChange","onError","onFilesError","multiple","accepts","minFileSize","clickable","save","ProfileInlineStyle","whiteSpace","profileImage","borderRadius","verticalAlign","marginRight","profileName","profileDisplayName","profileAccountId","ChatApp","channelId","sending","currentMessage","textInput","createRef","current","focus","getTime","JSON","stringify","channel_id","sendMessage","ChatContract","preventDefault","stopPropagation","Channel","ref","onKeyDown","MailApp","receiverId","subject","numLetters","unread","expandedId","profileFound","profileLoading","keyLoading","theirPublicKey64","inbox","textarea","keyCache","letter","messageId","undefined","filter","read","onUnread","version","num","get","allMigrations","i","encrypted","resolve","catch","storeEncryptionPublicKey","migrateFrom","modifyLetter","fetchMessages","getStoredEncryptionPublicKey","fetchKey","stateChange","toLowerCase","replace","fetchTimeoutId","clearTimeout","pullMessage","setTimeout","inner","parse","isEncrypted","fromAppId","appId","decryptMessage","sender","decryptedMessage","trunc","newNumLetters","warn","error","encryptMessage","startsWith","join","split","map","s","setSelectionRange","scrollLeft","scrollTop","remove","encryptionEnabled","displayEncryptionIcon","encryptionAlt","encryptionIcon","encryptionOn","encryptionOff","title","updateKey","expanded","deleteLetter","replyTo","selectLetter","aria-label","receiverClass","rows","sendMail","Letter","toLocaleString","getHours","getMinutes","toString","padStart","daytime","timeFormat","ValidAccountRe","AuthDataKey","PowFaucet","connected","signedIn","newAccountId","creating","accountLoading","newAccountExists","computingProofOfWork","mounted","initNear","_authData","_keyStore","getKey","_nearConfig","networkId","keyPair","nearlib","fromString","setKey","account","_near","connection","_faucetContract","viewMethods","changeMethods","get_account_suffix","_accountSuffix","get_min_difficulty","_minDifficulty","get_num_created_accounts","numCreatedAccounts","nearConfig","nodeUrl","contractName","walletUrl","keyStore","BrowserLocalStorageKeyStore","deps","near","window","localStorage","getItem","initFaucet","isValidAccount","provider","query","_a","includes","match","publicKey","msg","TextEncoder","encode","data","charCodeAt","Uint8Array","len","bestDifficulty","salt","crypto","subtle","digest","hashBuffer","totalNumZeros","numZeros","clz32","proofOfWorkProgress","proofOfWorkDifficulty","proofOfWorkSalt","seed","generateSeedPhrase","newKeyPair","secretKey","computeProofOfWork","getPublicKey","create_account","account_id","public_key","setItem","onLogin","location","seedPhrase","removeItem","moveAccountToWallet","logout","newAccountClass","createAccount","style","aria-valuenow","aria-valuemin","aria-valuemax","Home","selectTab","index","defaultTabIndex","login","apps","logs","mailUnread","chatUnread","loading","offlineChatApp","signedInFlow","bind","requestSignIn","requestSignOut","signedOutFlow","checkSignIn","initMetaNearApp","loggedIn","walletAccount","isSignedIn","authData","concat","wallet","getAccountId","search","origin","pathname","code_hash","fetch","arrayBuffer","buf","deployContract","contract","new","masterContract","chat","mail","MetaNearApp","ready","getAccessPublicKey","pk","getSerializedAccessPublicKey","serializedPk","args","app_id","add_app_key","onKeyAdded","signOut","forceRenderTabPanel","defaultIndex","onSelect","flexGrow","nearlogo","Auth","values","queryString","pub_key","authorized","new_app_id","new_pub_key","res","Router","basename","process","hashType","exact","path","component","nearInitPromise","InitContract","ReactDOM","render","getElementById","messages","channelHash","cachedRanges","cachedMessages","fetchingMessages","channelInnerRef","textEncoder","Buffer","from","r","first","last","updateState","scrollHeight","scrollDown","cache","loadCache","fetchNewMessages","rs","fromIndex","toIndex","getFrom","ChannelMessages","from_index","limit","m","addNewMessage","sender_id","channel","ChannelStatus","channelStatus","numChannelMessages","num_messages","lastNumMessages","lastMessage","chatMessage","onReply"],"mappings":"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","file":"static/js/main.e572b7a4.chunk.js","sourcesContent":["import React from \"react\";\nimport anon from \"../../assets/anon.png\";\nimport {Profile} from \"metanear-react-components\";\n\nconst ProfileMessageStyle = {\n    profile: {\n        display: 'none',\n    },\n};\n\nconst formatTime = (t) => {\n    const d = new Date(t);\n    const c = new Date();\n    if (c.getDate() === d.getDate()) {\n        return d.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n    } else {\n        return d.toLocaleDateString()\n    }\n}\n\nexport class ChatMessage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayName: \"\",\n            profileUrl: anon,\n        };\n    }\n\n\n    onProfile(p) {\n        this.setState({\n            displayName: (p && p.displayName) || \"\",\n            profileUrl: (p && p.profileUrl) || anon,\n        })\n    }\n\n    render() {\n        const message = this.props.message;\n        const content = message.text;\n        const senderId = message.senderId;\n        const time = formatTime(message.time);\n        const p = this.props.showMeta && <Profile accountId={senderId} styles={ProfileMessageStyle} onFetch={(p) => this.onProfile(p)}/>;\n        return (\n            <div className={\"chat-message\" + (this.props.pending ? \" chat-message-pending\" : \"\") + (!this.props.showMeta ? \" chat-message-no-meta\" : \"\")}>\n                {p}\n                <img className=\"chat-message-profile\" src={this.state.profileUrl} alt={`Profile @${senderId}`}/>\n                <div className=\"chat-message-content\">\n                    <div className=\"chat-message-meta\">\n                        <div className=\"chat-message-sender-name\">{this.state.displayName || (\"@\" + senderId)}</div>\n                        {this.state.displayName && <div className=\"chat-message-sender-id\">{\"(@\" + senderId + \")\"}</div>}\n                        {this.props.pending ?\n                            <div className=\"chat-message-time\"><span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span> sending</div> :\n                            <div className=\"chat-message-time\">{time}</div>\n                        }\n                    </div>\n                    {content}\n                </div>\n            </div>\n        )\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/gray_near_logo.55517b93.svg\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOn.23e3b306.png\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOff.475ce496.png\";","module.exports = __webpack_public_path__ + \"static/media/anon.5cbbd243.png\";","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport Files from \"react-files\";\nimport { Profile } from \"metanear-react-components\";\n\nconst uploadResizeWidth = 96;\nconst uploadResizeHeight = 96;\n\nexport class ProfileApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const keys = [\n      \"displayName\",\n      \"profileUrl\",\n      \"bio\",\n    ];\n    this.state = keys.reduce((acc, key) => {\n      acc[key] = \"\";\n      acc.chainValues[key] = null;\n      return acc;\n    }, {\n      keys,\n      chainValues: {},\n      initialized: false,\n      saving: false,\n      hasChanges: false,\n      appReady: false,\n    });\n  }\n\n  async init(profile) {\n    if (!profile) {\n      return;\n    }\n    const newState = this.state.keys.reduce((state, key) => {\n      state[key] = profile[key] || \"\";\n      state.chainValues[key] = state[key];\n      return state;\n    }, {\n      chainValues: {}\n    });\n    this.setState(newState);\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => {\n        this.setState({\n          appReady: true,\n        })\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  handleChange(key, value) {\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  hasChanges() {\n    return this.state.keys.some(key => this.state.chainValues[key] !== this.state[key]);\n  }\n\n  async save() {\n    this.setState({\n      saving: true,\n    });\n    console.log(\"Saving\");\n    const chainValues = Object.assign({}, this.state.chainValues);\n    const promises = [];\n    this.state.keys.forEach(key => {\n      if (this.state.chainValues[key] !== this.state[key]) {\n        chainValues[key] = this.state[key];\n        promises.push(this.props.app.set(key, this.state[key]).then(() => {\n          console.log(\"Updated key `\" + key + \"` to value `\" + this.state[key] + '`');\n        }));\n      }\n    });\n    Promise.all(promises).then(() => {\n      this.setState({\n        chainValues,\n        saving: false,\n      })\n    });\n  }\n\n  async onFilesChange(f) {\n    let sourceImage = new Image();\n    let reader = new FileReader();\n\n    reader.readAsDataURL(f[0]);\n\n    sourceImage.onload = () => {\n      // Create a canvas with the desired dimensions\n      let canvas = document.createElement(\"canvas\");\n      const aspect = sourceImage.naturalWidth / sourceImage.naturalHeight;\n      const width = Math.round(uploadResizeWidth * Math.max(1, aspect));\n      const height = Math.round(uploadResizeHeight * Math.max(1, 1 / aspect));\n      canvas.width = uploadResizeWidth;\n      canvas.height = uploadResizeHeight;\n      const ctx = canvas.getContext(\"2d\");\n\n      // Scale and draw the source image to the canvas\n      ctx.imageSmoothingQuality = \"high\";\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, uploadResizeWidth, uploadResizeHeight);\n      ctx.drawImage(sourceImage, (uploadResizeWidth - width) / 2, (uploadResizeHeight - height) / 2, width, height);\n\n      // Convert the canvas to a data URL in PNG format\n      const options = [\n        canvas.toDataURL('image/jpeg', 0.92),\n        // Disabling webp because it doesn't work on iOS.\n        // canvas.toDataURL('image/webp', 0.92),\n        canvas.toDataURL('image/png')\n      ];\n      options.sort((a, b) => a.length - b.length);\n\n      this.handleChange('profileUrl', options[0]);\n    }\n\n    reader.onload = function(event) {\n      sourceImage.src = event.target.result;\n    };\n  }\n\n  async onFilesError(e, f) {\n    console.log(e, f);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <button className=\"float-right\" onClick={this.props.logOut}>Log out</button>\n          <Profile\n            accountId={this.props.app && this.props.app.accountId}\n            profileUrl={this.state.profileUrl}\n            displayName={this.state.displayName}\n            bio={this.state.bio}\n            defaultProfileUrl={anon}\n            onFetch={(profile) => this.init(profile)}\n          />\n        </div>\n        <hr/>\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"displayName\">Display Name</label>\n            <input placeholder=\"The REAL Satoshi\" id=\"displayName\" className=\"form-control\" disabled={!this.props.app} value={this.state.displayName} onChange={(e) => this.handleChange('displayName', e.target.value)} />\n          </div>\n          <label htmlFor=\"profileUrl\">Profile URL</label>\n          <div className=\"input-group\">\n            <input placeholder={\"https://metanear.com\" + anon} id=\"profileUrl\" className=\"form-control\" disabled={!this.props.app} value={this.state.profileUrl}\n                   onChange={(e) => this.handleChange('profileUrl', e.target.value)}/>\n            <div className=\"input-group-append\">\n              <Files\n                type=\"button\"\n                className='btn btn-outline-primary'\n                onChange={(f) => this.onFilesChange(f)}\n                onError={(e, f) => this.onFilesError(e, f)}\n                multiple={false}\n                accepts={['image/*']}\n                minFileSize={1}\n                clickable\n              >\n                Click to upload\n              </Files>\n            </div>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"bio\">Bio</label>\n            <textarea placeholder=\"I'm working on Bitcoin, so bankers can go home.\" id=\"bio\" className=\"form-control\" disabled={!this.props.app} value={this.state.bio} onChange={(e) => this.handleChange('bio', e.target.value)} />\n          </div>\n          <div className=\"form-group\">\n            <button\n                className=\"btn btn-primary\"\n                disabled={this.state.saving || !this.hasChanges()}\n                onClick={() => this.save()}\n            >\n              {this.state.saving && (\n                  <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n              )} Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport anon from \"../../assets/anon.png\";\nimport { Profile } from \"metanear-react-components\";\nimport { Channel, ChatContract } from \"./Channel\";\nimport './Chat.css';\n\nconst ProfileInlineStyle = {\n  profile: {\n    whiteSpace: 'nowrap',\n    display: 'inline-block',\n  },\n  profileImage: {\n    height: '2em',\n    width: '2em',\n    borderRadius: '50%',\n    verticalAlign: 'middle',\n    marginRight: '0.5em',\n  },\n  profileName: {\n    display: 'none',\n  },\n  profileDisplayName: {},\n  profileAccountId: {},\n};\n\nexport class ChatApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      appReady: false,\n      text: \"\",\n      channelId: \"public\",\n      sending: false,\n      currentMessage: null,\n    };\n    this.textInput = React.createRef();\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => {\n        this.setState({\n          appReady: true,\n        }, () => {\n          this.textInput.current.focus();\n        })\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  handleChange(key, value) {\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  async sendMessage() {\n    console.log(\"Sending chat message\");\n    let text = this.state.text;\n    this.setState({\n      sending: true,\n      text: \"\",\n      currentMessage: {\n        text,\n        senderId: this.props.app.accountId,\n        time: new Date().getTime(),\n      }\n    });\n    try {\n      let message = JSON.stringify({\n        ChatMessage: {\n          channel_id: this.state.channelId,\n          text,\n        }\n      });\n      await this.props.app.sendMessage(ChatContract, message);\n      text = \"\";\n    } catch (e) {\n      console.log(\"Failed to send the chat message\", e);\n    } finally {\n      this.setState({\n        text,\n        sending: false,\n        currentMessage: null,\n      });\n    };\n  }\n\n  onKeyDown(event) {\n    // 'keypress' event misbehaves on mobile so we track 'Enter' key via 'keydown' event\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendMessage();\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"chat-app h100 cflex\">\n        <div className=\"channels\">\n          <div className=\"current-channel\">#{this.state.channelId}</div>\n        </div>\n        <Channel channelId={this.state.channelId} app={this.props.app} currentMessage={this.state.currentMessage}/>\n        <br/>\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            {this.state.appReady && (<Profile accountId={this.props.app.accountId} defaultProfileUrl={anon} styles={ProfileInlineStyle}/>)}\n          </div>\n          <input ref={this.textInput}\n                 id=\"text\"\n                 placeholder={\"Message #\" + this.state.channelId}\n                 className=\"form-control form-control\"\n                 disabled={!this.state.appReady || this.state.sending}\n                 value={this.state.text}\n                 onKeyDown={(e) => this.onKeyDown(e)}\n                 onChange={(e) => this.handleChange('text', e.target.value)}/>\n          <div className=\"input-group-append\">\n            <button\n                className='btn btn-primary'\n                disabled={!this.state.appReady || this.state.sending}\n                onClick={() => this.sendMessage()}\n            >\n              {this.state.sending && (\n                  <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n              )} Send\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport encryptionOn from \"../assets/encryptionOn.png\";\nimport encryptionOff from \"../assets/encryptionOff.png\";\nimport { Profile } from \"metanear-react-components\";\n\nconst RE = \"Re: \";\nconst currentVersion = 2;\n\nexport class MailApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      receiverId: \"\",\n      subject: \"\",\n      content: \"\",\n      sending: false,\n      numLetters: 0,\n      unread: 0,\n      expandedId: -1,\n      profileFound: false,\n      profileLoading: false,\n      keyLoading: false,\n      theirPublicKey64: null,\n      inbox: [],\n    }\n    this.textarea = React.createRef();\n    this.keyCache = {};\n  }\n\n  modifyLetter(letter, messageId) {\n    if (messageId === undefined) {\n      if (!letter) {\n        return;\n      }\n      messageId = letter.messageId;\n    }\n    const inbox = this.state.inbox.filter((a) => a.messageId !== messageId);\n    if (letter) {\n      inbox.push(letter);\n    }\n    inbox.sort((a, b) => b.time - a.time);\n    const unread = inbox.reduce((acc, letter) => acc + (letter.read ? 0: 1), 0);\n    this.setState({\n      inbox,\n      unread,\n    });\n    this.props.onUnread(unread);\n  }\n\n  async migrateFrom(version) {\n    if (version === 0) {\n      console.log(\"Migrating from version #0\");\n      let num = 0;\n      try {\n        num = await this.props.app.get('numLetters');\n      } catch (e) {\n        // whatever. Probably died during migration.\n      }\n      const allMigrations = [];\n      for (let i = 0; i < num; ++i) {\n        allMigrations.push(this.props.app.get('letter_' + i).then((letter) => {\n          if (letter) {\n            return this.props.app.set('letter_' + i, letter, {encrypted: true}).then(() => {\n              console.log(\"Migrated letter #\" + i);\n            })\n          }\n          return Promise.resolve();\n        }).catch((e) => console.log(\"Can't migrate letter #\", i, e)));\n      }\n      await Promise.all(allMigrations);\n      await this.props.app.set('numLetters', num, { encrypted: true });\n      version++;\n    }\n    if (version === 1) {\n      console.log(\"Migrating from version #1\");\n      await this.props.app.storeEncryptionPublicKey();\n      version++;\n    }\n    await this.props.app.set('version', version, { encrypted: true });\n  }\n\n  async init() {\n    let version;\n    try {\n      version = await this.props.app.get('version', {encrypted: true}) || 0;\n    } catch (e) {\n      // likely mismatched keys\n      console.log(e);\n      return;\n    }\n    if (version < currentVersion) {\n      await this.migrateFrom(version);\n    }\n    const num = await this.props.app.get('numLetters', { encrypted: true }) || 0;\n    this.setState({\n      numLetters: num,\n    });\n    for (let i = Math.max(0, num - 10); i < num; ++i) {\n      this.props.app.get('letter_' + i, {encrypted: true}).then((letter) => this.modifyLetter(letter));\n    }\n    this.fetchMessages();\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => this.init());\n    }\n  }\n\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  async fetchKey(accountId) {\n    if (accountId in this.keyCache) {\n      return await this.keyCache[accountId];\n    } else {\n      console.log(\"Fetching key for \" + accountId);\n      this.keyCache[accountId] = this.props.app.getStoredEncryptionPublicKey(accountId, {}).catch((e) => false);\n      return await this.keyCache[accountId];\n    }\n  }\n\n  updateKey(profile) {\n    if (!this.props.app) {\n      return;\n    }\n    this.setState({\n      profileLoading: false,\n      profileFound: !!profile,\n    });\n    if (!profile) {\n      return;\n    }\n    this.setState({\n      keyLoading: true,\n    })\n    this.fetchKey(profile.accountId).then((theirPublicKey64) => {\n      this.setState({\n        keyLoading: false,\n        theirPublicKey64,\n      })\n    });\n  }\n\n  handleChange(key, value) {\n    const stateChange = {\n      [key]: value,\n    };\n    if (key === 'receiverId') {\n      value = value.toLowerCase().replace(/[^a-z0-9\\-_.]/, '');\n      stateChange[key] = value;\n      stateChange.profileLoading = true;\n      stateChange.theirPublicKey64 = false;\n    }\n    this.setState(stateChange);\n  }\n\n  async fetchMessages() {\n    if (!this.props.app) {\n      return;\n    }\n    if (this.fetchTimeoutId) {\n      clearTimeout(this.fetchTimeoutId);\n      this.fetchTimeoutId = null;\n    }\n    console.log(\"Fetching messages\");\n    const message = await this.props.app.pullMessage();\n    if (!message) {\n      this.fetchTimeoutId = setTimeout(() => { this.fetchMessages() }, 60 * 1000);\n      return;\n    }\n    try {\n      console.log(message);\n      let inner = JSON.parse(message.message);\n      const isEncrypted = inner.type === 'encrypted';\n      const fromAppId = inner.fromAppId || this.props.app.appId;\n      if (isEncrypted) {\n        const decryptedMessage = await this.props.app.decryptMessage(inner.content, {\n          accountId: message.sender,\n          appId: inner.fromAppId,\n        });\n        inner = JSON.parse(decryptedMessage);\n      }\n      if (inner.type === 'mail') {\n        const letter = {\n          messageId: this.state.numLetters,\n          isEncrypted,\n          fromAppId,\n          sender: message.sender,\n          subject: inner.subject,\n          content: inner.content,\n          time: Math.trunc(message.time / 1000000),\n        }\n        const newNumLetters = this.state.numLetters + 1;\n        this.setState({\n          numLetters: newNumLetters,\n        });\n\n        this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n          console.log(\"Saved the letter: \", letter);\n        });\n        this.props.app.set(\"numLetters\", newNumLetters, {encrypted: true}).then(() => {\n            console.log(\"Saved the new number of letters: \", newNumLetters);\n        });\n        this.modifyLetter(letter);\n      } else {\n        console.warn(\"Unknown message\", message);\n      }\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.fetchMessages()\n    }\n  }\n\n  async sendMail() {\n    if (!this.state.profileFound) {\n      return;\n    }\n    console.log(\"Sending mail\");\n    this.setState({\n      sending: true,\n    });\n    try {\n      let message = JSON.stringify({\n        type: \"mail\",\n        subject: this.state.subject,\n        content: this.state.content,\n      });\n      if (this.state.theirPublicKey64) {\n        const content = await this.props.app.encryptMessage(message, {\n          theirPublicKey64: this.state.theirPublicKey64,\n        });\n        message = JSON.stringify({\n          type: \"encrypted\",\n          fromAppId: this.props.app.appId,\n          content,\n        })\n      }\n      await this.props.app.sendMessage(this.state.receiverId, message);\n      this.setState({\n        subject: \"\",\n        content: \"\",\n      })\n    } catch (e) {\n      console.log(\"Failed to send the message\", e);\n    } finally {\n      this.setState({\n        sending: false,\n      });\n      setTimeout(() => this.fetchMessages(), 2000);\n    };\n  }\n\n  receiverClass() {\n    if (!this.state.receiverId || this.state.profileLoading) {\n      return \"form-control\";\n    } else if (this.state.profileFound) {\n      return \"form-control is-valid\";\n    } else {\n      return \"form-control is-invalid\";\n    }\n  }\n\n  replyTo(letter, displayName) {\n    this.handleChange(\"receiverId\", letter.sender);\n    this.setState({\n      subject: (letter.subject.startsWith(RE) ? \"\" : RE) + letter.subject,\n      content: [\n        \"\",\n        \"\",\n        [\"On\", new Date(letter.time).toLocaleDateString(), displayName, \"@\" + letter.sender, \"wrote:\"].join(' '),\n        ...letter.content.split(/\\r?\\n/).map(s => \"| \" + s)\n      ].join(\"\\n\"),\n    }, () => {\n      this.textarea.current.focus();\n      this.textarea.current.setSelectionRange(0, 0);\n      this.textarea.current.scrollLeft = 0;\n      this.textarea.current.scrollTop = 0;\n    });\n  }\n\n  selectLetter(letter) {\n    this.setState({\n      expandedId: (this.state.expandedId === letter.messageId) ? -1 : letter.messageId,\n    });\n    if (!letter.read) {\n      letter = JSON.parse(JSON.stringify(letter));\n      letter.read = true;\n      this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n        console.log(\"Saved the letter: \", letter);\n      });\n      this.modifyLetter(letter);\n    }\n  }\n\n  deleteLetter(letter) {\n    this.props.app.remove(\"letter_\" + letter.messageId).then(() => {\n      console.log(\"Deleted the letter: \", letter);\n    });\n    this.modifyLetter(null, letter.messageId);\n  }\n\n  render() {\n    const encryptionEnabled = this.state.theirPublicKey64;\n    const displayEncryptionIcon = this.state.profileFound && !this.state.keyLoading;\n    const encryptionAlt = encryptionEnabled ? \"Encryption is ON\" : \"Not secure! Encryption is OFF\";\n    const encryptionIcon = displayEncryptionIcon &&\n      <img className=\"encryption-icon\" src={encryptionEnabled ? encryptionOn : encryptionOff}\n          title={encryptionAlt} alt={encryptionAlt}/>;\n    const profile = <Profile accountId={this.state.receiverId} onFetch={(profile) => this.updateKey(profile)} defaultProfileUrl={anon}/>;\n    const inbox = this.state.inbox.map((letter, i) => (\n      <Letter\n        key={letter.messageId}\n        letter={letter}\n        expanded={letter.messageId === this.state.expandedId}\n        deleteLetter={(letter) => this.deleteLetter(letter)}\n        replyTo={(letter, displayName) => this.replyTo(letter, displayName)}\n        selectLetter={(letter) => this.selectLetter(letter)} />\n    ));\n    return (\n      <div>\n        Inbox <button className=\"btn btn-sm\" onClick={() => this.fetchMessages()}><span role=\"img\" aria-label=\"Refresh\">🔄</span></button>\n        <div>\n          {inbox}\n        </div>\n        <h3>Send</h3>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label className=\"sr-only\" htmlFor=\"toAccountId\">To Account ID</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">@</div>\n                </div>\n                <input type=\"text\" className={this.receiverClass()} id=\"toAccountId\" placeholder=\"To Account ID\" value={this.state.receiverId} disabled={!this.props.app} onChange={(e) => this.handleChange('receiverId', e.target.value)} />\n              </div>\n            </div>\n          </div>\n          {profile}\n        </div>\n        <div className=\"form-group\">\n          <label className=\"sr-only\" htmlFor=\"subject\">Subject</label>\n          <input type=\"text\" className=\"form-control\" id=\"subject\" placeholder=\"Subject\" disabled={!this.props.app} value={this.state.subject} onChange={(e) => this.handleChange('subject', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <textarea ref={this.textarea} id=\"content\" className=\"form-control\" rows=\"7\" disabled={!this.props.app} value={this.state.content} onChange={(e) => this.handleChange('content', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <button className={\"form-control form-control-lg btn \" + (displayEncryptionIcon && !encryptionEnabled ? \"btn-danger\" : \"btn-primary\")} disabled={!this.state.profileFound || this.state.sending} onClick={() => this.sendMail()}>\n            Send {encryptionIcon}</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport class Letter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: {\n        profileUrl: null,\n        displayName: '@' + props.letter.sender,\n      },\n    };\n  }\n\n  onClick() {\n    this.props.selectLetter(this.props.letter);\n  }\n\n  render() {\n    const profile = (\n      <div className=\"col-sm-6 col-md-4 col-lg-4 letter-profile\">\n        <Profile accountId={this.props.letter.sender} onFetch={(profile) => profile && this.setState({displayName: profile.displayName})} defaultProfileUrl={anon}/>\n      </div>\n    );\n    const subject = (\n      <div className=\"col-sm-4 col-md\">\n        <div className=\"letter-subject\">{this.props.letter.subject}</div>\n      </div>\n    );\n    const time = this.props.expanded ? (\n      <div className=\"col-sm-2 col-lg-2\">\n        <div className=\"letter-time\">{longTimeFormat(this.props.letter.time)}</div>\n      </div>\n    ) : (\n      <div className=\"col-sm-2 col-lg-1 d-none d-md-block\">\n        <div className=\"letter-time\">{timeFormat(this.props.letter.time)}</div>\n      </div>\n    );\n    if (this.props.expanded) {\n      return (\n        <div className=\"letter letter-expanded\">\n          <div className=\"row letter-expanded-header\" onClick={() => this.onClick()}>\n            {profile}\n            {subject}\n            {time}\n          </div>\n          <div className=\"letter-content-expanded\">\n            <pre>{this.props.letter.content}</pre>\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <button className=\"btn btn-primary\" onClick={() => this.props.replyTo(this.props.letter, this.state.displayName)}>Reply</button>\n              </div>\n              <div className=\"col-sm\">\n                <button className=\"btn btn-danger float-right\" onClick={() => this.props.deleteLetter(this.props.letter)}>DELETE THIS!</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={\"row letter letter-small\" + (this.props.letter.read ? \" letter-read\" : \" letter-unread\")} onClick={() => this.onClick()}>\n          {profile}\n          {subject}\n          <div className=\"col-sm d-none d-lg-block\">\n            <div className=\"letter-content\">{this.props.letter.content}</div>\n          </div>\n          {time}\n        </div>\n      );\n    }\n  }\n}\n\nfunction longTimeFormat(t) {\n  return new Date(t).toLocaleString();\n}\n\nfunction timeFormat(t) {\n  const d = new Date(t);\n  const now = new Date();\n  if (now.getDate() === d.getDate()) {\n    const hour = d.getHours() % 12;\n    const minute = d.getMinutes().toString().padStart(2, '0');\n    const daytime = d.getHours() >= 12 ? \"PM\" : \"AM\";\n    return `${hour}:${minute} ${daytime}`;\n  } else {\n    return d.toLocaleDateString();\n  }\n}\n","import React from 'react';\nimport * as nearlib from 'near-api-js';\nimport { generateSeedPhrase } from 'near-seed-phrase';\n\nconst FaucetPrivateKey = 'ed25519:2Rtn6ms22rCRMgmGgLRSPPd6gYDCgWDuFrX6gERknSA8GKiCHE5L9Rksc1ihsSCDvMSptfbipzq29H7cDZhR1Ze3';\nconst FaucetName = 'meta';\nconst MinAccountIdLen = 2;\nconst MaxAccountIdLen = 64;\nconst ValidAccountRe = /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\nexport const AuthDataKey = \"meta-faucet-auth-data\";\n\nexport class PowFaucet extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            connected: false,\n            signedIn: false,\n            accountId: null,\n            newAccountId: \"\",\n            creating: false,\n            accountLoading: false,\n            newAccountExists: false,\n            computingProofOfWork: false,\n        };\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.initNear().then(() => {\n            this.mounted && this.setState({\n                connected: true,\n                signedIn: !!this._authData.accountId,\n                accountId: this._authData.accountId,\n            })\n        })\n    }\n\n    async initFaucet() {\n        let key = await this._keyStore.getKey(this._nearConfig.networkId, FaucetName);\n        if (!key) {\n            const keyPair = nearlib.KeyPair.fromString(FaucetPrivateKey);\n            await this._keyStore.setKey(this._nearConfig.networkId, FaucetName, keyPair);\n        }\n        const account = new nearlib.Account(this._near.connection, FaucetName);\n        this._faucetContract =  new nearlib.Contract(account, FaucetName, {\n            viewMethods: ['get_min_difficulty', 'get_account_suffix', 'get_num_created_accounts'],\n            changeMethods: ['create_account'],\n            sender: FaucetName\n        });\n        this._accountSuffix = await this._faucetContract.get_account_suffix();\n        this._minDifficulty = await this._faucetContract.get_min_difficulty();\n        this.mounted && this.setState({\n            numCreatedAccounts: await this._faucetContract.get_num_created_accounts(),\n        });\n        // console.log(JSON.stringify([...key.getPublicKey().data]));\n    }\n\n    async initNear() {\n        const nearConfig = {\n            networkId: 'default',\n            nodeUrl: 'https://rpc.nearprotocol.com',\n            contractName: FaucetName,\n            walletUrl: 'https://wallet.nearprotocol.com',\n        };\n        const keyStore = new nearlib.keyStores.BrowserLocalStorageKeyStore();\n        const near = await nearlib.connect(Object.assign({ deps: { keyStore } }, nearConfig));\n        this._keyStore = keyStore;\n        this._nearConfig = nearConfig;\n        this._near = near;\n\n        this._authData = JSON.parse(window.localStorage.getItem(AuthDataKey) || '{}');\n        await this.initFaucet();\n    }\n\n    handleChange(key, value) {\n        const stateChange = {\n            [key]: value,\n        };\n        if (key === 'newAccountId') {\n            value = value.toLowerCase().replace(/[^a-z0-9\\-_.]/, '');\n            stateChange[key] = value;\n            stateChange.newAccountExists = false;\n            if (this.isValidAccount(value)) {\n                stateChange.accountLoading = true;\n                this._near.connection.provider.query(`account/${value + this._accountSuffix}`, '').then((_a) => {\n                    if (this.state.newAccountId === value) {\n                        this.setState({\n                            accountLoading: false,\n                            newAccountExists: true,\n                        })\n                    }\n                }).catch((e) => {\n                    if (this.state.newAccountId === value) {\n                        this.setState({\n                            accountLoading: false,\n                            newAccountExists: false,\n                        })\n                    }\n                })\n            }\n        }\n        this.setState(stateChange);\n    }\n\n    isValidAccount(newAccountId) {\n        if (newAccountId.includes('.')) {\n            return false;\n        }\n        const accountId = newAccountId + this._accountSuffix;\n        return accountId.length >= MinAccountIdLen &&\n            accountId.length <= MaxAccountIdLen &&\n            accountId.match(ValidAccountRe);\n    }\n\n    newAccountClass() {\n        if (!this.state.newAccountId || this.state.accountLoading) {\n            return \"form-control form-control-large\";\n        } else if (!this.state.newAccountExists && this.isValidAccount(this.state.newAccountId)) {\n            return \"form-control form-control-large is-valid\";\n        } else {\n            return \"form-control form-control-large is-invalid\";\n        }\n    }\n\n    async computeProofOfWork(accountId, publicKey) {\n        let msg = [...new TextEncoder('utf-8').encode(accountId + ':')];\n        // curve\n        msg.push(0);\n        // key\n        msg.push(...publicKey.data);\n        // separator\n        msg.push(':'.charCodeAt(0));\n        // salt\n        msg.push(0, 0, 0, 0, 0, 0, 0, 0);\n        msg = new Uint8Array(msg);\n        const len = msg.length;\n        let bestDifficulty = 0;\n        for (let salt = 0; ; ++salt) {\n            // compute hash\n            const hashBuffer = new Uint8Array(await crypto.subtle.digest('SHA-256', msg));\n            // compute number of leading zero bits\n            let totalNumZeros = 0;\n            for (let i = 0; i < hashBuffer.length; ++i) {\n                let numZeros = Math.clz32(hashBuffer[i]) - 24;\n                totalNumZeros += numZeros;\n                if (numZeros < 8) {\n                    break;\n                }\n            }\n            // checking difficulty\n            if (totalNumZeros >= this._minDifficulty) {\n                this.setState({\n                    computingProofOfWork: false,\n                });\n                return salt;\n            } else if (totalNumZeros > bestDifficulty) {\n                bestDifficulty = totalNumZeros;\n                this.setState({\n                    proofOfWorkProgress: Math.trunc(bestDifficulty * 100 / this._minDifficulty),\n                    proofOfWorkDifficulty: bestDifficulty,\n                    proofOfWorkSalt: salt,\n                });\n            } else if (salt % 10000 === 0) {\n                this.setState({\n                    proofOfWorkSalt: salt\n                });\n            }\n            // incrementing salt\n            for (let i = len - 8; i < len; ++i) {\n                if (msg[i] === 255) {\n                    msg[i] = 0;\n                } else {\n                    ++msg[i];\n                    break;\n                }\n            }\n        }\n    }\n\n    async createAccount() {\n        this.setState({\n            creating: true,\n            computingProofOfWork: true,\n            proofOfWorkProgress: 0,\n            proofOfWorkDifficulty: 0,\n            proofOfWorkSalt: 0,\n        })\n        const newAccountId = this.state.newAccountId + this._accountSuffix;\n        const seed = generateSeedPhrase();\n        const newKeyPair = nearlib.KeyPair.fromString(seed.secretKey);\n        const salt = await this.computeProofOfWork(newAccountId, newKeyPair.getPublicKey());\n        await this._faucetContract.create_account({\n            account_id: newAccountId,\n            public_key: [0, ...newKeyPair.getPublicKey().data],\n            salt,\n        });\n        await this._keyStore.setKey(this._nearConfig.networkId, newAccountId, newKeyPair);\n        this._authData = {\n            accountId: newAccountId,\n            seed,\n        };\n        window.localStorage.setItem(AuthDataKey, JSON.stringify(this._authData));\n        this.setState({\n            signedIn: true,\n            accountId: newAccountId,\n            creating: false,\n            numCreatedAccounts: await this._faucetContract.get_num_created_accounts(),\n        })\n        this.props.onLogin(this._authData);\n    }\n\n    moveAccountToWallet() {\n        window.location = `https://wallet.nearprotocol.com/recover-with-link/${this._authData.accountId}/${this._authData.seed.seedPhrase}`;\n    }\n\n    logout() {\n        window.localStorage.removeItem(AuthDataKey);\n        this._authData = {};\n        this.setState({\n            signedIn: false,\n            accountId: null,\n            newAccountId: \"\",\n            creating: false,\n            accountLoading: false,\n            newAccountExists: false,\n            computingProofOfWork: false,\n        });\n    }\n\n    render() {\n        const content = !this.state.connected ? (\n            <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n        ) : (this.state.signedIn ? (\n            <div>\n                <h3>Hello, {this.state.accountId}</h3>\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-success\"\n                        onClick={() => this.moveAccountToWallet()}\n                    >\n                        Move account to NEAR Wallet\n                    </button>\n                </div>\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-danger\"\n                        onClick={() => this.logout()}\n                    >\n                        Logout from Faucet\n                    </button>\n                </div>\n            </div>\n        ) : (\n            <div>\n                <div className=\"form-group\">\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <div className=\"input-group-text\">{\"@\"}</div>\n                        </div>\n                        <input\n                            placeholder=\"bob\"\n                            id=\"accountId\"\n                            className={this.newAccountClass()}\n                            value={this.state.newAccountId}\n                            onChange={(e) => this.handleChange('newAccountId', e.target.value)}\n                            disabled={this.state.creating}\n                        />\n                        <div className=\"input-group-append\">\n                            <div className=\"input-group-text\">{this._accountSuffix}</div>\n                        </div>\n                    </div>\n                </div>\n                {this.state.newAccountExists && (\n                    <div className=\"alert alert-warning\" role=\"alert\">\n                        Account {'\"' + this.state.newAccountId + this._accountSuffix + '\"'} already exists!\n                    </div>\n                )}\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-primary\"\n                        disabled={this.state.creating || this.state.accountLoading || this.state.newAccountExists || !this.isValidAccount(this.state.newAccountId)}\n                        onClick={() => this.createAccount()}\n                    >\n                        {(this.state.creating || this.state.accountLoading) && (\n                            <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                        )} Create Account {this.isValidAccount(this.state.newAccountId) ? ('\"' + this.state.newAccountId + this._accountSuffix + '\"') : \"\"}\n                    </button>\n                </div>\n                {this.state.creating && (\n                    <div>\n                        {this.state.computingProofOfWork ? (\n                            <div>\n                                Computing Proof of Work. Done {this.state.proofOfWorkSalt} operations.\n                                <div className=\"progress\">\n                                    <div className=\"progress-bar\" role=\"progressbar\" style={{width: this.state.proofOfWorkProgress + '%'}} aria-valuenow={this.state.proofOfWorkProgress} aria-valuemin=\"0\"\n                                         aria-valuemax=\"100\">{this.state.proofOfWorkDifficulty} out of {this._minDifficulty}\n                                    </div>\n                                </div>\n                            </div>\n                        ) : (\n                            <div>\n                                Proof of Work is Done! Creating account {'\"' + this.state.newAccountId + this._accountSuffix + '\"'}\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        ));\n        return (\n            <div>\n                <h3>or create a new account</h3>\n                {content}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport nearlogo from './assets/gray_near_logo.svg';\nimport './css/App.css';\nimport * as nearlib from \"near-api-js\";\nimport { MetaNearApp } from 'metanear-sdk-js';\nimport { ProfileApp } from \"./apps/ProfileApp\";\nimport { ChatApp } from \"./apps/Chat/ChatApp\";\nimport { MailApp } from \"./apps/MailApp\";\n// import { KeysApp } from \"./apps/KeysApp\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { PowFaucet, AuthDataKey}  from \"./components/PowFaucet\";\nimport {Channel} from \"./apps/Chat/Channel\";\n\nconst GAS = 200_000_000_000_000;\nconst TITLE = \"Meta NEAR - User-centric web\"\nconst DefaultTabIndexKey = \"metanearDefaultTabIndex\";\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: false,\n      apps: {},\n      logs: [],\n      mailUnread: 0,\n      chatUnread: 0,\n      loading: false,\n      defaultTabIndex: JSON.parse(window.localStorage.getItem(DefaultTabIndexKey) || '0'),\n      offlineChatApp: null,\n    }\n    this.signedInFlow = this.signedInFlow.bind(this);\n    this.requestSignIn = this.requestSignIn.bind(this);\n    this.requestSignOut = this.requestSignOut.bind(this);\n    this.signedOutFlow = this.signedOutFlow.bind(this);\n    this.checkSignIn = this.checkSignIn.bind(this);\n    this.initMetaNearApp = this.initMetaNearApp.bind(this);\n    window.nearlib = nearlib;\n  }\n\n  componentDidMount() {\n    this.checkSignIn();\n  }\n\n  async checkSignIn() {\n    let loggedIn = window.walletAccount.isSignedIn();\n    let authData = JSON.parse(window.localStorage.getItem(AuthDataKey) || '{}');\n    if (loggedIn || authData.accountId) {\n      await this.signedInFlow(authData);\n    } else {\n      this.signedOutFlow();\n    }\n  }\n\n  log(message) {\n    console.log(message);\n    this.setState({\n      logs: this.state.logs.concat([message])\n    })\n  }\n\n  async signedInFlow(authData) {\n    const accountId = authData.accountId || await this.props.wallet.getAccountId();\n    this.setState({\n      login: true,\n      loading: true,\n      accountId,\n    })\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    if (window.location.search.includes(\"all_keys\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    // Initializing our contract APIs by contract name and configuration.\n\n    this.log(\"Connecting to account...\");\n    const account = await new nearlib.Account(window.near.connection, accountId);\n    this.log(\"Querying state...\");\n    let state = await account.state();\n    /*\n    await new Promise((resolve, reject) =>{\n      setTimeout(() => {\n        resolve();\n      }, 5000);\n    })\n     */\n    console.log(state);\n    if (state.code_hash !== 'F6iocDrCDzBCxUN9PKPeVp7GqDuPve4g3ypHQQrmEw5E') {\n      this.log(\"Going to deploy the code\");\n      // no code. Need to deploy.\n      this.log(\"Downloading started...\");\n      let data = await fetch('/metanear_user.wasm');\n      let buf = await data.arrayBuffer();\n      this.log(\"Downloading done. Deploying contract...\");\n      await account.deployContract(new Uint8Array(buf));\n      if (state.code_hash === '11111111111111111111111111111111') {\n        this.log(\"Deploying done. Initializing contract...\");\n        // Gotta init it.\n        let contract = await new nearlib.Contract(account, accountId, {\n          viewMethods: [],\n          // Change methods can modify the state. But you don't receive the returned value when called.\n          changeMethods: ['new'],\n          // Sender is the account ID to initialize transactions.\n          sender: accountId\n        });\n        console.log(await contract.new());\n      }\n      this.log(\"The contract is deployed\");\n    }\n\n    const masterContract = await new nearlib.Contract(account, accountId, {\n      // View methods are read only. They don't modify the state, but usually return some value.\n      viewMethods: ['apps'],\n      // Change methods can modify the state. But you don't receive the returned value when called.\n      changeMethods: ['add_app_key', 'remove_app_key'],\n      // Sender is the account ID to initialize transactions.\n      sender: accountId\n    });\n\n    this.masterContract = masterContract;\n    window.masterContract = masterContract;\n    this.log(\"Fetching authorized apps...\");\n    console.log(\"Apps:\", await masterContract.apps());\n\n    this.log(\"Initializing local apps...\");\n    const apps = {\n      profile: await this.initMetaNearApp('profile', accountId),\n      chat: await this.initMetaNearApp('chat', accountId),\n      mail: await this.initMetaNearApp('mail', accountId),\n      // keys: await this.initMetaNearApp('keys', accountId)\n    };\n    window.apps = apps;\n    this.apps = apps;\n    this.setState({\n      apps,\n      loading: false,\n    })\n  }\n\n  async initMetaNearApp(appId, accountId) {\n    this.log(\"Initializing app: \" + appId + \" ...\");\n    const app = new MetaNearApp(appId, accountId, window.nearConfig);\n    await app.init();\n    if (!await app.ready()) {\n      let pk = await app.getAccessPublicKey();\n      this.log(\"Authorizing app for key \" + pk.toString() + \" ...\");\n      const serializedPk = await app.getSerializedAccessPublicKey();\n      const args = {\n        public_key: [...serializedPk],\n        app_id: appId,\n      };\n      await this.masterContract.add_app_key(args, GAS);\n      await app.onKeyAdded();\n    }\n    return app;\n  }\n\n  async requestSignIn() {\n    const appTitle = 'Open Web Home';\n    await this.props.wallet.requestSignIn(\n      \"\",\n      appTitle\n    )\n  }\n\n  requestSignOut() {\n    this.props.wallet.signOut();\n    setTimeout(this.signedOutFlow, 500);\n    console.log(\"after sign out\", this.props.wallet.isSignedIn())\n  }\n\n\n  async signedOutFlow() {\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    this.setState({\n      login: false,\n    })\n    if (!this.state.offlineChatApp) {\n      const app = new MetaNearApp(\"chat\", null, window.nearConfig);\n      await app.init();\n      this.setState({\n        offlineChatApp: app,\n      })\n    }\n  }\n\n  selectTab = (index) => {\n    window.localStorage.setItem(DefaultTabIndexKey, JSON.stringify(index));\n    this.setState({\n      defaultTabIndex: index,\n    })\n  }\n\n  render() {\n    const unread = this.state.mailUnread + this.state.chatUnread;\n    document.title = (unread ? `(${unread}) ` : \"\") + TITLE;\n    if (!this.state.login) {\n      return <div className=\"App-header\">\n        <div>\n          <div className=\"image-wrapper\">\n            <img className=\"logo\" src={nearlogo} alt=\"NEAR logo\"/>\n          </div>\n          <div>\n            <button\n                className=\"btn btn-primary\"\n                onClick={this.requestSignIn}>Log in with NEAR Wallet</button>\n          </div>\n          <PowFaucet onLogin={this.signedInFlow}/>\n          <hr/>\n          <div>\n            <h3>To join #public chat </h3>\n            <Channel channelId=\"public\" app={this.state.offlineChatApp}/>\n          </div>\n        </div>\n      </div>\n    } else if (this.state.loading) {\n      return <div className=\"loading-div\">\n        <div className=\"spinner-grow loading-spinner\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <pre className=\"text-left\">\n          {this.state.logs.join(\"\\n\")}\n        </pre>\n      </div>\n    } else {\n      return <div className={\"h100 apps\" + (this.state.loading ? \" d-none\" : \"\")}>\n        <Tabs className=\"h100 cflex\" forceRenderTabPanel={true} defaultIndex={this.state.defaultTabIndex} onSelect={(i) => this.selectTab(i)}>\n          <TabList>\n            <Tab>Profile</Tab>\n            <Tab>Public Chat {this.state.chatUnread ? `(${this.state.chatUnread})` : \"\"}</Tab>\n            <Tab>Mail {this.state.mailUnread ? `(${this.state.mailUnread})` : \"\"}</Tab>\n            {/*<Tab>Keys</Tab>*/}\n          </TabList>\n\n          <TabPanel>\n            <ProfileApp app={this.state.apps.profile} logOut={this.requestSignOut}/>\n          </TabPanel>\n          <TabPanel style={{flexGrow: '1'}}>\n            <ChatApp app={this.state.apps.chat} onUnread={(chatUnread) => this.setState({chatUnread})}/>\n          </TabPanel>\n          <TabPanel>\n            <MailApp app={this.state.apps.mail} onUnread={(mailUnread) => this.setState({mailUnread})}/>\n          </TabPanel>\n          {/*<TabPanel>\n            <KeysApp app={this.state.apps.keys}/>\n          </TabPanel>*/}\n        </Tabs>\n      </div>\n    }\n  }\n}\n","import React from \"react\";\nimport queryString from 'query-string';\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    const values = queryString.parse(this.props.location.search);\n    let {app_id, pub_key} = values;\n    if (app_id && pub_key) {\n      this.state = {\n        authorized:false,\n        new_app_id:app_id,\n        new_pub_key:pub_key\n      };\n    } else {\n      this.state = {\n        authorized:false,\n        new_app_id:\"\",\n        new_pub_key:\"\"\n      }\n    }\n  }\n\n componentDidMount() {\n    if (!this.props.loading && this.state.new_app_id && this.state.new_pub_key) {\n      this.props.initMetaNearApp(this.state.new_app_id, this.state.new_pub_key)\n        .then(res => {\n          this.setState({\n            authorized: true\n          })\n        });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      // this.init();\n    }\n  }\n\n  // async fetchProfile(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  // async registerNewApp(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  render() {\n    return (\n      <div>\n        {this.state.authorized ?\n        <div>\n          <p>App <strong>{this.state.new_app_id}</strong> was added</p>\n          <p> Using the public key: {this.state.new_pub_key} </p>\n        </div> :\n        \"You need pass a key in order to add an app\"\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport { Home } from './Home';\nimport { Auth } from './Auth';\n\nclass Router extends Component {\n  render() {\n    return (\n      <HashRouter basename={process.env.PUBLIC_URL} hashType=\"noslash\">\n        <Switch>\n          <Route exact path=\"/\" component={() => <Home {...this.props}/>} />\n          <Route path=\"/auth\" component={() => <Auth {...this.props}/>} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport * as nearlib from 'near-api-js';\n\n// Initializing contract\nasync function InitContract() {\n    window.nearConfig = {\n        networkId: 'default',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        walletUrl: 'https://wallet.testnet.near.org',\n    };\n\n    // Initializing connection to the NEAR DevNet.\n    window.near = await nearlib.connect(Object.assign({ deps: { keyStore: new nearlib.keyStores.BrowserLocalStorageKeyStore() } }, window.nearConfig));\n\n    // Needed to access wallet login\n    window.walletAccount = new nearlib.WalletAccount(window.near);\n\n    // Getting the Account ID. If unauthorized yet, it's just empty string.\n    window.accountId = window.walletAccount.getAccountId();\n\n}\n\nwindow.nearInitPromise = InitContract().then(() => {\n    ReactDOM.render(<Router contract={window.contract} wallet={window.walletAccount}/>,\n      document.getElementById('root')\n    );\n  }).catch(console.error)\n","import React from \"react\";\nimport { ChatMessage } from \"./ChatMessage\";\n\nexport const ChatContract = 'metanear-chat';\n\nconst FetchMessagesLimit = 10;\nconst MinTimeDiffForMetaMs = 5 * 60 * 1000;\n\nexport class Channel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            initialized: false,\n            appReady: false,\n            messages: [],\n        };\n        this.channelId = null;\n        this.channelHash = null;\n        this.cachedRanges = null;\n        this.cachedMessages = {};\n        this.fetchingMessages = false;\n        this.fetchTimeoutId = null;\n        this.channelInnerRef = React.createRef();\n        this.mounted = false;\n    }\n\n    async loadCache(channelId) {\n        const textEncoder = new TextEncoder('utf-8');\n        const buf = textEncoder.encode('c:' + channelId);\n\n        this.channelId = channelId;\n        this.cachedMessages = {};\n        this.channelHash =  Buffer.from(await crypto.subtle.digest('SHA-256', buf)).toString('base64');\n\n        this.cachedRanges = JSON.parse(window.localStorage.getItem(this.channelHash + ':cachedRanges') || \"null\") || []\n        this.cachedRanges.forEach((r) => {\n            for (let i = r.first; i < r.last; ++i) {\n                this.cachedMessages[i] = JSON.parse(window.localStorage.getItem(this.channelHash + ':m:' + i) || \"null\");\n            }\n        });\n        this.updateState(true);\n    }\n\n    scrollDown() {\n        this.channelInnerRef.current.scrollTop = this.channelInnerRef.current.scrollHeight;\n    }\n\n    updateState(scrollDown) {\n        if (!this.mounted) {\n            return;\n        }\n        this.setState({\n            messages: Object.values(this.cachedMessages)\n        }, () => {\n            if (scrollDown)  {\n                this.scrollDown();\n            }\n        })\n    }\n\n    maybeInit() {\n        if (this.props.channelId && this.channelId !== this.props.channelId) {\n            const cache = this.loadCache(this.props.channelId);\n            if (this.state.appReady) {\n                cache.then(() => {\n                    this.fetchNewMessages();\n                });\n            }\n        }\n        if (this.props.app && !this.state.initialized) {\n            this.setState({\n                initialized: true,\n                appReady: true,\n            });\n            this.fetchNewMessages();\n        }\n    }\n\n    componentDidMount() {\n        this.maybeInit()\n        this.mounted = true;\n    }\n\n    componentDidUpdate(prevProps) {\n        this.maybeInit()\n        if (this.props.currentMessage) {\n            setTimeout(() => {\n                this.scrollDown();\n            }, 10);\n        }\n        if (!this.props.currentMessage && prevProps.currentMessage) {\n            this.fetchNewMessages();\n        }\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        if (this.fetchTimeoutId) {\n            clearTimeout(this.fetchTimeoutId);\n            this.fetchTimeoutId = null;\n        }\n    }\n\n\n    addNewMessage(channelId, message) {\n        if (channelId !== this.channelId) {\n            return;\n        }\n        const index = message.index;\n        if (index in this.cachedMessages) {\n            return;\n        }\n        this.cachedMessages[index] = message;\n        window.localStorage.setItem(this.channelHash + ':m:' + index, JSON.stringify(message));\n\n        this.cachedRanges.push({\n            first: index,\n            last: index + 1,\n        });\n        this.cachedRanges.sort((a, b) => a.first - b.first);\n        this.cachedRanges = this.cachedRanges.reduce((rs, r) => {\n            if (r.first === r.last) {\n                return rs;\n            }\n            if (!rs.length) {\n                rs.push(r);\n            }\n            if (rs[rs.length - 1].last === r.first) {\n                rs[rs.length - 1].last = r.last;\n            }\n            return rs;\n        }, []);\n        window.localStorage.setItem(this.channelHash + ':cachedRanges', JSON.stringify(this.cachedRanges));\n    }\n\n    async fetchMessages(channelId, fromIndex, toIndex) {\n        fromIndex = Math.max(fromIndex, toIndex - FetchMessagesLimit);\n        let messages = await this.props.app.getFrom(ChatContract, JSON.stringify({\n            ChannelMessages: {\n                channel_id: channelId,\n                from_index: fromIndex,\n                limit: toIndex - fromIndex,\n            }\n        }), {});\n        messages.messages.forEach((m, i) => {\n          this.addNewMessage(channelId, {\n              index: fromIndex + i,\n              senderId: m.sender_id,\n              text: m.text,\n              time: m.time,\n          });\n        })\n    }\n\n    async fetchNewMessages() {\n        if (this.fetchingMessages) {\n            return;\n        }\n        try {\n            this.fetchingMessages = true;\n            if (this.fetchTimeoutId) {\n                clearTimeout(this.fetchTimeoutId);\n                this.fetchTimeoutId = null;\n            }\n            console.log(\"Fetching chat messages\");\n            const channel = this.channelId;\n            let channelStatus = await this.props.app.getFrom(ChatContract, JSON.stringify({\n                ChannelStatus: {\n                    channel_id: channel,\n                }\n            }), {});\n            let numChannelMessages = channelStatus.num_messages;\n            let lastNumMessages = this.cachedRanges.length ? this.cachedRanges[this.cachedRanges.length - 1].last : 0;\n            if (lastNumMessages < numChannelMessages) {\n                await this.fetchMessages(channel, lastNumMessages, numChannelMessages);\n                this.updateState(true);\n            }\n        }\n        finally {\n            this.fetchingMessages = false;\n            if (this.mounted) {\n                this.fetchTimeoutId = setTimeout(() => this.fetchNewMessages(), 2000);\n            }\n        }\n    }\n\n    render() {\n        let lastMessage = null;\n        return (\n            <div className=\"channel fgrow\" ref={this.channelInnerRef}>\n                {this.state.messages.map((message) => {\n                    const chatMessage = <ChatMessage\n                        key={this.channelHash + message.index}\n                        message={message}\n                        onReply={() => this.onReply(message)}\n                        showMeta={!lastMessage || message.senderId !== lastMessage.senderId || message.time - lastMessage.time > MinTimeDiffForMetaMs}\n                    />;\n                    lastMessage = message;\n                    return chatMessage;\n                })}\n                {this.props.currentMessage && (\n                    <ChatMessage\n                        key={\"currentMessage\"}\n                        message={this.props.currentMessage}\n                        pending={true}\n                        showMeta={true}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}