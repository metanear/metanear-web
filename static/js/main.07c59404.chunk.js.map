{"version":3,"sources":["apps/Chat/ChatMessage.js","assets/gray_near_logo.svg","assets/encryptionOn.png","assets/encryptionOff.png","near/config.js","assets/anon.png","apps/ProfileApp.js","apps/Chat/ChatApp.js","apps/MailApp.js","components/PowFaucet.js","Home.js","Auth.js","Router.js","index.js","apps/Chat/Channel.js","../../../near-openweb-js/src/openweb.js"],"names":["ProfileMessageStyle","profile","display","ChatMessage","props","state","displayName","profileUrl","anon","p","this","setState","message","content","text","senderId","time","t","d","Date","getDate","toLocaleTimeString","hour","minute","toLocaleDateString","formatTime","showMeta","accountId","styles","onFetch","onProfile","className","pending","src","alt","role","aria-hidden","React","Component","module","exports","getConfig","env","networkId","nodeUrl","contractName","walletUrl","keyPath","process","HOME","masterAccount","Error","Cookies","require","cookieConfig","getJSON","window","nearConfig","nearPages","ProfileApp","keys","reduce","acc","key","chainValues","initialized","saving","hasChanges","appReady","newState","app","waitReady","then","maybeInit","prevProps","value","some","console","log","Object","assign","promises","forEach","push","set","Promise","all","f","sourceImage","Image","reader","FileReader","readAsDataURL","onload","canvas","document","createElement","aspect","naturalWidth","naturalHeight","width","Math","round","max","height","ctx","getContext","imageSmoothingQuality","fillStyle","fillRect","drawImage","options","toDataURL","sort","a","b","length","handleChange","event","target","result","e","onClick","logOut","bio","defaultProfileUrl","init","htmlFor","placeholder","id","disabled","onChange","type","onFilesChange","onError","onFilesError","multiple","accepts","minFileSize","clickable","save","ProfileInlineStyle","whiteSpace","profileImage","borderRadius","verticalAlign","marginRight","profileName","profileDisplayName","profileAccountId","ChatApp","channelId","sending","currentMessage","textInput","createRef","current","focus","getTime","JSON","stringify","channel_id","sendMessage","ChatContract","preventDefault","stopPropagation","Channel","ref","onKeyDown","MailApp","receiverId","subject","numLetters","unread","expandedId","profileFound","profileLoading","keyLoading","theirPublicKey64","inbox","textarea","keyCache","letter","messageId","undefined","filter","read","onUnread","version","num","get","allMigrations","i","encrypted","resolve","catch","storeEncryptionPublicKey","migrateFrom","modifyLetter","fetchMessages","getStoredEncryptionPublicKey","fetchKey","stateChange","toLowerCase","replace","fetchTimeoutId","clearTimeout","pullMessage","setTimeout","inner","parse","isEncrypted","fromAppId","appId","decryptMessage","sender","decryptedMessage","trunc","newNumLetters","warn","error","encryptMessage","startsWith","join","split","map","s","setSelectionRange","scrollLeft","scrollTop","remove","encryptionEnabled","displayEncryptionIcon","encryptionAlt","encryptionIcon","encryptionOn","encryptionOff","title","updateKey","expanded","deleteLetter","replyTo","selectLetter","aria-label","receiverClass","rows","sendMail","Letter","toLocaleString","getHours","getMinutes","toString","padStart","daytime","timeFormat","ValidAccountRe","AuthDataKey","PowFaucet","connected","signedIn","newAccountId","creating","accountLoading","newAccountExists","computingProofOfWork","mounted","initNear","_authData","_keyStore","getKey","_nearConfig","keyPair","nearlib","fromString","setKey","account","_near","connection","_faucetContract","viewMethods","changeMethods","get_account_suffix","_accountSuffix","get_min_difficulty","_minDifficulty","get_num_created_accounts","numCreatedAccounts","keyStore","BrowserLocalStorageKeyStore","deps","near","localStorage","getItem","initFaucet","isValidAccount","provider","query","_a","includes","match","publicKey","msg","TextEncoder","encode","data","charCodeAt","Uint8Array","len","bestDifficulty","salt","crypto","subtle","digest","hashBuffer","totalNumZeros","numZeros","clz32","proofOfWorkProgress","proofOfWorkDifficulty","proofOfWorkSalt","seed","generateSeedPhrase","newKeyPair","secretKey","computeProofOfWork","getPublicKey","create_account","account_id","public_key","setItem","onLogin","location","seedPhrase","removeItem","moveAccountToWallet","logout","newAccountClass","createAccount","style","aria-valuenow","aria-valuemin","aria-valuemax","Home","selectTab","index","defaultTabIndex","login","apps","logs","mailUnread","chatUnread","loading","offlineChatApp","signedInFlow","bind","requestSignIn","requestSignOut","signedOutFlow","checkSignIn","initOpenWebApp","loggedIn","walletAccount","isSignedIn","authData","concat","wallet","getAccountId","search","origin","pathname","code_hash","fetch","arrayBuffer","buf","deployContract","contract","new","masterContract","chat","mail","OpenWebApp","ready","getAccessPublicKey","pk","getSerializedAccessPublicKey","serializedPk","args","app_id","add_app_key","onKeyAdded","signOut","forceRenderTabPanel","defaultIndex","onSelect","flexGrow","nearlogo","Auth","values","queryString","pub_key","authorized","new_app_id","new_pub_key","res","Router","basename","hashType","exact","path","component","nearInitPromise","InitContract","ReactDOM","render","getElementById","messages","channelHash","cachedRanges","cachedMessages","fetchingMessages","channelInnerRef","textEncoder","Buffer","from","r","first","last","updateState","scrollHeight","scrollDown","cache","loadCache","fetchNewMessages","rs","fromIndex","toIndex","getFrom","ChannelMessages","from_index","limit","m","addNewMessage","sender_id","channel","ChannelStatus","channelStatus","numChannelMessages","num_messages","lastNumMessages","lastMessage","chatMessage","onReply","encryptionKey","blocking","parseEncryptionKey","nacl","keyKey","secretKeyLength","fromSecretKey","_key","newSecretKey64","_account","_contract","_networkId","_init","_innerInit","_ready","_keyAwait","_tmpKey","accessKey","fromRandom","serialize","SCHEMA","getEncryptionPublicKey","call","msg64","nonce","nonceLength","copy","box","decodedBuf","open","str","fullBuf","theirPublicKey","publicKeyLength","decryptSecretBox","forceReady","wrappedCall","encryptSecretBox","pull_message","getTheirPublicKey","encryptBox","decryptBox","send_message","receiver_id"],"mappings":"+PAIMA,EAAsB,CACxBC,QAAS,CACLC,QAAS,SAcJC,EAAb,YACI,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,YAAa,GACbC,WAAYC,KAJD,EADvB,uEAUcC,GACNC,KAAKC,SAAS,CACVL,YAAcG,GAAKA,EAAEH,aAAgB,GACrCC,WAAaE,GAAKA,EAAEF,YAAeC,QAb/C,+BAiBc,IAAD,OACCI,EAAUF,KAAKN,MAAMQ,QACrBC,EAAUD,EAAQE,KAClBC,EAAWH,EAAQG,SACnBC,EA/BK,SAACC,GAChB,IAAMC,EAAI,IAAIC,KAAKF,GAEnB,OADU,IAAIE,MACRC,YAAcF,EAAEE,UACXF,EAAEG,mBAAmB,GAAI,CAACC,KAAM,UAAWC,OAAO,YAElDL,EAAEM,qBAyBIC,CAAWb,EAAQI,MAC1BP,EAAIC,KAAKN,MAAMsB,UAAY,kBAAC,UAAD,CAASC,UAAWZ,EAAUa,OAAQ5B,EAAqB6B,QAAS,SAACpB,GAAD,OAAO,EAAKqB,UAAUrB,MAC3H,OACI,yBAAKsB,UAAW,gBAAkBrB,KAAKN,MAAM4B,QAAU,wBAA0B,KAAQtB,KAAKN,MAAMsB,SAAqC,GAA1B,0BAC1GjB,EACD,yBAAKsB,UAAU,uBAAuBE,IAAKvB,KAAKL,MAAME,WAAY2B,IAAG,mBAAcnB,KACnF,yBAAKgB,UAAU,wBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,4BAA4BrB,KAAKL,MAAMC,aAAgB,IAAMS,GAC3EL,KAAKL,MAAMC,aAAe,yBAAKyB,UAAU,0BAA0B,KAAOhB,EAAW,KACrFL,KAAKN,MAAM4B,QACR,yBAAKD,UAAU,qBAAoB,0BAAMA,UAAU,+BAA+BI,KAAK,SAASC,cAAY,SAA5G,YACA,yBAAKL,UAAU,qBAAqBf,IAG3CH,QApCrB,GAAiCwB,IAAMC,Y,oBCpBvCC,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,qBCA3C,WAII,SAASC,EAAUC,GACf,OAAQA,GAER,IAAK,aACL,IAAK,cACD,MAAO,CACHC,UAAW,UACXC,QAAS,+BACTC,aAXU,iBAYVC,UAAW,mCAEnB,IAAK,UACD,MAAO,CACHH,UAAW,UACXC,QAAS,wCACTC,aAlBU,iBAmBVC,UAAW,4CAEnB,IAAK,QACD,MAAO,CACHH,UAAW,QACXC,QAAS,wBACTG,QAAQ,GAAD,OAAKC,mHAAYC,KAAjB,6BACPH,UAAW,+BACXD,aA3BU,kBA6BlB,IAAK,OACD,MAAO,CACHF,UAAW,QACXC,QAAS,wBACTC,aAjCU,iBAkCVK,cAAe,aAEvB,IAAK,cACL,IAAK,KACD,MAAO,CACHP,UAAW,cACXC,QAAS,2CACTC,aAzCU,iBA0CVK,cAAe,aAEvB,IAAK,aACD,MAAO,CACHP,UAAW,sBACXC,QAAS,mDACTC,aAhDU,iBAiDVK,cAAe,aAEvB,QACI,MAAMC,MAAM,6BAAD,OAA8BT,EAA9B,4CAInB,IAAIU,EAAUC,EAAQ,KAChBC,EAAiC,oBAAXF,GAA0BA,EAAQG,QAAQ,gBACjChB,EAAOC,QACxCD,EAAOC,QAAUC,EAEjBe,OAAOC,WAAcH,GAAgBA,EAAaI,UAAYJ,EAAeb,EA5D7D,eAFxB,I,6NCAAF,EAAOC,QAAU,IAA0B,kC,oTCQ9BmB,EAAb,YACE,WAAYvD,GAAQ,IAAD,sBAEjB,IAAMwD,EAAO,CACX,cACA,aACA,OALe,OACjB,4CAAMxD,KAMDC,MAAQuD,EAAKC,QAAO,SAACC,EAAKC,GAG7B,OAFAD,EAAIC,GAAO,GACXD,EAAIE,YAAYD,GAAO,KAChBD,IACN,CACDF,OACAI,YAAa,GACbC,aAAa,EACbC,QAAQ,EACRC,YAAY,EACZC,UAAU,IAjBK,EADrB,2GAsBanE,GAtBb,0EAuBSA,EAvBT,iDA0BUoE,EAAW3D,KAAKL,MAAMuD,KAAKC,QAAO,SAACxD,EAAO0D,GAG9C,OAFA1D,EAAM0D,GAAO9D,EAAQ8D,IAAQ,GAC7B1D,EAAM2D,YAAYD,GAAO1D,EAAM0D,GACxB1D,IACN,CACD2D,YAAa,KAEftD,KAAKC,SAAS0D,GAjClB,yIAoCe,IAAD,OACN3D,KAAKN,MAAMkE,MAAQ5D,KAAKL,MAAM4D,cAChCvD,KAAKC,SAAS,CACZsD,aAAa,IAEfvD,KAAKN,MAAMkE,IAAIC,YAAYC,MAAK,WAC9B,EAAK7D,SAAS,CACZyD,UAAU,UA3CpB,0CAkDI1D,KAAK+D,cAlDT,yCAqDqBC,GACjBhE,KAAK+D,cAtDT,mCAyDeV,EAAKY,GAChBjE,KAAKC,SAAL,eACGoD,EAAMY,MA3Db,mCA+DgB,IAAD,OACX,OAAOjE,KAAKL,MAAMuD,KAAKgB,MAAK,SAAAb,GAAG,OAAI,EAAK1D,MAAM2D,YAAYD,KAAS,EAAK1D,MAAM0D,QAhElF,sJAoEIrD,KAAKC,SAAS,CACZuD,QAAQ,IAEVW,QAAQC,IAAI,UACNd,EAAce,OAAOC,OAAO,GAAItE,KAAKL,MAAM2D,aAC3CiB,EAAW,GACjBvE,KAAKL,MAAMuD,KAAKsB,SAAQ,SAAAnB,GAClB,EAAK1D,MAAM2D,YAAYD,KAAS,EAAK1D,MAAM0D,KAC7CC,EAAYD,GAAO,EAAK1D,MAAM0D,GAC9BkB,EAASE,KAAK,EAAK/E,MAAMkE,IAAIc,IAAIrB,EAAK,EAAK1D,MAAM0D,IAAMS,MAAK,WAC1DK,QAAQC,IAAI,gBAAkBf,EAAM,eAAiB,EAAK1D,MAAM0D,GAAO,aAI7EsB,QAAQC,IAAIL,GAAUT,MAAK,WACzB,EAAK7D,SAAS,CACZqD,cACAE,QAAQ,OArFhB,mLA0FsBqB,GA1FtB,gFA2FQC,EAAc,IAAIC,OAClBC,EAAS,IAAIC,YAEVC,cAAcL,EAAE,IAEvBC,EAAYK,OAAS,WAEnB,IAAIC,EAASC,SAASC,cAAc,UAC9BC,EAAST,EAAYU,aAAeV,EAAYW,cAChDC,EAAQC,KAAKC,MAvGC,GAuGyBD,KAAKE,IAAI,EAAGN,IACnDO,EAASH,KAAKC,MAvGC,GAuG0BD,KAAKE,IAAI,EAAG,EAAIN,IAC/DH,EAAOM,MAzGa,GA0GpBN,EAAOU,OAzGc,GA0GrB,IAAMC,EAAMX,EAAOY,WAAW,MAG9BD,EAAIE,sBAAwB,OAC5BF,EAAIG,UAAY,OAChBH,EAAII,SAAS,EAAG,EAhHI,GACC,IAgHrBJ,EAAIK,UAAUtB,GAjHM,GAiH4BY,GAAS,GAhHpC,GAgH6DI,GAAU,EAAGJ,EAAOI,GAGtG,IAAMO,EAAU,CACdjB,EAAOkB,UAAU,aAAc,KAG/BlB,EAAOkB,UAAU,cAEnBD,EAAQE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAEpC,EAAKC,aAAa,aAAcN,EAAQ,KAG1CrB,EAAOG,OAAS,SAASyB,GACvB9B,EAAYvD,IAAMqF,EAAMC,OAAOC,QA7HrC,8KAiIqBC,EAAGlC,GAjIxB,iEAkIIV,QAAQC,IAAI2C,EAAGlC,GAlInB,mIAqIY,IAAD,OACP,OACE,6BACE,6BACE,4BAAQxD,UAAU,cAAc2F,QAAShH,KAAKN,MAAMuH,QAApD,WACA,kBAAC,UAAD,CACEhG,UAAWjB,KAAKN,MAAMkE,KAAO5D,KAAKN,MAAMkE,IAAI3C,UAC5CpB,WAAYG,KAAKL,MAAME,WACvBD,YAAaI,KAAKL,MAAMC,YACxBsH,IAAKlH,KAAKL,MAAMuH,IAChBC,kBAAmBrH,IACnBqB,QAAS,SAAC5B,GAAD,OAAa,EAAK6H,KAAK7H,OAGpC,6BACA,6BACE,yBAAK8B,UAAU,cACb,2BAAOgG,QAAQ,eAAf,gBACA,2BAAOC,YAAY,mBAAmBC,GAAG,cAAclG,UAAU,eAAemG,UAAWxH,KAAKN,MAAMkE,IAAKK,MAAOjE,KAAKL,MAAMC,YAAa6H,SAAU,SAACV,GAAD,OAAO,EAAKJ,aAAa,cAAeI,EAAEF,OAAO5C,WAEvM,2BAAOoD,QAAQ,cAAf,eACA,yBAAKhG,UAAU,eACb,2BAAOiG,YAAa,uBAAyBxH,IAAMyH,GAAG,aAAalG,UAAU,eAAemG,UAAWxH,KAAKN,MAAMkE,IAAKK,MAAOjE,KAAKL,MAAME,WAClI4H,SAAU,SAACV,GAAD,OAAO,EAAKJ,aAAa,aAAcI,EAAEF,OAAO5C,UACjE,yBAAK5C,UAAU,sBACb,kBAAC,IAAD,CACEqG,KAAK,SACLrG,UAAU,0BACVoG,SAAU,SAAC5C,GAAD,OAAO,EAAK8C,cAAc9C,IACpC+C,QAAS,SAACb,EAAGlC,GAAJ,OAAU,EAAKgD,aAAad,EAAGlC,IACxCiD,UAAU,EACVC,QAAS,CAAC,WACVC,YAAa,EACbC,WAAS,GARX,qBAeJ,yBAAK5G,UAAU,cACb,2BAAOgG,QAAQ,OAAf,OACA,8BAAUC,YAAY,kDAAkDC,GAAG,MAAMlG,UAAU,eAAemG,UAAWxH,KAAKN,MAAMkE,IAAKK,MAAOjE,KAAKL,MAAMuH,IAAKO,SAAU,SAACV,GAAD,OAAO,EAAKJ,aAAa,MAAOI,EAAEF,OAAO5C,WAEjN,yBAAK5C,UAAU,cACb,4BACIA,UAAU,kBACVmG,SAAUxH,KAAKL,MAAM6D,SAAWxD,KAAKyD,aACrCuD,QAAS,kBAAM,EAAKkB,SAErBlI,KAAKL,MAAM6D,QACR,0BAAMnC,UAAU,+BAA+BI,KAAK,SAASC,cAAY,SAN/E,wBAlLZ,GAAgCC,IAAMC,W,QCFhCuG,G,OAAqB,CACzB5I,QAAS,CACP6I,WAAY,SACZ5I,QAAS,gBAEX6I,aAAc,CACZvC,OAAQ,MACRJ,MAAO,MACP4C,aAAc,MACdC,cAAe,SACfC,YAAa,SAEfC,YAAa,CACXjJ,QAAS,QAEXkJ,mBAAoB,GACpBC,iBAAkB,KAGPC,EAAb,YACE,WAAYlJ,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACX4D,aAAa,EACbG,UAAU,EACVtD,KAAM,GACNyI,UAAW,SACXC,SAAS,EACTC,eAAgB,MAElB,EAAKC,UAAYrH,IAAMsH,YAVN,EADrB,yEAce,IAAD,OACNjJ,KAAKN,MAAMkE,MAAQ5D,KAAKL,MAAM4D,cAChCvD,KAAKC,SAAS,CACZsD,aAAa,IAEfvD,KAAKN,MAAMkE,IAAIC,YAAYC,MAAK,WAC9B,EAAK7D,SAAS,CACZyD,UAAU,IACT,WACD,EAAKsF,UAAUE,QAAQC,iBAvBjC,0CA8BInJ,KAAK+D,cA9BT,yCAiCqBC,GACjBhE,KAAK+D,cAlCT,mCAqCeV,EAAKY,GAChBjE,KAAKC,SAAL,eACGoD,EAAMY,MAvCb,6JA4CIE,QAAQC,IAAI,wBACRhE,EAAOJ,KAAKL,MAAMS,KACtBJ,KAAKC,SAAS,CACZ6I,SAAS,EACT1I,KAAM,GACN2I,eAAgB,CACd3I,OACAC,SAAUL,KAAKN,MAAMkE,IAAI3C,UACzBX,MAAM,IAAIG,MAAO2I,aApDzB,SAwDUlJ,EAAUmJ,KAAKC,UAAU,CAC3B7J,YAAa,CACX8J,WAAYvJ,KAAKL,MAAMkJ,UACvBzI,UA3DV,SA8DYJ,KAAKN,MAAMkE,IAAI4F,YAAYC,IAAcvJ,GA9DrD,OA+DME,EAAO,GA/Db,kDAiEM+D,QAAQC,IAAI,kCAAZ,MAjEN,yBAmEMpE,KAAKC,SAAS,CACZG,OACA0I,SAAS,EACTC,eAAgB,OAtExB,2KA2EYnC,GAEU,UAAdA,EAAMvD,MACRuD,EAAM8C,iBACN9C,EAAM+C,kBACN3J,KAAKwJ,iBAhFX,+BAqFY,IAAD,OACP,OACE,yBAAKnI,UAAU,uBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mBAAf,IAAmCrB,KAAKL,MAAMkJ,YAEhD,kBAACe,EAAA,EAAD,CAASf,UAAW7I,KAAKL,MAAMkJ,UAAWjF,IAAK5D,KAAKN,MAAMkE,IAAKmF,eAAgB/I,KAAKL,MAAMoJ,iBAC1F,6BACA,yBAAK1H,UAAU,eACb,yBAAKA,UAAU,uBACZrB,KAAKL,MAAM+D,UAAa,kBAAC,UAAD,CAASzC,UAAWjB,KAAKN,MAAMkE,IAAI3C,UAAWkG,kBAAmBrH,IAAMoB,OAAQiH,KAE1G,2BAAO0B,IAAK7J,KAAKgJ,UACVzB,GAAG,OACHD,YAAa,YAActH,KAAKL,MAAMkJ,UACtCxH,UAAU,4BACVmG,UAAWxH,KAAKL,MAAM+D,UAAY1D,KAAKL,MAAMmJ,QAC7C7E,MAAOjE,KAAKL,MAAMS,KAClB0J,UAAW,SAAC/C,GAAD,OAAO,EAAK+C,UAAU/C,IACjCU,SAAU,SAACV,GAAD,OAAO,EAAKJ,aAAa,OAAQI,EAAEF,OAAO5C,UAC3D,yBAAK5C,UAAU,sBACb,4BACIA,UAAU,kBACVmG,UAAWxH,KAAKL,MAAM+D,UAAY1D,KAAKL,MAAMmJ,QAC7C9B,QAAS,kBAAM,EAAKwC,gBAErBxJ,KAAKL,MAAMmJ,SACR,0BAAMzH,UAAU,+BAA+BI,KAAK,SAASC,cAAY,SAN/E,gBA1GZ,GAA6BC,IAAMC,W,oCChBtBmI,EAAb,YACE,WAAYrK,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACX4D,aAAa,EACbyG,WAAY,GACZC,QAAS,GACT9J,QAAS,GACT2I,SAAS,EACToB,WAAY,EACZC,OAAQ,EACRC,YAAa,EACbC,cAAc,EACdC,gBAAgB,EAChBC,YAAY,EACZC,iBAAkB,KAClBC,MAAO,IAET,EAAKC,SAAW/I,IAAMsH,YACtB,EAAK0B,SAAW,GAlBC,EADrB,0EAsBeC,EAAQC,GACnB,QAAkBC,IAAdD,EAAyB,CAC3B,IAAKD,EACH,OAEFC,EAAYD,EAAOC,UAErB,IAAMJ,EAAQzK,KAAKL,MAAM8K,MAAMM,QAAO,SAACvE,GAAD,OAAOA,EAAEqE,YAAcA,KACzDD,GACFH,EAAMhG,KAAKmG,GAEbH,EAAMlE,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEnG,KAAOkG,EAAElG,QAChC,IAAM6J,EAASM,EAAMtH,QAAO,SAACC,EAAKwH,GAAN,OAAiBxH,GAAOwH,EAAOI,KAAO,EAAG,KAAI,GACzEhL,KAAKC,SAAS,CACZwK,QACAN,WAEFnK,KAAKN,MAAMuL,SAASd,KAvCxB,2EA0CoBe,GA1CpB,uFA2CoB,IAAZA,EA3CR,wBA4CM/G,QAAQC,IAAI,6BACR+G,EAAM,EA7ChB,kBA+CoBnL,KAAKN,MAAMkE,IAAIwH,IAAI,cA/CvC,OA+CQD,EA/CR,+DAoDM,IADME,EAAgB,GAnD5B,WAoDeC,GACPD,EAAc5G,KAAK,EAAK/E,MAAMkE,IAAIwH,IAAI,UAAYE,GAAGxH,MAAK,SAAC8G,GACzD,OAAIA,EACK,EAAKlL,MAAMkE,IAAIc,IAAI,UAAY4G,EAAGV,EAAQ,CAACW,WAAW,IAAOzH,MAAK,WACvEK,QAAQC,IAAI,oBAAsBkH,MAG/B3G,QAAQ6G,aACdC,OAAM,SAAC1E,GAAD,OAAO5C,QAAQC,IAAI,yBAA0BkH,EAAGvE,QARlDuE,EAAI,EAAGA,EAAIH,IAAOG,EAAI,EAAtBA,GApDf,iBA8DY3G,QAAQC,IAAIyG,GA9DxB,yBA+DYrL,KAAKN,MAAMkE,IAAIc,IAAI,aAAcyG,EAAK,CAAEI,WAAW,IA/D/D,QAgEML,IAhEN,WAkEoB,IAAZA,EAlER,wBAmEM/G,QAAQC,IAAI,6BAnElB,UAoEYpE,KAAKN,MAAMkE,IAAI8H,2BApE3B,QAqEMR,IArEN,yBAuEUlL,KAAKN,MAAMkE,IAAIc,IAAI,UAAWwG,EAAS,CAAEK,WAAW,IAvE9D,iSA6EsBvL,KAAKN,MAAMkE,IAAIwH,IAAI,UAAW,CAACG,WAAW,IA7EhE,gDA6E0E,EA7E1E,OA6EML,EA7EN,4DAgFM/G,QAAQC,IAAR,MAhFN,gCAmFQ8G,EArFe,GAEvB,kCAoFYlL,KAAK2L,YAAYT,GApF7B,yBAsFsBlL,KAAKN,MAAMkE,IAAIwH,IAAI,aAAc,CAAEG,WAAW,IAtFpE,kDAsF+E,EAtF/E,QA0FI,IAJMJ,EAtFV,KAuFInL,KAAKC,SAAS,CACZiK,WAAYiB,IAELG,EAAI3F,KAAKE,IAAI,EAAGsF,EAAM,IAAKG,EAAIH,IAAOG,EAC7CtL,KAAKN,MAAMkE,IAAIwH,IAAI,UAAYE,EAAG,CAACC,WAAW,IAAOzH,MAAK,SAAC8G,GAAD,OAAY,EAAKgB,aAAahB,MAE1F5K,KAAK6L,gBA7FT,iJAgGe,IAAD,OACN7L,KAAKN,MAAMkE,MAAQ5D,KAAKL,MAAM4D,cAChCvD,KAAKC,SAAS,CACZsD,aAAa,IAEfvD,KAAKN,MAAMkE,IAAIC,YAAYC,MAAK,kBAAM,EAAKsD,aArGjD,0CA2GIpH,KAAK+D,cA3GT,yCA8GqBC,GACjBhE,KAAK+D,cA/GT,wEAkHiB9C,GAlHjB,sEAmHQA,KAAajB,KAAK2K,UAnH1B,gCAoHmB3K,KAAK2K,SAAS1J,GApHjC,sDAsHMkD,QAAQC,IAAI,oBAAsBnD,GAClCjB,KAAK2K,SAAS1J,GAAajB,KAAKN,MAAMkE,IAAIkI,6BAA6B7K,EAAW,IAAIwK,OAAM,SAAC1E,GAAD,OAAO,KAvHzG,UAwHmB/G,KAAK2K,SAAS1J,GAxHjC,iLA4HY1B,GAAU,IAAD,OACZS,KAAKN,MAAMkE,MAGhB5D,KAAKC,SAAS,CACZqK,gBAAgB,EAChBD,eAAgB9K,IAEbA,IAGLS,KAAKC,SAAS,CACZsK,YAAY,IAEdvK,KAAK+L,SAASxM,EAAQ0B,WAAW6C,MAAK,SAAC0G,GACrC,EAAKvK,SAAS,CACZsK,YAAY,EACZC,4BA7IR,mCAkJenH,EAAKY,GAChB,IAAM+H,EAAW,eACd3I,EAAMY,GAEG,eAARZ,IACFY,EAAQA,EAAMgI,cAAcC,QAAQ,gBAAiB,IACrDF,EAAY3I,GAAOY,EACnB+H,EAAY1B,gBAAiB,EAC7B0B,EAAYxB,kBAAmB,GAEjCxK,KAAKC,SAAS+L,KA5JlB,4KAgKShM,KAAKN,MAAMkE,IAhKpB,wDAmKQ5D,KAAKmM,iBACPC,aAAapM,KAAKmM,gBAClBnM,KAAKmM,eAAiB,MAExBhI,QAAQC,IAAI,qBAvKhB,SAwK0BpE,KAAKN,MAAMkE,IAAIyI,cAxKzC,UAwKUnM,EAxKV,+BA0KMF,KAAKmM,eAAiBG,YAAW,WAAQ,EAAKT,kBAAmB,KA1KvE,wCA8KM1H,QAAQC,IAAIlE,GACRqM,EAAQlD,KAAKmD,MAAMtM,EAAQA,SACzBuM,EAA6B,cAAfF,EAAM7E,KACpBgF,EAAYH,EAAMG,WAAa1M,KAAKN,MAAMkE,IAAI+I,OAChDF,EAlLV,kCAmLuCzM,KAAKN,MAAMkE,IAAIgJ,eAAeL,EAAMpM,QAAS,CAC1Ec,UAAWf,EAAQ2M,OACnBF,MAAOJ,EAAMG,YArLvB,QAmLcI,EAnLd,OAuLQP,EAAQlD,KAAKmD,MAAMM,GAvL3B,QAyLyB,SAAfP,EAAM7E,MACFkD,EAAS,CACbC,UAAW7K,KAAKL,MAAMuK,WACtBuC,cACAC,YACAG,OAAQ3M,EAAQ2M,OAChB5C,QAASsC,EAAMtC,QACf9J,QAASoM,EAAMpM,QACfG,KAAMqF,KAAKoH,MAAM7M,EAAQI,KAAO,MAE5B0M,EAAgBhN,KAAKL,MAAMuK,WAAa,EAC9ClK,KAAKC,SAAS,CACZiK,WAAY8C,IAGdhN,KAAKN,MAAMkE,IAAIc,IAAI,UAAYkG,EAAOC,UAAWD,EAAQ,CAACW,WAAW,IAAOzH,MAAK,WAC/EK,QAAQC,IAAI,qBAAsBwG,MAEpC5K,KAAKN,MAAMkE,IAAIc,IAAI,aAAcsI,EAAe,CAACzB,WAAW,IAAOzH,MAAK,WACpEK,QAAQC,IAAI,oCAAqC4I,MAErDhN,KAAK4L,aAAahB,IAElBzG,QAAQ8I,KAAK,kBAAmB/M,GAhNxC,mDAmNMiE,QAAQ+I,MAAR,MAnNN,yBAqNMlN,KAAK6L,gBArNX,iSA0NS7L,KAAKL,MAAM0K,aA1NpB,oDA6NIlG,QAAQC,IAAI,gBACZpE,KAAKC,SAAS,CACZ6I,SAAS,IA/Nf,SAkOU5I,EAAUmJ,KAAKC,UAAU,CAC3B5B,KAAM,OACNuC,QAASjK,KAAKL,MAAMsK,QACpB9J,QAASH,KAAKL,MAAMQ,WAElBH,KAAKL,MAAM6K,iBAvOrB,iCAwO8BxK,KAAKN,MAAMkE,IAAIuJ,eAAejN,EAAS,CAC3DsK,iBAAkBxK,KAAKL,MAAM6K,mBAzOvC,OAwOcrK,EAxOd,OA2OQD,EAAUmJ,KAAKC,UAAU,CACvB5B,KAAM,YACNgF,UAAW1M,KAAKN,MAAMkE,IAAI+I,MAC1BxM,YA9OV,yBAiPYH,KAAKN,MAAMkE,IAAI4F,YAAYxJ,KAAKL,MAAMqK,WAAY9J,GAjP9D,QAkPMF,KAAKC,SAAS,CACZgK,QAAS,GACT9J,QAAS,KApPjB,kDAuPMgE,QAAQC,IAAI,6BAAZ,MAvPN,yBAyPMpE,KAAKC,SAAS,CACZ6I,SAAS,IAEXwD,YAAW,kBAAM,EAAKT,kBAAiB,KA5P7C,iLAiQI,OAAK7L,KAAKL,MAAMqK,YAAchK,KAAKL,MAAM2K,eAChC,eACEtK,KAAKL,MAAM0K,aACb,wBAEA,4BAtQb,8BA0QUO,EAAQhL,GAAc,IAAD,OAC3BI,KAAK2G,aAAa,aAAciE,EAAOiC,QACvC7M,KAAKC,SAAS,CACZgK,SAAUW,EAAOX,QAAQmD,WAhRpB,QAgRqC,GAhRrC,QAgRgDxC,EAAOX,QAC5D9J,QAAS,CACP,GACA,GACA,CAAC,KAAM,IAAIM,KAAKmK,EAAOtK,MAAMQ,qBAAsBlB,EAAa,IAAMgL,EAAOiC,OAAQ,UAAUQ,KAAK,MAH7F,mBAIJzC,EAAOzK,QAAQmN,MAAM,SAASC,KAAI,SAAAC,GAAC,MAAI,KAAOA,OACjDH,KAAK,QACN,WACD,EAAK3C,SAASxB,QAAQC,QACtB,EAAKuB,SAASxB,QAAQuE,kBAAkB,EAAG,GAC3C,EAAK/C,SAASxB,QAAQwE,WAAa,EACnC,EAAKhD,SAASxB,QAAQyE,UAAY,OAxRxC,mCA4Re/C,GACX5K,KAAKC,SAAS,CACZmK,WAAapK,KAAKL,MAAMyK,aAAeQ,EAAOC,WAAc,EAAID,EAAOC,YAEpED,EAAOI,QACVJ,EAASvB,KAAKmD,MAAMnD,KAAKC,UAAUsB,KAC5BI,MAAO,EACdhL,KAAKN,MAAMkE,IAAIc,IAAI,UAAYkG,EAAOC,UAAWD,EAAQ,CAACW,WAAW,IAAOzH,MAAK,WAC/EK,QAAQC,IAAI,qBAAsBwG,MAEpC5K,KAAK4L,aAAahB,MAtSxB,mCA0SeA,GACX5K,KAAKN,MAAMkE,IAAIgK,OAAO,UAAYhD,EAAOC,WAAW/G,MAAK,WACvDK,QAAQC,IAAI,uBAAwBwG,MAEtC5K,KAAK4L,aAAa,KAAMhB,EAAOC,aA9SnC,+BAiTY,IAAD,OACDgD,EAAoB7N,KAAKL,MAAM6K,iBAC/BsD,EAAwB9N,KAAKL,MAAM0K,eAAiBrK,KAAKL,MAAM4K,WAC/DwD,EAAgBF,EAAoB,mBAAqB,gCACzDG,EAAiBF,GACrB,yBAAKzM,UAAU,kBAAkBE,IAAKsM,EAAoBI,IAAeC,IACrEC,MAAOJ,EAAevM,IAAKuM,IAC3BxO,EAAU,kBAAC,UAAD,CAAS0B,UAAWjB,KAAKL,MAAMqK,WAAY7I,QAAS,SAAC5B,GAAD,OAAa,EAAK6O,UAAU7O,IAAU4H,kBAAmBrH,MACvH2K,EAAQzK,KAAKL,MAAM8K,MAAM8C,KAAI,SAAC3C,EAAQU,GAAT,OACjC,kBAAC,EAAD,CACEjI,IAAKuH,EAAOC,UACZD,OAAQA,EACRyD,SAAUzD,EAAOC,YAAc,EAAKlL,MAAMyK,WAC1CkE,aAAc,SAAC1D,GAAD,OAAY,EAAK0D,aAAa1D,IAC5C2D,QAAS,SAAC3D,EAAQhL,GAAT,OAAyB,EAAK2O,QAAQ3D,EAAQhL,IACvD4O,aAAc,SAAC5D,GAAD,OAAY,EAAK4D,aAAa5D,SAEhD,OACE,sCACQ,4BAAQvJ,UAAU,aAAa2F,QAAS,kBAAM,EAAK6E,kBAAiB,0BAAMpK,KAAK,MAAMgN,aAAW,WAA5B,iBAC1E,6BACGhE,GAEH,oCACA,yBAAKpJ,UAAU,YACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,2BAAOA,UAAU,UAAUgG,QAAQ,eAAnC,iBACA,yBAAKhG,UAAU,eACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBAAf,MAEF,2BAAOqG,KAAK,OAAOrG,UAAWrB,KAAK0O,gBAAiBnH,GAAG,cAAcD,YAAY,gBAAgBrD,MAAOjE,KAAKL,MAAMqK,WAAYxC,UAAWxH,KAAKN,MAAMkE,IAAK6D,SAAU,SAACV,GAAD,OAAO,EAAKJ,aAAa,aAAcI,EAAEF,OAAO5C,aAIzN1E,GAEH,yBAAK8B,UAAU,cACb,2BAAOA,UAAU,UAAUgG,QAAQ,WAAnC,WACA,2BAAOK,KAAK,OAAOrG,UAAU,eAAekG,GAAG,UAAUD,YAAY,UAAUE,UAAWxH,KAAKN,MAAMkE,IAAKK,MAAOjE,KAAKL,MAAMsK,QAASxC,SAAU,SAACV,GAAD,OAAO,EAAKJ,aAAa,UAAWI,EAAEF,OAAO5C,WAE9L,yBAAK5C,UAAU,cACb,8BAAUwI,IAAK7J,KAAK0K,SAAUnD,GAAG,UAAUlG,UAAU,eAAesN,KAAK,IAAInH,UAAWxH,KAAKN,MAAMkE,IAAKK,MAAOjE,KAAKL,MAAMQ,QAASsH,SAAU,SAACV,GAAD,OAAO,EAAKJ,aAAa,UAAWI,EAAEF,OAAO5C,WAE5L,yBAAK5C,UAAU,cACb,4BAAQA,UAAW,qCAAuCyM,IAA0BD,EAAoB,aAAe,eAAgBrG,UAAWxH,KAAKL,MAAM0K,cAAgBrK,KAAKL,MAAMmJ,QAAS9B,QAAS,kBAAM,EAAK4H,aAArN,QACQZ,SAhWlB,GAA6BrM,IAAMC,WAuWtBiN,EAAb,YACE,WAAYnP,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXJ,QAAS,CACPM,WAAY,KACZD,YAAa,IAAMF,EAAMkL,OAAOiC,SALnB,EADrB,uEAYI7M,KAAKN,MAAM8O,aAAaxO,KAAKN,MAAMkL,UAZvC,+BAeY,IAwDYrK,EAxDb,OACDhB,EACJ,yBAAK8B,UAAU,6CACb,kBAAC,UAAD,CAASJ,UAAWjB,KAAKN,MAAMkL,OAAOiC,OAAQ1L,QAAS,SAAC5B,GAAD,OAAaA,GAAW,EAAKU,SAAS,CAACL,YAAaL,EAAQK,eAAeuH,kBAAmBrH,OAGnJmK,EACJ,yBAAK5I,UAAU,mBACb,yBAAKA,UAAU,kBAAkBrB,KAAKN,MAAMkL,OAAOX,UAGjD3J,EAAON,KAAKN,MAAM2O,SACtB,yBAAKhN,UAAU,qBACb,yBAAKA,UAAU,gBA2CCd,EA3C6BP,KAAKN,MAAMkL,OAAOtK,KA4C9D,IAAIG,KAAKF,GAAGuO,oBAzCf,yBAAKzN,UAAU,uCACb,yBAAKA,UAAU,eA2CvB,SAAoBd,GAClB,IAAMC,EAAI,IAAIC,KAAKF,GAEnB,IADY,IAAIE,MACRC,YAAcF,EAAEE,UAAW,CACjC,IAAME,EAAOJ,EAAEuO,WAAa,GACtBlO,EAASL,EAAEwO,aAAaC,WAAWC,SAAS,EAAG,KAC/CC,EAAU3O,EAAEuO,YAAc,GAAK,KAAO,KAC5C,MAAM,GAAN,OAAUnO,EAAV,YAAkBC,EAAlB,YAA4BsO,GAE5B,OAAO3O,EAAEM,qBApDyBsO,CAAWpP,KAAKN,MAAMkL,OAAOtK,QAG/D,OAAIN,KAAKN,MAAM2O,SAEX,yBAAKhN,UAAU,0BACb,yBAAKA,UAAU,6BAA6B2F,QAAS,kBAAM,EAAKA,YAC7DzH,EACA0K,EACA3J,GAEH,yBAAKe,UAAU,2BACb,6BAAMrB,KAAKN,MAAMkL,OAAOzK,SACxB,yBAAKkB,UAAU,OACb,yBAAKA,UAAU,UACb,4BAAQA,UAAU,kBAAkB2F,QAAS,kBAAM,EAAKtH,MAAM6O,QAAQ,EAAK7O,MAAMkL,OAAQ,EAAKjL,MAAMC,eAApG,UAEF,yBAAKyB,UAAU,UACb,4BAAQA,UAAU,6BAA6B2F,QAAS,kBAAM,EAAKtH,MAAM4O,aAAa,EAAK5O,MAAMkL,UAAjG,oBAQR,yBAAKvJ,UAAW,2BAA6BrB,KAAKN,MAAMkL,OAAOI,KAAO,eAAiB,kBAAmBhE,QAAS,kBAAM,EAAKA,YAC3HzH,EACA0K,EACD,yBAAK5I,UAAU,4BACb,yBAAKA,UAAU,kBAAkBrB,KAAKN,MAAMkL,OAAOzK,UAEpDG,OAhEX,GAA4BqB,IAAMC,W,8BCxW5ByN,EAAiB,wDACVC,EAAc,wBAEdC,EAAb,YACI,WAAY7P,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACT6P,WAAW,EACXC,UAAU,EACVxO,UAAW,KACXyO,aAAc,GACdC,UAAU,EACVC,gBAAgB,EAChBC,kBAAkB,EAClBC,sBAAsB,GAXX,EADvB,oFAiBQ9P,KAAK+P,SAAU,IAjBvB,0CAoByB,IAAD,OAChB/P,KAAK+P,SAAU,EACf/P,KAAKgQ,WAAWlM,MAAK,WACjB,EAAKiM,SAAW,EAAK9P,SAAS,CAC1BuP,WAAW,EACXC,WAAY,EAAKQ,UAAUhP,UAC3BA,UAAW,EAAKgP,UAAUhP,iBA1B1C,qKAgCwBjB,KAAKkQ,UAAUC,OAAOnQ,KAAKoQ,YAAYnO,UAtC5C,QAMnB,wCAkCkBoO,EAAUC,UAAgBC,WAzCnB,oGAOzB,SAmCkBvQ,KAAKkQ,UAAUM,OAAOxQ,KAAKoQ,YAAYnO,UAzCtC,OAyC6DoO,GAnChF,cAqCcI,EAAU,IAAIH,UAAgBtQ,KAAK0Q,MAAMC,WA3CpC,QA4CX3Q,KAAK4Q,gBAAmB,IAAIN,WAAiBG,EA5ClC,OA4CuD,CAC9DI,YAAa,CAAC,qBAAsB,qBAAsB,4BAC1DC,cAAe,CAAC,kBAChBjE,OA/CO,SAMnB,UA2CoC7M,KAAK4Q,gBAAgBG,qBA3CzD,eA2CQ/Q,KAAKgR,eA3Cb,iBA4CoChR,KAAK4Q,gBAAgBK,qBA5CzD,WA4CQjR,KAAKkR,eA5Cb,YA6CQlR,KAAK+P,SA7Cb,kCA6CwB/P,KA7CxB,UA8CsCA,KAAK4Q,gBAAgBO,2BA9C3D,0BA8CYC,mBA9CZ,WA6C6BnR,SA7C7B,mRAoDc8C,EAAa,CACfd,UAAW,UACXC,QAAS,+BACTC,aA7DO,OA8DPC,UAAW,mCAETiP,EAAW,IAAIf,YAAkBgB,4BA1D/C,SA2D2BhB,UAAgBjM,OAAOC,OAAO,CAAEiN,KAAM,CAAEF,aAActO,IA3DjF,cA2DcyO,EA3Dd,OA4DQxR,KAAKkQ,UAAYmB,EACjBrR,KAAKoQ,YAAcrN,EACnB/C,KAAK0Q,MAAQc,EAEbxR,KAAKiQ,UAAY5G,KAAKmD,MAAM1J,OAAO2O,aAAaC,QAAQpC,IAAgB,MAhEhF,UAiEctP,KAAK2R,aAjEnB,0IAoEiBtO,EAAKY,GAAQ,IAAD,OACf+H,EAAW,eACZ3I,EAAMY,GAEC,iBAARZ,IACAY,EAAQA,EAAMgI,cAAcC,QAAQ,gBAAiB,IACrDF,EAAY3I,GAAOY,EACnB+H,EAAY6D,kBAAmB,EAC3B7P,KAAK4R,eAAe3N,KACpB+H,EAAY4D,gBAAiB,EAC7B5P,KAAK0Q,MAAMC,WAAWkB,SAASC,MAA/B,kBAAgD7N,EAAQjE,KAAKgR,gBAAkB,IAAIlN,MAAK,SAACiO,GACjF,EAAKpS,MAAM+P,eAAiBzL,GAC5B,EAAKhE,SAAS,CACV2P,gBAAgB,EAChBC,kBAAkB,OAG3BpE,OAAM,SAAC1E,GACF,EAAKpH,MAAM+P,eAAiBzL,GAC5B,EAAKhE,SAAS,CACV2P,gBAAgB,EAChBC,kBAAkB,SAMtC7P,KAAKC,SAAS+L,KA/FtB,qCAkGmB0D,GACX,GAAIA,EAAasC,SAAS,KACtB,OAAO,EAEX,IAAM/Q,EAAYyO,EAAe1P,KAAKgR,eACtC,OAAO/P,EAAUyF,QA5GD,GA6GZzF,EAAUyF,QA5GE,IA6GZzF,EAAUgR,MAAM5C,KAzG5B,wCA6GQ,OAAKrP,KAAKL,MAAM+P,cAAgB1P,KAAKL,MAAMiQ,eAChC,mCACC5P,KAAKL,MAAMkQ,kBAAoB7P,KAAK4R,eAAe5R,KAAKL,MAAM+P,cAC/D,2CAEA,+CAlHnB,kFAsH6BzO,EAAWiR,GAtHxC,0FAuHYC,EAvHZ,YAuHsB,IAAIC,YAAY,SAASC,OAAOpR,EAAY,OAEtDwD,KAAK,IAET,EAAA0N,GAAI1N,KAAJ,oBAAYyN,EAAUI,OAEtBH,EAAI1N,KAAK,IAAI8N,WAAW,IAExBJ,EAAI1N,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9B0N,EAAM,IAAIK,WAAWL,GACfM,EAAMN,EAAIzL,OACZgM,EAAiB,EACZC,EAAO,EAnIxB,mBAqImCH,WArInC,UAqIoDI,OAAOC,OAAOC,OAAO,UAAWX,GArIpF,oBAqIkBY,EArIlB,eAuIgBC,EAAgB,EACX1H,EAAI,EAxIzB,aAwI4BA,EAAIyH,EAAWrM,QAxI3C,oBAyIoBuM,EAAWtN,KAAKuN,MAAMH,EAAWzH,IAAM,GAC3C0H,GAAiBC,IACbA,EAAW,GA3I/B,uDAwIqD3H,EAxIrD,6BAgJgB0H,GAAiBhT,KAAKkR,gBAhJtC,wBAiJgBlR,KAAKC,SAAS,CACV6P,sBAAsB,IAlJ1C,kBAoJuB6C,GApJvB,QAqJuBK,EAAgBN,GACvBA,EAAiBM,EACjBhT,KAAKC,SAAS,CACVkT,oBAAqBxN,KAAKoH,MAAuB,IAAjB2F,EAAuB1S,KAAKkR,gBAC5DkC,sBAAuBV,EACvBW,gBAAiBV,KAEdA,EAAO,MAAU,GACxB3S,KAAKC,SAAS,CACVoT,gBAAiBV,IA9JrC,QAkKqBrH,EAAImH,EAAM,EAlK/B,aAkKkCnH,EAAImH,GAlKtC,oBAmK+B,MAAXN,EAAI7G,GAnKxB,iBAoKoB6G,EAAI7G,GAAK,EApK7B,gCAsKsB6G,EAAI7G,GAtK1B,+BAkK6CA,EAlK7C,0BAmI+BqH,EAnI/B,4RA8KQ3S,KAAKC,SAAS,CACV0P,UAAU,EACVG,sBAAsB,EACtBqD,oBAAqB,EACrBC,sBAAuB,EACvBC,gBAAiB,IAEf3D,EAAe1P,KAAKL,MAAM+P,aAAe1P,KAAKgR,eAC9CsC,EAAOC,+BACPC,EAAalD,UAAgBC,WAAW+C,EAAKG,WAvL3D,SAwL2BzT,KAAK0T,mBAAmBhE,EAAc8D,EAAWG,gBAxL5E,cAwLchB,EAxLd,gBAyLc3S,KAAK4Q,gBAAgBgD,eAAe,CACtCC,WAAYnE,EACZoE,WAAW,CAAE,GAAH,mBAASN,EAAWG,eAAerB,OAC7CK,SA5LZ,wBA8Lc3S,KAAKkQ,UAAUM,OAAOxQ,KAAKoQ,YAAYnO,UAAWyN,EAAc8D,GA9L9E,eA+LQxT,KAAKiQ,UAAY,CACbhP,UAAWyO,EACX4D,QAEJxQ,OAAO2O,aAAasC,QAAQzE,EAAajG,KAAKC,UAAUtJ,KAAKiQ,YAnMrE,KAoMQjQ,KApMR,KAsMuB0P,EAtMvB,UAwMsC1P,KAAK4Q,gBAAgBO,2BAxM3D,0BAqMY1B,UAAU,EACVxO,UAtMZ,KAuMY0O,UAAU,EACVyB,mBAxMZ,WAoManR,SApMb,gBA0MQD,KAAKN,MAAMsU,QAAQhU,KAAKiQ,WA1MhC,mJA8MQnN,OAAOmR,SAAP,4DAAuEjU,KAAKiQ,UAAUhP,UAAtF,YAAmGjB,KAAKiQ,UAAUqD,KAAKY,cA9M/H,+BAkNQpR,OAAO2O,aAAa0C,WAAW7E,GAC/BtP,KAAKiQ,UAAY,GACjBjQ,KAAKC,SAAS,CACVwP,UAAU,EACVxO,UAAW,KACXyO,aAAc,GACdC,UAAU,EACVC,gBAAgB,EAChBC,kBAAkB,EAClBC,sBAAsB,MA3NlC,+BA+Nc,IAAD,OACC3P,EAAWH,KAAKL,MAAM6P,UAEvBxP,KAAKL,MAAM8P,SACZ,6BACI,sCAAYzP,KAAKL,MAAMsB,WACvB,yBAAKI,UAAU,cACX,4BACIA,UAAU,kBACV2F,QAAS,kBAAM,EAAKoN,wBAFxB,gCAOJ,yBAAK/S,UAAU,cACX,4BACIA,UAAU,iBACV2F,QAAS,kBAAM,EAAKqN,WAFxB,wBASR,6BACI,yBAAKhT,UAAU,cACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBAAoB,MAEvC,2BACIiG,YAAY,MACZC,GAAG,YACHlG,UAAWrB,KAAKsU,kBAChBrQ,MAAOjE,KAAKL,MAAM+P,aAClBjI,SAAU,SAACV,GAAD,OAAO,EAAKJ,aAAa,eAAgBI,EAAEF,OAAO5C,QAC5DuD,SAAUxH,KAAKL,MAAMgQ,WAEzB,yBAAKtO,UAAU,sBACX,yBAAKA,UAAU,oBAAoBrB,KAAKgR,mBAInDhR,KAAKL,MAAMkQ,kBACR,yBAAKxO,UAAU,sBAAsBI,KAAK,SAA1C,WACa,IAAMzB,KAAKL,MAAM+P,aAAe1P,KAAKgR,eAAiB,IADnE,oBAIJ,yBAAK3P,UAAU,cACX,4BACIA,UAAU,kBACVmG,SAAUxH,KAAKL,MAAMgQ,UAAY3P,KAAKL,MAAMiQ,gBAAkB5P,KAAKL,MAAMkQ,mBAAqB7P,KAAK4R,eAAe5R,KAAKL,MAAM+P,cAC7H1I,QAAS,kBAAM,EAAKuN,mBAElBvU,KAAKL,MAAMgQ,UAAY3P,KAAKL,MAAMiQ,iBAChC,0BAAMvO,UAAU,+BAA+BI,KAAK,SAASC,cAAY,SANjF,mBAOuB1B,KAAK4R,eAAe5R,KAAKL,MAAM+P,cAAiB,IAAM1P,KAAKL,MAAM+P,aAAe1P,KAAKgR,eAAiB,IAAO,KAGvIhR,KAAKL,MAAMgQ,UACR,6BACK3P,KAAKL,MAAMmQ,qBACR,8DACmC9P,KAAKL,MAAM0T,gBAD9C,eAEI,yBAAKhS,UAAU,YACX,yBAAKA,UAAU,eAAeI,KAAK,cAAc+S,MAAO,CAAC9O,MAAO1F,KAAKL,MAAMwT,oBAAsB,KAAMsB,gBAAezU,KAAKL,MAAMwT,oBAAqBuB,gBAAc,IAC/JC,gBAAc,OAAO3U,KAAKL,MAAMyT,sBADrC,WACoEpT,KAAKkR,kBAKjF,wEAC6C,IAAMlR,KAAKL,MAAM+P,aAAe1P,KAAKgR,eAAiB,OAtEnH,8CAAmB,0BAAM3P,UAAU,+BAA+BI,KAAK,SAASC,cAAY,UA6EhG,OACI,6BACI,uDACCvB,OAjTjB,GAA+BwB,IAAMC,WCOxBgT,EAAb,YACE,WAAYlV,GAAQ,IAAD,8BACjB,4CAAMA,KA2KRmV,UAAY,SAACC,GACXhS,OAAO2O,aAAasC,QAhLG,0BAgLyB1K,KAAKC,UAAUwL,IAC/D,EAAK7U,SAAS,CACZ8U,gBAAiBD,KA7KnB,EAAKnV,MAAQ,CACXqV,OAAO,EACPC,KAAM,GACNC,KAAM,GACNC,WAAY,EACZC,WAAY,EACZC,SAAS,EACTN,gBAAiB1L,KAAKmD,MAAM1J,OAAO2O,aAAaC,QAZ3B,4BAY0D,KAC/E4D,eAAgB,MAElB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,YAAc,EAAKA,YAAYJ,KAAjB,gBACnB,EAAKK,eAAiB,EAAKA,eAAeL,KAApB,gBACtB1S,OAAOwN,QAAUA,EAlBA,EADrB,iFAuBItQ,KAAK4V,gBAvBT,yJA2BQE,EAAWhT,OAAOiT,cAAcC,aAChCC,EAAW5M,KAAKmD,MAAM1J,OAAO2O,aAAaC,QAAQpC,IAAgB,OAClEwG,IAAYG,EAAShV,UA7B7B,gCA8BYjB,KAAKuV,aAAaU,GA9B9B,6BAgCMjW,KAAK2V,gBAhCX,gIAoCMzV,GACFiE,QAAQC,IAAIlE,GACZF,KAAKC,SAAS,CACZiV,KAAMlV,KAAKL,MAAMuV,KAAKgB,OAAO,CAAChW,QAvCpC,4EA2CqB+V,GA3CrB,6FA4CsBA,EAAShV,UA5C/B,qCA4CkDjB,KAAKN,MAAMyW,OAAOC,eA5CpE,iCA4CUnV,EA5CV,KA6CIjB,KAAKC,SAAS,CACZ+U,OAAO,EACPK,SAAS,EACTpU,cAEE6B,OAAOmR,SAASoC,OAAOrE,SAAS,eAClClP,OAAOmR,SAAS/H,QAAQpJ,OAAOmR,SAASqC,OAASxT,OAAOmR,SAASsC,UAE/DzT,OAAOmR,SAASoC,OAAOrE,SAAS,aAClClP,OAAOmR,SAAS/H,QAAQpJ,OAAOmR,SAASqC,OAASxT,OAAOmR,SAASsC,UAInEvW,KAAKoE,IAAI,4BA1Db,UA2D0B,IAAIkM,UAAgBxN,OAAO0O,KAAKb,WAAY1P,GA3DtE,eA2DUwP,EA3DV,OA4DIzQ,KAAKoE,IAAI,qBA5Db,UA6DsBqM,EAAQ9Q,QA7D9B,WA6DQA,EA7DR,OAqEIwE,QAAQC,IAAIzE,GACY,iDAApBA,EAAM6W,UAtEd,wBAuEMxW,KAAKoE,IAAI,4BAETpE,KAAKoE,IAAI,0BAzEf,UA0EuBqS,MAAM,kBA1E7B,eA0EUnE,EA1EV,iBA2EsBA,EAAKoE,cA3E3B,eA2EUC,EA3EV,OA4EM3W,KAAKoE,IAAI,2CA5Ef,UA6EYqM,EAAQmG,eAAe,IAAIpE,WAAWmE,IA7ElD,WA8E8B,qCAApBhX,EAAM6W,UA9EhB,wBA+EQxW,KAAKoE,IAAI,4CA/EjB,UAiF6B,IAAIkM,WAAiBG,EAASxP,EAAW,CAC5D4P,YAAa,GAEbC,cAAe,CAAC,OAEhBjE,OAAQ5L,IAtFlB,eAiFY4V,EAjFZ,YAwFQ1S,QAxFR,UAwF0B0S,EAASC,MAxFnC,yBAwFgB1S,IAxFhB,wBA0FMpE,KAAKoE,IAAI,4BA1Ff,yBA6FiC,IAAIkM,WAAiBG,EAASxP,EAAW,CAEpE4P,YAAa,CAAC,QAEdC,cAAe,CAAC,cAAe,kBAE/BjE,OAAQ5L,IAnGd,eA6FU8V,EA7FV,OAsGI/W,KAAK+W,eAAiBA,EACtBjU,OAAOiU,eAAiBA,EACxB/W,KAAKoE,IAAI,+BAxGb,KAyGID,QAzGJ,UAyG+B4S,EAAe9B,OAzG9C,gCAyGY7Q,IAzGZ,UAyGgB,QAzGhB,MA6GIpE,KAAKoE,IAAI,8BA7Gb,UA+GqBpE,KAAK6V,eAAe,UAAW5U,GA/GpD,qCAgHkBjB,KAAK6V,eAAe,OAAQ5U,GAhH9C,qCAiHkBjB,KAAK6V,eAAe,OAAQ5U,GAjH9C,oBA8GUgU,EA9GV,CA+GM1V,QA/GN,KAgHMyX,KAhHN,KAiHMC,KAjHN,MAoHInU,OAAOmS,KAAOA,EACdjV,KAAKiV,KAAOA,EACZjV,KAAKC,SAAS,CACZgV,OACAI,SAAS,IAxHf,sLA4HuB1I,EAAO1L,GA5H9B,oFA6HIjB,KAAKoE,IAAI,qBAAuBuI,EAAQ,QAClC/I,EAAM,IAAIsT,aAAWvK,EAAO1L,EAAW6B,OAAOC,YA9HxD,SA+HUa,EAAIwD,OA/Hd,uBAgIexD,EAAIuT,QAhInB,kDAiIqBvT,EAAIwT,qBAjIzB,cAiIUC,EAjIV,OAkIMrX,KAAKoE,IAAI,2BAA6BiT,EAAGpI,WAAa,QAlI5D,UAmIiCrL,EAAI0T,+BAnIrC,eAmIYC,EAnIZ,OAoIYC,EAAO,CACX1D,WAAW,YAAKyD,GAChBE,OAAQ9K,GAtIhB,UAwIY3M,KAAK+W,eAAeW,YAAYF,EA5IhC,MAIZ,yBAyIY5T,EAAI+T,aAzIhB,iCA2IW/T,GA3IX,gQA+IqB,gBA/IrB,SAgJU5D,KAAKN,MAAMyW,OAAOV,cACtB,GAFe,iBA/IrB,6IAuJIzV,KAAKN,MAAMyW,OAAOyB,UAClBtL,WAAWtM,KAAK2V,cAAe,KAC/BxR,QAAQC,IAAI,iBAAkBpE,KAAKN,MAAMyW,OAAOH,gBAzJpD,yJA8JQlT,OAAOmR,SAASoC,OAAOrE,SAAS,eAClClP,OAAOmR,SAAS/H,QAAQpJ,OAAOmR,SAASqC,OAASxT,OAAOmR,SAASsC,UAEnEvW,KAAKC,SAAS,CACZ+U,OAAO,IAEJhV,KAAKL,MAAM2V,eApKpB,uBAqKY1R,EAAM,IAAIsT,aAAW,OAAQ,KAAMpU,OAAOC,YArKtD,SAsKYa,EAAIwD,OAtKhB,OAuKMpH,KAAKC,SAAS,CACZqV,eAAgB1R,IAxKxB,qIAoLY,IAAD,OACDuG,EAASnK,KAAKL,MAAMwV,WAAanV,KAAKL,MAAMyV,WAElD,OADA/P,SAAS8I,OAAShE,EAAM,WAAOA,EAAP,MAAoB,IAzLlC,+BA0LLnK,KAAKL,MAAMqV,MAmBLhV,KAAKL,MAAM0V,QACb,yBAAKhU,UAAU,eACpB,yBAAKA,UAAU,+BAA+BI,KAAK,UACjD,0BAAMJ,UAAU,WAAhB,eAEF,yBAAKA,UAAU,aACZrB,KAAKL,MAAMuV,KAAK7H,KAAK,QAInB,yBAAKhM,UAAW,aAAerB,KAAKL,MAAM0V,QAAU,UAAY,KACrE,kBAAC,IAAD,CAAMhU,UAAU,aAAawW,qBAAqB,EAAMC,aAAc9X,KAAKL,MAAMoV,gBAAiBgD,SAAU,SAACzM,GAAD,OAAO,EAAKuJ,UAAUvJ,KAChI,kBAAC,IAAD,KACE,kBAAC,IAAD,gBACA,kBAAC,IAAD,oBAAkBtL,KAAKL,MAAMyV,WAAX,WAA4BpV,KAAKL,MAAMyV,WAAvC,KAAuD,IACzE,kBAAC,IAAD,aAAWpV,KAAKL,MAAMwV,WAAX,WAA4BnV,KAAKL,MAAMwV,WAAvC,KAAuD,KAIpE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAYvR,IAAK5D,KAAKL,MAAMsV,KAAK1V,QAAS0H,OAAQjH,KAAK0V,kBAEzD,kBAAC,IAAD,CAAUlB,MAAO,CAACwD,SAAU,MAC1B,kBAAC,EAAD,CAASpU,IAAK5D,KAAKL,MAAMsV,KAAK+B,KAAM/L,SAAU,SAACmK,GAAD,OAAgB,EAAKnV,SAAS,CAACmV,mBAE/E,kBAAC,IAAD,KACE,kBAAC,EAAD,CAASxR,IAAK5D,KAAKL,MAAMsV,KAAKgC,KAAMhM,SAAU,SAACkK,GAAD,OAAgB,EAAKlV,SAAS,CAACkV,qBA5C5E,yBAAK9T,UAAU,cACpB,6BACE,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OAAOE,IAAK0W,IAAUzW,IAAI,eAE3C,6BACE,4BACIH,UAAU,kBACV2F,QAAShH,KAAKyV,eAFlB,4BAIF,kBAAC,EAAD,CAAWzB,QAAShU,KAAKuV,eACzB,6BACA,6BACE,qDACA,kBAAC3L,EAAA,EAAD,CAASf,UAAU,SAASjF,IAAK5D,KAAKL,MAAM2V,wBAtMxD,GAA0B1T,a,kBCfbsW,EAAb,YACE,WAAYxY,GAAQ,IAAD,sBACjB,4CAAMA,IACN,IAAMyY,EAASC,IAAY5L,MAAM,EAAK9M,MAAMuU,SAASoC,QAChDoB,EAAmBU,EAAnBV,OAAQY,EAAWF,EAAXE,QAHI,OAKf,EAAK1Y,MADH8X,GAAUY,EACC,CACXC,YAAW,EACXC,WAAWd,EACXe,YAAYH,GAGD,CACXC,YAAW,EACXC,WAAW,GACXC,YAAY,IAdC,EADrB,iFAoBsB,IAAD,QACZxY,KAAKN,MAAM2V,SAAWrV,KAAKL,MAAM4Y,YAAcvY,KAAKL,MAAM6Y,aAC7DxY,KAAKN,MAAMmW,eAAe7V,KAAKL,MAAM4Y,WAAYvY,KAAKL,MAAM6Y,aACzD1U,MAAK,SAAA2U,GACJ,EAAKxY,SAAS,CACZqY,YAAY,SAzBxB,yCA+BqBtU,GACbhE,KAAKN,MAAMkE,KAAQ5D,KAAKL,MAAM4D,cAhCtC,+BAgFI,OACE,6BACGvD,KAAKL,MAAM2Y,WACZ,6BACE,kCAAO,gCAAStY,KAAKL,MAAM4Y,YAA3B,cACA,qDAA2BvY,KAAKL,MAAM6Y,YAAtC,MAEF,kDAvFR,GAA0B7W,IAAMC,WCejB8W,E,iLAZH,IAAD,OACP,OACE,kBAAC,IAAD,CAAYC,SAAUrW,GAAwBsW,SAAS,WACrD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAM,kBAAC,EAAS,EAAKrZ,UACtD,kBAAC,IAAD,CAAOoZ,KAAK,QAAQC,UAAW,kBAAM,kBAAC,EAAS,EAAKrZ,gB,GANzCkC,a,8DCErB,sBAAA4E,EAAA,6DACI1D,OAAOC,WAAahB,IAAU,eADlC,SAIwBuO,UAAgBjM,OAAOC,OAAO,CAAEiN,KAAM,CAAEF,SAAU,IAAIf,YAAkBgB,8BAAmCxO,OAAOC,aAJ1I,OAIID,OAAO0O,KAJX,OAOI1O,OAAOiT,cAAgB,IAAIzF,gBAAsBxN,OAAO0O,MAGxD1O,OAAO7B,UAAY6B,OAAOiT,cAAcK,eAV5C,4C,sBAcAtT,OAAOkW,gB,0CAAkBC,GAAenV,MAAK,WACzCoV,IAASC,OAAO,kBAAC,EAAD,CAAQtC,SAAU/T,OAAO+T,SAAUV,OAAQrT,OAAOiT,gBAChE1Q,SAAS+T,eAAe,YAEzB3N,MAAMtH,QAAQ+I,Q,6MCtBNzD,EAAe,gBAKfG,EAAb,YACI,WAAYlK,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT4D,aAAa,EACbG,UAAU,EACV2V,SAAU,IAEd,EAAKxQ,UAAY,KACjB,EAAKyQ,YAAc,KACnB,EAAKC,aAAe,KACpB,EAAKC,eAAiB,GACtB,EAAKC,kBAAmB,EACxB,EAAKtN,eAAiB,KACtB,EAAKuN,gBAAkB/X,IAAMsH,YAC7B,EAAK8G,SAAU,EAdA,EADvB,gHAkBoBlH,GAlBpB,uFAmBc8Q,EAAc,IAAIvH,YAAY,SAC9BuE,EAAMgD,EAAYtH,OAAO,KAAOxJ,GAEtC7I,KAAK6I,UAAYA,EACjB7I,KAAKwZ,eAAiB,GAvB9B,KAwB4BI,EAxB5B,SAwB8ChH,OAAOC,OAAOC,OAAO,UAAW6D,GAxB9E,mBAwBQ3W,KAAKsZ,YAxBb,KAwBmCO,KAxBnC,gBAwBoF5K,SAAS,UAErFjP,KAAKuZ,aAAelQ,KAAKmD,MAAM1J,OAAO2O,aAAaC,QAAQ1R,KAAKsZ,YAAc,kBAAoB,SAAW,GAC7GtZ,KAAKuZ,aAAa/U,SAAQ,SAACsV,GACvB,IAAK,IAAIxO,EAAIwO,EAAEC,MAAOzO,EAAIwO,EAAEE,OAAQ1O,EAChC,EAAKkO,eAAelO,GAAKjC,KAAKmD,MAAM1J,OAAO2O,aAAaC,QAAQ,EAAK4H,YAAc,MAAQhO,IAAM,WAGzGtL,KAAKia,aAAY,GAhCzB,2IAoCQja,KAAK0Z,gBAAgBxQ,QAAQyE,UAAY3N,KAAK0Z,gBAAgBxQ,QAAQgR,eApC9E,kCAuCgBC,GAAa,IAAD,OACfna,KAAK+P,SAGV/P,KAAKC,SAAS,CACVoZ,SAAUhV,OAAO8T,OAAOnY,KAAKwZ,kBAC9B,WACKW,GACA,EAAKA,kBA/CrB,kCAoDiB,IAAD,OACR,GAAIna,KAAKN,MAAMmJ,WAAa7I,KAAK6I,YAAc7I,KAAKN,MAAMmJ,UAAW,CACjE,IAAMuR,EAAQpa,KAAKqa,UAAUra,KAAKN,MAAMmJ,WACpC7I,KAAKL,MAAM+D,UACX0W,EAAMtW,MAAK,WACP,EAAKwW,sBAIbta,KAAKN,MAAMkE,MAAQ5D,KAAKL,MAAM4D,cAC9BvD,KAAKC,SAAS,CACVsD,aAAa,EACbG,UAAU,IAEd1D,KAAKsa,sBAlEjB,0CAuEQta,KAAK+D,YACL/D,KAAK+P,SAAU,IAxEvB,yCA2EuB/L,GAAY,IAAD,OAC1BhE,KAAK+D,YACD/D,KAAKN,MAAMqJ,gBACXuD,YAAW,WACP,EAAK6N,eACN,KAEFna,KAAKN,MAAMqJ,gBAAkB/E,EAAU+E,gBACxC/I,KAAKsa,qBAnFjB,6CAwFQta,KAAK+P,SAAU,EACX/P,KAAKmM,iBACLC,aAAapM,KAAKmM,gBAClBnM,KAAKmM,eAAiB,QA3FlC,oCAgGkBtD,EAAW3I,GACrB,GAAI2I,IAAc7I,KAAK6I,UAAvB,CAGA,IAAMiM,EAAQ5U,EAAQ4U,MAClBA,KAAS9U,KAAKwZ,iBAGlBxZ,KAAKwZ,eAAe1E,GAAS5U,EAC7B4C,OAAO2O,aAAasC,QAAQ/T,KAAKsZ,YAAc,MAAQxE,EAAOzL,KAAKC,UAAUpJ,IAE7EF,KAAKuZ,aAAa9U,KAAK,CACnBsV,MAAOjF,EACPkF,KAAMlF,EAAQ,IAElB9U,KAAKuZ,aAAahT,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEuT,MAAQtT,EAAEsT,SAC7C/Z,KAAKuZ,aAAevZ,KAAKuZ,aAAapW,QAAO,SAACoX,EAAIT,GAC9C,OAAIA,EAAEC,QAAUD,EAAEE,OAGbO,EAAG7T,QACJ6T,EAAG9V,KAAKqV,GAERS,EAAGA,EAAG7T,OAAS,GAAGsT,OAASF,EAAEC,QAC7BQ,EAAGA,EAAG7T,OAAS,GAAGsT,KAAOF,EAAEE,OANpBO,IASZ,IACHzX,OAAO2O,aAAasC,QAAQ/T,KAAKsZ,YAAc,gBAAiBjQ,KAAKC,UAAUtJ,KAAKuZ,mBA5H5F,6EA+HwB1Q,EAAW2R,EAAWC,GA/H9C,mFAgIQD,EAAY7U,KAAKE,IAAI2U,EAAWC,EAnIb,IAG3B,SAiI6Bza,KAAKN,MAAMkE,IAAI8W,QAAQjR,EAAcJ,KAAKC,UAAU,CACrEqR,gBAAiB,CACbpR,WAAYV,EACZ+R,WAAYJ,EACZK,MAAOJ,EAAUD,KAErB,IAvIZ,cAwIiBnB,SAAS7U,SAAQ,SAACsW,EAAGxP,GAC5B,EAAKyP,cAAclS,EAAW,CAC1BiM,MAAO0F,EAAYlP,EACnBjL,SAAUya,EAAEE,UACZ5a,KAAM0a,EAAE1a,KACRE,KAAMwa,EAAExa,UA7ItB,qRAmJYN,KAAKyZ,iBAnJjB,iEAuJYzZ,KAAKyZ,kBAAmB,EACpBzZ,KAAKmM,iBACLC,aAAapM,KAAKmM,gBAClBnM,KAAKmM,eAAiB,MAE1BhI,QAAQC,IAAI,0BACN6W,EAAUjb,KAAK6I,UA7JjC,SA8JsC7I,KAAKN,MAAMkE,IAAI8W,QAAQjR,EAAcJ,KAAKC,UAAU,CAC1E4R,cAAe,CACX3R,WAAY0R,KAEhB,IAlKhB,UA8JgBE,EA9JhB,OAmKgBC,EAAqBD,EAAcE,gBACnCC,EAAkBtb,KAAKuZ,aAAa7S,OAAS1G,KAAKuZ,aAAavZ,KAAKuZ,aAAa7S,OAAS,GAAGsT,KAAO,GAClFoB,GArKlC,kCAsKsBpb,KAAK6L,cAAcoP,EAASK,EAAiBF,GAtKnE,QAuKgBpb,KAAKia,aAAY,GAvKjC,yBA2KYja,KAAKyZ,kBAAmB,EACpBzZ,KAAK+P,UACL/P,KAAKmM,eAAiBG,YAAW,kBAAM,EAAKgO,qBAAoB,MA7KhF,gKAkLc,IAAD,OACDiB,EAAc,KAClB,OACI,yBAAKla,UAAU,gBAAgBwI,IAAK7J,KAAK0Z,iBACpC1Z,KAAKL,MAAM0Z,SAAS9L,KAAI,SAACrN,GACtB,IAAMsb,EAAc,kBAAC,IAAD,CAChBnY,IAAK,EAAKiW,YAAcpZ,EAAQ4U,MAChC5U,QAASA,EACTub,QAAS,kBAAM,EAAKA,QAAQvb,IAC5Bc,UAAWua,GAAerb,EAAQG,WAAakb,EAAYlb,UAAYH,EAAQI,KAAOib,EAAYjb,KA7L7F,MAgMT,OADAib,EAAcrb,EACPsb,KAEVxb,KAAKN,MAAMqJ,gBACR,kBAAC,IAAD,CACI1F,IAAK,iBACLnD,QAASF,KAAKN,MAAMqJ,eACpBzH,SAAS,EACTN,UAAU,SArMlC,GAA6BW,IAAMC,a,8NCH7B8Z,EAAgB,gBAchBxE,E,WACJ,WAAYvK,EAAO1L,EAAW8B,GAAY,oBACxC/C,KAAK2M,MAAQA,EACb3M,KAAKiB,UAAYA,EACjBjB,KAAKoQ,YAAcrN,EACnB/C,KAAK2b,SAAWhX,QAAQ6G,UACxBxL,KAAK4b,qBACL9Y,OAAO+Y,KAAOA,EACd/Y,OAAO8W,OAASA,E,iEAShB,IAAMkC,EAAS,WAAa9b,KAAKiB,UAAY,IAAMjB,KAAK2M,MAAQ,IAC5DtJ,EAAMoO,aAAaC,QAAQoK,GAC/B,GAAIzY,EAAK,CACP,IAAMsT,EAAMiD,EAAOC,KAAKxW,EAAK,UAC7B,GAAIsT,EAAIjQ,SAAWmV,MAASE,gBAC1B,MAAM,IAAItZ,MAAM,qCAElBY,EAAMwY,MAASxL,QAAQ2L,cAAcrF,QAErCtT,EAAM,IAAIwY,MAASxL,QACnBoB,aAAasC,QAAQ+H,EAAQlC,EAAOC,KAAKxW,EAAIoQ,WAAWxE,SAAS,WAEnEjP,KAAKic,KAAO5Y,I,0CAOM6Y,GAClB,IAAMvF,EAAMiD,EAAOC,KAAKqC,EAAgB,UACxC,GAAIvF,EAAIjQ,SAAWmV,MAASE,gBAC1B,MAAM,IAAItZ,MAAM,qCAElB,IAAMY,EAAMwY,MAASxL,QAAQ2L,cAAcrF,GAC3C3W,KAAKic,KAAO5Y,EACZ,IAAMyY,EAAS,WAAa9b,KAAKiB,UAAY,IAAMjB,KAAK2M,MAAQ,IAChE8E,aAAasC,QAAQ+H,EAAQlC,EAAOC,KAAKxW,EAAIoQ,WAAWxE,SAAS,a,oJAIjEjP,KAAKkQ,UAAY,IAAII,YAAkBgB,4BACrCG,aAAc,OAASzR,KAAK2M,MAAQ,K,SAEnB2D,UAAgBjM,OAAOC,OAAO,CAAEiN,KAAM,CAAEF,SAAWrR,KAAKkQ,YAAelQ,KAAKoQ,c,cAA/FpQ,KAAK0Q,M,OACL1Q,KAAKmc,SAAW,IAAI7L,UAAgBtQ,KAAK0Q,MAAMC,WAAY3Q,KAAKiB,WAChEjB,KAAKoc,UAAY,IAAI9L,WAAiBtQ,KAAKmc,SAAUnc,KAAKiB,UAAW,CACnE4P,YAAa,CAAC,MAAO,OAAQ,gBAC7BC,cAAe,CAAC,MAAO,SAAU,eAAgB,gBACjDjE,OAAQ7M,KAAKiB,YAEfjB,KAAKqc,WAAarc,KAAKoQ,YAAYnO,U,mBAC5B,G,sQAYAjC,KAAKsc,QAAUtc,KAAKsc,MAAQtc,KAAKuc,e,oQAOlCvc,KAAKoH,O,uBACOpH,KAAKkQ,UAAUC,OAAOnQ,KAAKqc,WAAYrc,KAAKiB,W,cAAxDoC,E,2BACGA,G,6QAOIrD,KAAKmX,Q,gDAAWnX,KAAKwc,O,8CAAWxc,KAAKwc,OAAU,IAAI7X,SAAQ,SAAC6G,GACvE,EAAKiR,UAAYjR,K,yTASDxL,KAAKkQ,UAAUC,OAAOnQ,KAAKqc,WAAYrc,KAAKiB,W,YAAxDoC,E,iDAEGA,EAAIsQ,gB,WAET3T,KAAK0c,Q,yCACA1c,KAAK0c,QAAQ/I,gB,cAEhBgJ,EAAYrM,UAAgBsM,WAAW,WAC7C5c,KAAK0c,QAAUC,E,kBACRA,EAAUhJ,gB,kRAQVrD,QAAcuM,U,KAAoBvM,eAAqBwM,O,SAAc9c,KAAKoX,qB,iDAAlDyF,U,wNAYE5b,EAAWoF,G,0FACrCrG,KAAK0a,QAAQzZ,GAAajB,KAAKiB,UAAWya,EAAerV,I,wJAKhE,OAAOuT,EAAOC,KAAK7Z,KAAKic,KAAK/J,WAAWjD,SAAS,Y,oLAI1CjP,KAAK0E,IAAIgX,EAAe1b,KAAK+c,2B,sPAO/B/c,KAAK0c,Q,sBACF,IAAIja,MAAM,kC,uBAEZzC,KAAKkQ,UAAUM,OAAOxQ,KAAKqc,WAAYrc,KAAKiB,UAAWjB,KAAK0c,S,OAClE1c,KAAK0c,QAAU,KACX1c,KAAKyc,WACPzc,KAAKyc,Y,mQAUIzc,KAAKmX,Q,uCACR,IAAI1U,MAAM,iB,wIAURua,GAEV,OADAhd,KAAK2b,SAAW3b,KAAK2b,SAAS7X,MAAK,kBAAMkZ,OAAQvR,OAAM,kBAAMuR,OACtDhd,KAAK2b,W,uCAQGsB,GACf,IAAMtG,EAAMiD,EAAOC,KAAKoD,EAAO,UACzBC,EAAQ,IAAI1K,WAAWqJ,YAAesB,aAC5CxG,EAAIyG,KAAKF,EAAO,EAAG,EAAGA,EAAMxW,QAC5B,IAAM2W,EAAM,IAAI7K,WAAWmE,EAAIjQ,OAASmV,YAAesB,aACvDxG,EAAIyG,KAAKC,EAAK,EAAGH,EAAMxW,QACvB,IAAM4W,EAAazB,YAAe0B,KAAKF,EAAKH,EAAOld,KAAKic,KAAKxI,WAC7D,OAAOmG,EAAOC,KAAKyD,GAAYrO,a,uCAQhBuO,GACf,IAAM7G,EAAMiD,EAAOC,KAAK2D,GAClBN,EAAQrB,cAAiBA,YAAesB,aACxCE,EAAMxB,YAAelF,EAAKuG,EAAOld,KAAKic,KAAKxI,WAE3CgK,EAAU,IAAIjL,WAAW6K,EAAI3W,OAASmV,YAAesB,aAG3D,OAFAM,EAAQ/Y,IAAIwY,GACZO,EAAQ/Y,IAAI2Y,EAAKxB,YAAesB,aACzBvD,EAAOC,KAAK4D,GAASxO,SAAS,Y,iCAS5BgO,EAAOS,GAChB,GAAIA,EAAehX,SAAWmV,MAAS8B,gBACrC,MAAM,IAAIlb,MAAM,2CAElB,IAAMkU,EAAMiD,EAAOC,KAAKoD,EAAO,UACzBC,EAAQ,IAAI1K,WAAWqJ,MAASsB,aACtCxG,EAAIyG,KAAKF,EAAO,EAAG,EAAGA,EAAMxW,QAC5B,IAAM2W,EAAM,IAAI7K,WAAWmE,EAAIjQ,OAASmV,MAASsB,aACjDxG,EAAIyG,KAAKC,EAAK,EAAGH,EAAMxW,QACvB,IAAM4W,EAAazB,MAAS0B,KAAKF,EAAKH,EAAOQ,EAAgB1d,KAAKic,KAAKxI,WACvE,OAAOmG,EAAOC,KAAKyD,GAAYrO,a,iCAStBuO,EAAKE,GACd,GAAIA,EAAehX,SAAWmV,MAAS8B,gBACrC,MAAM,IAAIlb,MAAM,2CAElB,IAAMkU,EAAMiD,EAAOC,KAAK2D,GAClBN,EAAQrB,cAAiBA,MAASsB,aAClCE,EAAMxB,MAASlF,EAAKuG,EAAOQ,EAAgB1d,KAAKic,KAAKxI,WAErDgK,EAAU,IAAIjL,WAAW6K,EAAI3W,OAASmV,MAASsB,aAGrD,OAFAM,EAAQ/Y,IAAIwY,GACZO,EAAQ/Y,IAAI2Y,EAAKxB,MAASsB,aACnBvD,EAAOC,KAAK4D,GAASxO,SAAS,Y,mEAY7B5L,EAAKgD,G,8EACbA,EAAUhC,OAAOC,OAAO,CACtBiH,WAAW,EACXoB,MAAO3M,KAAK2M,OACXtG,G,SACarG,KAAKoc,UAAUhR,IAAI,CACjCqM,OAAQpR,EAAQsG,MAChBtJ,Q,cAFEma,E,UAKFA,EAAMnU,KAAKmD,MAAMnG,EAAQkF,UAAYvL,KAAK4d,iBAAiBJ,GAAOA,I,kBAE7DA,G,gLAaKvc,EAAWoC,EAAKgD,G,kFAC5BA,EAAUhC,OAAOC,OAAO,CACtBiH,WAAW,EACXoB,MAAO3M,KAAK2M,OACXtG,GACGoK,EAAU,IAAIH,UAAgBtQ,KAAK0Q,MAAMC,WAAY1P,GACrD4V,EAAW,IAAIvG,WAAiBG,EAASxP,EAAW,CACxD4P,YAAa,CAAC,OACdC,cAAe,GACfjE,OAAQ7M,KAAKiB,Y,SAGC4V,EAASzL,IAAI,CAC3BqM,OAAQpR,EAAQsG,MAChBtJ,Q,cAFEma,E,UAKFA,EAAMnU,KAAKmD,MAAMnG,EAAQkF,UAAYvL,KAAK4d,iBAAiBJ,GAAOA,I,kBAE7DA,G,kQAQMxd,KAAKoc,UAAUnH,O,iNAWpB5R,EAAKY,EAAOoC,G,4FACdrG,KAAK6d,a,cACXxX,EAAUhC,OAAOC,OAAO,CACtBiH,WAAW,GACVlF,G,SACGrG,KAAK8d,aAAY,kBAAM,EAAK1B,UAAU1X,IAAI,CAC9CrB,MACAY,MAAOoC,EAAQkF,UAAY,EAAKwS,iBAAiB1U,KAAKC,UAAUrF,IAAUoF,KAAKC,UAAUrF,IApVnF,S,iLA6VGZ,G,4FACLrD,KAAK6d,a,uBACL7d,KAAK8d,aAAY,kBAAM,EAAK1B,UAAUxO,OAAO,CACjDvK,OAhWM,S,gRA0WFrD,KAAK6d,a,uBACD7d,KAAKoc,UAAUf,aAAa,CAAC5D,OAAQzX,KAAK2M,Q,6BAAU,G,iCAC/C3M,KAAK8d,aAAY,kBAAM,EAAK1B,UAAU4B,aAAa,GA5W1D,S,yEA8WC,M,wLAIa3X,G,8EACtBA,EAAUhC,OAAOC,OAAO,CACtBrD,UAAW,KACXyc,eAAgB,KAChBlT,iBAAkB,KAClBkR,gBACA/O,MAAO3M,KAAK2M,OACXtG,IACSqX,e,yCACHrX,EAAQqX,gB,UAEZrX,EAAQmE,iB,mBACNnE,EAAQpF,U,sBACL,IAAIwB,MAAM,2D,uBAEezC,KAAK0a,QAAQrU,EAAQpF,UAAWoF,EAAQqV,cAAe,CACtF/O,MAAOtG,EAAQsG,Q,OADjBtG,EAAQmE,iB,iBAILnE,EAAQmE,iB,uBACL,IAAI/H,MAAM,wD,YAEZkU,EAAMiD,EAAOC,KAAKxT,EAAQmE,iBAAkB,WAC1C9D,SAAWmV,MAAS8B,gB,uBACpB,IAAIlb,MAAM,2C,eAEZib,EAAiB,IAAIlL,WAAWqJ,MAAS8B,kBAChCjZ,IAAIiS,G,kBACZ+G,G,sLAUYvd,EAASkG,G,uFACCrG,KAAKie,kBAAkB5X,G,cAA9CqX,E,yBACC1d,KAAKke,WAAW/d,EAASud,I,uLAGbT,EAAO5W,G,uFACGrG,KAAKie,kBAAkB5X,G,cAA9CqX,E,yBACC1d,KAAKme,WAAWlB,EAAOS,I,oLAWd1T,EAAY9J,EAASmG,G,mFACrCrG,KAAK6d,aACLxX,EAAUhC,OAAOC,OAAO,CACtBqI,MAAO3M,KAAK2M,OACXtG,G,SACGrG,KAAK8d,aAAY,kBAAM,EAAK1B,UAAUgC,aAAa,CACvDC,YAAarU,EACbyN,OAAQpR,EAAQsG,MAChBzM,WAlbM,S","file":"static/js/main.07c59404.chunk.js","sourcesContent":["import React from \"react\";\nimport anon from \"../../assets/anon.png\";\nimport {Profile} from \"react-near-openweb\";\n\nconst ProfileMessageStyle = {\n    profile: {\n        display: 'none',\n    },\n};\n\nconst formatTime = (t) => {\n    const d = new Date(t);\n    const c = new Date();\n    if (c.getDate() === d.getDate()) {\n        return d.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n    } else {\n        return d.toLocaleDateString()\n    }\n}\n\nexport class ChatMessage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayName: \"\",\n            profileUrl: anon,\n        };\n    }\n\n\n    onProfile(p) {\n        this.setState({\n            displayName: (p && p.displayName) || \"\",\n            profileUrl: (p && p.profileUrl) || anon,\n        })\n    }\n\n    render() {\n        const message = this.props.message;\n        const content = message.text;\n        const senderId = message.senderId;\n        const time = formatTime(message.time);\n        const p = this.props.showMeta && <Profile accountId={senderId} styles={ProfileMessageStyle} onFetch={(p) => this.onProfile(p)}/>;\n        return (\n            <div className={\"chat-message\" + (this.props.pending ? \" chat-message-pending\" : \"\") + (!this.props.showMeta ? \" chat-message-no-meta\" : \"\")}>\n                {p}\n                <img className=\"chat-message-profile\" src={this.state.profileUrl} alt={`Profile @${senderId}`}/>\n                <div className=\"chat-message-content\">\n                    <div className=\"chat-message-meta\">\n                        <div className=\"chat-message-sender-name\">{this.state.displayName || (\"@\" + senderId)}</div>\n                        {this.state.displayName && <div className=\"chat-message-sender-id\">{\"(@\" + senderId + \")\"}</div>}\n                        {this.props.pending ?\n                            <div className=\"chat-message-time\"><span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span> sending</div> :\n                            <div className=\"chat-message-time\">{time}</div>\n                        }\n                    </div>\n                    {content}\n                </div>\n            </div>\n        )\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/gray_near_logo.55517b93.svg\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOn.23e3b306.png\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOff.475ce496.png\";","(function() {\n    const CONTRACT_NAME = 'react-template'; /* TODO: fill this in!*/\n    const DEFAULT_ENV = 'development'; \n    \n    function getConfig(env) {\n        switch (env) {\n\n        case 'production':\n        case 'development':\n            return {\n                networkId: 'default',\n                nodeUrl: 'https://rpc.nearprotocol.com',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://wallet.nearprotocol.com',\n            };\n        case 'staging':\n            return {\n                networkId: 'staging',\n                nodeUrl: 'https://staging-rpc.nearprotocol.com/',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://near-wallet-staging.onrender.com',\n            };\n        case 'local':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                keyPath: `${process.env.HOME}/.near/validator_key.json`,\n                walletUrl: 'http://localhost:4000/wallet',\n                contractName: CONTRACT_NAME,\n            };\n        case 'test':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'test-remote':\n        case 'ci':\n            return {\n                networkId: 'shared-test',\n                nodeUrl: 'http://shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'ci-staging':\n            return {\n                networkId: 'shared-test-staging',\n                nodeUrl: 'http://staging-shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        default:\n            throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n        }\n    }\n    \n    let Cookies = require('js-cookie');\n    const cookieConfig = typeof Cookies != 'undefined' && Cookies.getJSON('fiddleConfig');\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = getConfig;\n    } else {\n        window.nearConfig =  cookieConfig && cookieConfig.nearPages ? cookieConfig : getConfig(DEFAULT_ENV);\n    }\n})();\n","module.exports = __webpack_public_path__ + \"static/media/anon.5cbbd243.png\";","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport Files from \"react-files\";\nimport { Profile } from \"react-near-openweb\";\n\nconst uploadResizeWidth = 96;\nconst uploadResizeHeight = 96;\n\nexport class ProfileApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const keys = [\n      \"displayName\",\n      \"profileUrl\",\n      \"bio\",\n    ];\n    this.state = keys.reduce((acc, key) => {\n      acc[key] = \"\";\n      acc.chainValues[key] = null;\n      return acc;\n    }, {\n      keys,\n      chainValues: {},\n      initialized: false,\n      saving: false,\n      hasChanges: false,\n      appReady: false,\n    });\n  }\n\n  async init(profile) {\n    if (!profile) {\n      return;\n    }\n    const newState = this.state.keys.reduce((state, key) => {\n      state[key] = profile[key] || \"\";\n      state.chainValues[key] = state[key];\n      return state;\n    }, {\n      chainValues: {}\n    });\n    this.setState(newState);\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => {\n        this.setState({\n          appReady: true,\n        })\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  handleChange(key, value) {\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  hasChanges() {\n    return this.state.keys.some(key => this.state.chainValues[key] !== this.state[key]);\n  }\n\n  async save() {\n    this.setState({\n      saving: true,\n    });\n    console.log(\"Saving\");\n    const chainValues = Object.assign({}, this.state.chainValues);\n    const promises = [];\n    this.state.keys.forEach(key => {\n      if (this.state.chainValues[key] !== this.state[key]) {\n        chainValues[key] = this.state[key];\n        promises.push(this.props.app.set(key, this.state[key]).then(() => {\n          console.log(\"Updated key `\" + key + \"` to value `\" + this.state[key] + '`');\n        }));\n      }\n    });\n    Promise.all(promises).then(() => {\n      this.setState({\n        chainValues,\n        saving: false,\n      })\n    });\n  }\n\n  async onFilesChange(f) {\n    let sourceImage = new Image();\n    let reader = new FileReader();\n\n    reader.readAsDataURL(f[0]);\n\n    sourceImage.onload = () => {\n      // Create a canvas with the desired dimensions\n      let canvas = document.createElement(\"canvas\");\n      const aspect = sourceImage.naturalWidth / sourceImage.naturalHeight;\n      const width = Math.round(uploadResizeWidth * Math.max(1, aspect));\n      const height = Math.round(uploadResizeHeight * Math.max(1, 1 / aspect));\n      canvas.width = uploadResizeWidth;\n      canvas.height = uploadResizeHeight;\n      const ctx = canvas.getContext(\"2d\");\n\n      // Scale and draw the source image to the canvas\n      ctx.imageSmoothingQuality = \"high\";\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, uploadResizeWidth, uploadResizeHeight);\n      ctx.drawImage(sourceImage, (uploadResizeWidth - width) / 2, (uploadResizeHeight - height) / 2, width, height);\n\n      // Convert the canvas to a data URL in PNG format\n      const options = [\n        canvas.toDataURL('image/jpeg', 0.92),\n        // Disabling webp because it doesn't work on iOS.\n        // canvas.toDataURL('image/webp', 0.92),\n        canvas.toDataURL('image/png')\n      ];\n      options.sort((a, b) => a.length - b.length);\n\n      this.handleChange('profileUrl', options[0]);\n    }\n\n    reader.onload = function(event) {\n      sourceImage.src = event.target.result;\n    };\n  }\n\n  async onFilesError(e, f) {\n    console.log(e, f);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <button className=\"float-right\" onClick={this.props.logOut}>Log out</button>\n          <Profile\n            accountId={this.props.app && this.props.app.accountId}\n            profileUrl={this.state.profileUrl}\n            displayName={this.state.displayName}\n            bio={this.state.bio}\n            defaultProfileUrl={anon}\n            onFetch={(profile) => this.init(profile)}\n          />\n        </div>\n        <hr/>\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"displayName\">Display Name</label>\n            <input placeholder=\"The REAL Satoshi\" id=\"displayName\" className=\"form-control\" disabled={!this.props.app} value={this.state.displayName} onChange={(e) => this.handleChange('displayName', e.target.value)} />\n          </div>\n          <label htmlFor=\"profileUrl\">Profile URL</label>\n          <div className=\"input-group\">\n            <input placeholder={\"https://metanear.com\" + anon} id=\"profileUrl\" className=\"form-control\" disabled={!this.props.app} value={this.state.profileUrl}\n                   onChange={(e) => this.handleChange('profileUrl', e.target.value)}/>\n            <div className=\"input-group-append\">\n              <Files\n                type=\"button\"\n                className='btn btn-outline-primary'\n                onChange={(f) => this.onFilesChange(f)}\n                onError={(e, f) => this.onFilesError(e, f)}\n                multiple={false}\n                accepts={['image/*']}\n                minFileSize={1}\n                clickable\n              >\n                Click to upload\n              </Files>\n            </div>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"bio\">Bio</label>\n            <textarea placeholder=\"I'm working on Bitcoin, so bankers can go home.\" id=\"bio\" className=\"form-control\" disabled={!this.props.app} value={this.state.bio} onChange={(e) => this.handleChange('bio', e.target.value)} />\n          </div>\n          <div className=\"form-group\">\n            <button\n                className=\"btn btn-primary\"\n                disabled={this.state.saving || !this.hasChanges()}\n                onClick={() => this.save()}\n            >\n              {this.state.saving && (\n                  <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n              )} Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport anon from \"../../assets/anon.png\";\nimport { Profile } from \"react-near-openweb\";\nimport { Channel, ChatContract } from \"./Channel\";\nimport './Chat.css';\n\nconst ProfileInlineStyle = {\n  profile: {\n    whiteSpace: 'nowrap',\n    display: 'inline-block',\n  },\n  profileImage: {\n    height: '2em',\n    width: '2em',\n    borderRadius: '50%',\n    verticalAlign: 'middle',\n    marginRight: '0.5em',\n  },\n  profileName: {\n    display: 'none',\n  },\n  profileDisplayName: {},\n  profileAccountId: {},\n};\n\nexport class ChatApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      appReady: false,\n      text: \"\",\n      channelId: \"public\",\n      sending: false,\n      currentMessage: null,\n    };\n    this.textInput = React.createRef();\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => {\n        this.setState({\n          appReady: true,\n        }, () => {\n          this.textInput.current.focus();\n        })\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  handleChange(key, value) {\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  async sendMessage() {\n    console.log(\"Sending chat message\");\n    let text = this.state.text;\n    this.setState({\n      sending: true,\n      text: \"\",\n      currentMessage: {\n        text,\n        senderId: this.props.app.accountId,\n        time: new Date().getTime(),\n      }\n    });\n    try {\n      let message = JSON.stringify({\n        ChatMessage: {\n          channel_id: this.state.channelId,\n          text,\n        }\n      });\n      await this.props.app.sendMessage(ChatContract, message);\n      text = \"\";\n    } catch (e) {\n      console.log(\"Failed to send the chat message\", e);\n    } finally {\n      this.setState({\n        text,\n        sending: false,\n        currentMessage: null,\n      });\n    };\n  }\n\n  onKeyDown(event) {\n    // 'keypress' event misbehaves on mobile so we track 'Enter' key via 'keydown' event\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendMessage();\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"chat-app h100 cflex\">\n        <div className=\"channels\">\n          <div className=\"current-channel\">#{this.state.channelId}</div>\n        </div>\n        <Channel channelId={this.state.channelId} app={this.props.app} currentMessage={this.state.currentMessage}/>\n        <br/>\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            {this.state.appReady && (<Profile accountId={this.props.app.accountId} defaultProfileUrl={anon} styles={ProfileInlineStyle}/>)}\n          </div>\n          <input ref={this.textInput}\n                 id=\"text\"\n                 placeholder={\"Message #\" + this.state.channelId}\n                 className=\"form-control form-control\"\n                 disabled={!this.state.appReady || this.state.sending}\n                 value={this.state.text}\n                 onKeyDown={(e) => this.onKeyDown(e)}\n                 onChange={(e) => this.handleChange('text', e.target.value)}/>\n          <div className=\"input-group-append\">\n            <button\n                className='btn btn-primary'\n                disabled={!this.state.appReady || this.state.sending}\n                onClick={() => this.sendMessage()}\n            >\n              {this.state.sending && (\n                  <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n              )} Send\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport encryptionOn from \"../assets/encryptionOn.png\";\nimport encryptionOff from \"../assets/encryptionOff.png\";\nimport { Profile } from \"react-near-openweb\";\n\nconst RE = \"Re: \";\nconst currentVersion = 2;\n\nexport class MailApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      receiverId: \"\",\n      subject: \"\",\n      content: \"\",\n      sending: false,\n      numLetters: 0,\n      unread: 0,\n      expandedId: -1,\n      profileFound: false,\n      profileLoading: false,\n      keyLoading: false,\n      theirPublicKey64: null,\n      inbox: [],\n    }\n    this.textarea = React.createRef();\n    this.keyCache = {};\n  }\n\n  modifyLetter(letter, messageId) {\n    if (messageId === undefined) {\n      if (!letter) {\n        return;\n      }\n      messageId = letter.messageId;\n    }\n    const inbox = this.state.inbox.filter((a) => a.messageId !== messageId);\n    if (letter) {\n      inbox.push(letter);\n    }\n    inbox.sort((a, b) => b.time - a.time);\n    const unread = inbox.reduce((acc, letter) => acc + (letter.read ? 0: 1), 0);\n    this.setState({\n      inbox,\n      unread,\n    });\n    this.props.onUnread(unread);\n  }\n\n  async migrateFrom(version) {\n    if (version === 0) {\n      console.log(\"Migrating from version #0\");\n      let num = 0;\n      try {\n        num = await this.props.app.get('numLetters');\n      } catch (e) {\n        // whatever. Probably died during migration.\n      }\n      const allMigrations = [];\n      for (let i = 0; i < num; ++i) {\n        allMigrations.push(this.props.app.get('letter_' + i).then((letter) => {\n          if (letter) {\n            return this.props.app.set('letter_' + i, letter, {encrypted: true}).then(() => {\n              console.log(\"Migrated letter #\" + i);\n            })\n          }\n          return Promise.resolve();\n        }).catch((e) => console.log(\"Can't migrate letter #\", i, e)));\n      }\n      await Promise.all(allMigrations);\n      await this.props.app.set('numLetters', num, { encrypted: true });\n      version++;\n    }\n    if (version === 1) {\n      console.log(\"Migrating from version #1\");\n      await this.props.app.storeEncryptionPublicKey();\n      version++;\n    }\n    await this.props.app.set('version', version, { encrypted: true });\n  }\n\n  async init() {\n    let version;\n    try {\n      version = await this.props.app.get('version', {encrypted: true}) || 0;\n    } catch (e) {\n      // likely mismatched keys\n      console.log(e);\n      return;\n    }\n    if (version < currentVersion) {\n      await this.migrateFrom(version);\n    }\n    const num = await this.props.app.get('numLetters', { encrypted: true }) || 0;\n    this.setState({\n      numLetters: num,\n    });\n    for (let i = Math.max(0, num - 10); i < num; ++i) {\n      this.props.app.get('letter_' + i, {encrypted: true}).then((letter) => this.modifyLetter(letter));\n    }\n    this.fetchMessages();\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => this.init());\n    }\n  }\n\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  async fetchKey(accountId) {\n    if (accountId in this.keyCache) {\n      return await this.keyCache[accountId];\n    } else {\n      console.log(\"Fetching key for \" + accountId);\n      this.keyCache[accountId] = this.props.app.getStoredEncryptionPublicKey(accountId, {}).catch((e) => false);\n      return await this.keyCache[accountId];\n    }\n  }\n\n  updateKey(profile) {\n    if (!this.props.app) {\n      return;\n    }\n    this.setState({\n      profileLoading: false,\n      profileFound: !!profile,\n    });\n    if (!profile) {\n      return;\n    }\n    this.setState({\n      keyLoading: true,\n    })\n    this.fetchKey(profile.accountId).then((theirPublicKey64) => {\n      this.setState({\n        keyLoading: false,\n        theirPublicKey64,\n      })\n    });\n  }\n\n  handleChange(key, value) {\n    const stateChange = {\n      [key]: value,\n    };\n    if (key === 'receiverId') {\n      value = value.toLowerCase().replace(/[^a-z0-9\\-_.]/, '');\n      stateChange[key] = value;\n      stateChange.profileLoading = true;\n      stateChange.theirPublicKey64 = false;\n    }\n    this.setState(stateChange);\n  }\n\n  async fetchMessages() {\n    if (!this.props.app) {\n      return;\n    }\n    if (this.fetchTimeoutId) {\n      clearTimeout(this.fetchTimeoutId);\n      this.fetchTimeoutId = null;\n    }\n    console.log(\"Fetching messages\");\n    const message = await this.props.app.pullMessage();\n    if (!message) {\n      this.fetchTimeoutId = setTimeout(() => { this.fetchMessages() }, 60 * 1000);\n      return;\n    }\n    try {\n      console.log(message);\n      let inner = JSON.parse(message.message);\n      const isEncrypted = inner.type === 'encrypted';\n      const fromAppId = inner.fromAppId || this.props.app.appId;\n      if (isEncrypted) {\n        const decryptedMessage = await this.props.app.decryptMessage(inner.content, {\n          accountId: message.sender,\n          appId: inner.fromAppId,\n        });\n        inner = JSON.parse(decryptedMessage);\n      }\n      if (inner.type === 'mail') {\n        const letter = {\n          messageId: this.state.numLetters,\n          isEncrypted,\n          fromAppId,\n          sender: message.sender,\n          subject: inner.subject,\n          content: inner.content,\n          time: Math.trunc(message.time / 1000000),\n        }\n        const newNumLetters = this.state.numLetters + 1;\n        this.setState({\n          numLetters: newNumLetters,\n        });\n\n        this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n          console.log(\"Saved the letter: \", letter);\n        });\n        this.props.app.set(\"numLetters\", newNumLetters, {encrypted: true}).then(() => {\n            console.log(\"Saved the new number of letters: \", newNumLetters);\n        });\n        this.modifyLetter(letter);\n      } else {\n        console.warn(\"Unknown message\", message);\n      }\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.fetchMessages()\n    }\n  }\n\n  async sendMail() {\n    if (!this.state.profileFound) {\n      return;\n    }\n    console.log(\"Sending mail\");\n    this.setState({\n      sending: true,\n    });\n    try {\n      let message = JSON.stringify({\n        type: \"mail\",\n        subject: this.state.subject,\n        content: this.state.content,\n      });\n      if (this.state.theirPublicKey64) {\n        const content = await this.props.app.encryptMessage(message, {\n          theirPublicKey64: this.state.theirPublicKey64,\n        });\n        message = JSON.stringify({\n          type: \"encrypted\",\n          fromAppId: this.props.app.appId,\n          content,\n        })\n      }\n      await this.props.app.sendMessage(this.state.receiverId, message);\n      this.setState({\n        subject: \"\",\n        content: \"\",\n      })\n    } catch (e) {\n      console.log(\"Failed to send the message\", e);\n    } finally {\n      this.setState({\n        sending: false,\n      });\n      setTimeout(() => this.fetchMessages(), 2000);\n    };\n  }\n\n  receiverClass() {\n    if (!this.state.receiverId || this.state.profileLoading) {\n      return \"form-control\";\n    } else if (this.state.profileFound) {\n      return \"form-control is-valid\";\n    } else {\n      return \"form-control is-invalid\";\n    }\n  }\n\n  replyTo(letter, displayName) {\n    this.handleChange(\"receiverId\", letter.sender);\n    this.setState({\n      subject: (letter.subject.startsWith(RE) ? \"\" : RE) + letter.subject,\n      content: [\n        \"\",\n        \"\",\n        [\"On\", new Date(letter.time).toLocaleDateString(), displayName, \"@\" + letter.sender, \"wrote:\"].join(' '),\n        ...letter.content.split(/\\r?\\n/).map(s => \"| \" + s)\n      ].join(\"\\n\"),\n    }, () => {\n      this.textarea.current.focus();\n      this.textarea.current.setSelectionRange(0, 0);\n      this.textarea.current.scrollLeft = 0;\n      this.textarea.current.scrollTop = 0;\n    });\n  }\n\n  selectLetter(letter) {\n    this.setState({\n      expandedId: (this.state.expandedId === letter.messageId) ? -1 : letter.messageId,\n    });\n    if (!letter.read) {\n      letter = JSON.parse(JSON.stringify(letter));\n      letter.read = true;\n      this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n        console.log(\"Saved the letter: \", letter);\n      });\n      this.modifyLetter(letter);\n    }\n  }\n\n  deleteLetter(letter) {\n    this.props.app.remove(\"letter_\" + letter.messageId).then(() => {\n      console.log(\"Deleted the letter: \", letter);\n    });\n    this.modifyLetter(null, letter.messageId);\n  }\n\n  render() {\n    const encryptionEnabled = this.state.theirPublicKey64;\n    const displayEncryptionIcon = this.state.profileFound && !this.state.keyLoading;\n    const encryptionAlt = encryptionEnabled ? \"Encryption is ON\" : \"Not secure! Encryption is OFF\";\n    const encryptionIcon = displayEncryptionIcon &&\n      <img className=\"encryption-icon\" src={encryptionEnabled ? encryptionOn : encryptionOff}\n          title={encryptionAlt} alt={encryptionAlt}/>;\n    const profile = <Profile accountId={this.state.receiverId} onFetch={(profile) => this.updateKey(profile)} defaultProfileUrl={anon}/>;\n    const inbox = this.state.inbox.map((letter, i) => (\n      <Letter\n        key={letter.messageId}\n        letter={letter}\n        expanded={letter.messageId === this.state.expandedId}\n        deleteLetter={(letter) => this.deleteLetter(letter)}\n        replyTo={(letter, displayName) => this.replyTo(letter, displayName)}\n        selectLetter={(letter) => this.selectLetter(letter)} />\n    ));\n    return (\n      <div>\n        Inbox <button className=\"btn btn-sm\" onClick={() => this.fetchMessages()}><span role=\"img\" aria-label=\"Refresh\">🔄</span></button>\n        <div>\n          {inbox}\n        </div>\n        <h3>Send</h3>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label className=\"sr-only\" htmlFor=\"toAccountId\">To Account ID</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">@</div>\n                </div>\n                <input type=\"text\" className={this.receiverClass()} id=\"toAccountId\" placeholder=\"To Account ID\" value={this.state.receiverId} disabled={!this.props.app} onChange={(e) => this.handleChange('receiverId', e.target.value)} />\n              </div>\n            </div>\n          </div>\n          {profile}\n        </div>\n        <div className=\"form-group\">\n          <label className=\"sr-only\" htmlFor=\"subject\">Subject</label>\n          <input type=\"text\" className=\"form-control\" id=\"subject\" placeholder=\"Subject\" disabled={!this.props.app} value={this.state.subject} onChange={(e) => this.handleChange('subject', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <textarea ref={this.textarea} id=\"content\" className=\"form-control\" rows=\"7\" disabled={!this.props.app} value={this.state.content} onChange={(e) => this.handleChange('content', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <button className={\"form-control form-control-lg btn \" + (displayEncryptionIcon && !encryptionEnabled ? \"btn-danger\" : \"btn-primary\")} disabled={!this.state.profileFound || this.state.sending} onClick={() => this.sendMail()}>\n            Send {encryptionIcon}</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport class Letter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: {\n        profileUrl: null,\n        displayName: '@' + props.letter.sender,\n      },\n    };\n  }\n\n  onClick() {\n    this.props.selectLetter(this.props.letter);\n  }\n\n  render() {\n    const profile = (\n      <div className=\"col-sm-6 col-md-4 col-lg-4 letter-profile\">\n        <Profile accountId={this.props.letter.sender} onFetch={(profile) => profile && this.setState({displayName: profile.displayName})} defaultProfileUrl={anon}/>\n      </div>\n    );\n    const subject = (\n      <div className=\"col-sm-4 col-md\">\n        <div className=\"letter-subject\">{this.props.letter.subject}</div>\n      </div>\n    );\n    const time = this.props.expanded ? (\n      <div className=\"col-sm-2 col-lg-2\">\n        <div className=\"letter-time\">{longTimeFormat(this.props.letter.time)}</div>\n      </div>\n    ) : (\n      <div className=\"col-sm-2 col-lg-1 d-none d-md-block\">\n        <div className=\"letter-time\">{timeFormat(this.props.letter.time)}</div>\n      </div>\n    );\n    if (this.props.expanded) {\n      return (\n        <div className=\"letter letter-expanded\">\n          <div className=\"row letter-expanded-header\" onClick={() => this.onClick()}>\n            {profile}\n            {subject}\n            {time}\n          </div>\n          <div className=\"letter-content-expanded\">\n            <pre>{this.props.letter.content}</pre>\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <button className=\"btn btn-primary\" onClick={() => this.props.replyTo(this.props.letter, this.state.displayName)}>Reply</button>\n              </div>\n              <div className=\"col-sm\">\n                <button className=\"btn btn-danger float-right\" onClick={() => this.props.deleteLetter(this.props.letter)}>DELETE THIS!</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={\"row letter letter-small\" + (this.props.letter.read ? \" letter-read\" : \" letter-unread\")} onClick={() => this.onClick()}>\n          {profile}\n          {subject}\n          <div className=\"col-sm d-none d-lg-block\">\n            <div className=\"letter-content\">{this.props.letter.content}</div>\n          </div>\n          {time}\n        </div>\n      );\n    }\n  }\n}\n\nfunction longTimeFormat(t) {\n  return new Date(t).toLocaleString();\n}\n\nfunction timeFormat(t) {\n  const d = new Date(t);\n  const now = new Date();\n  if (now.getDate() === d.getDate()) {\n    const hour = d.getHours() % 12;\n    const minute = d.getMinutes().toString().padStart(2, '0');\n    const daytime = d.getHours() >= 12 ? \"PM\" : \"AM\";\n    return `${hour}:${minute} ${daytime}`;\n  } else {\n    return d.toLocaleDateString();\n  }\n}\n","import React from 'react';\nimport * as nearlib from 'nearlib';\nimport { generateSeedPhrase } from 'near-seed-phrase';\n\nconst FaucetPrivateKey = 'ed25519:2Rtn6ms22rCRMgmGgLRSPPd6gYDCgWDuFrX6gERknSA8GKiCHE5L9Rksc1ihsSCDvMSptfbipzq29H7cDZhR1Ze3';\nconst FaucetName = 'meta';\nconst MinAccountIdLen = 2;\nconst MaxAccountIdLen = 64;\nconst ValidAccountRe = /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\nexport const AuthDataKey = \"meta-faucet-auth-data\";\n\nexport class PowFaucet extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            connected: false,\n            signedIn: false,\n            accountId: null,\n            newAccountId: \"\",\n            creating: false,\n            accountLoading: false,\n            newAccountExists: false,\n            computingProofOfWork: false,\n        };\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.initNear().then(() => {\n            this.mounted && this.setState({\n                connected: true,\n                signedIn: !!this._authData.accountId,\n                accountId: this._authData.accountId,\n            })\n        })\n    }\n\n    async initFaucet() {\n        let key = await this._keyStore.getKey(this._nearConfig.networkId, FaucetName);\n        if (!key) {\n            const keyPair = nearlib.KeyPair.fromString(FaucetPrivateKey);\n            await this._keyStore.setKey(this._nearConfig.networkId, FaucetName, keyPair);\n        }\n        const account = new nearlib.Account(this._near.connection, FaucetName);\n        this._faucetContract =  new nearlib.Contract(account, FaucetName, {\n            viewMethods: ['get_min_difficulty', 'get_account_suffix', 'get_num_created_accounts'],\n            changeMethods: ['create_account'],\n            sender: FaucetName\n        });\n        this._accountSuffix = await this._faucetContract.get_account_suffix();\n        this._minDifficulty = await this._faucetContract.get_min_difficulty();\n        this.mounted && this.setState({\n            numCreatedAccounts: await this._faucetContract.get_num_created_accounts(),\n        });\n        // console.log(JSON.stringify([...key.getPublicKey().data]));\n    }\n\n    async initNear() {\n        const nearConfig = {\n            networkId: 'default',\n            nodeUrl: 'https://rpc.nearprotocol.com',\n            contractName: FaucetName,\n            walletUrl: 'https://wallet.nearprotocol.com',\n        };\n        const keyStore = new nearlib.keyStores.BrowserLocalStorageKeyStore();\n        const near = await nearlib.connect(Object.assign({ deps: { keyStore } }, nearConfig));\n        this._keyStore = keyStore;\n        this._nearConfig = nearConfig;\n        this._near = near;\n\n        this._authData = JSON.parse(window.localStorage.getItem(AuthDataKey) || '{}');\n        await this.initFaucet();\n    }\n\n    handleChange(key, value) {\n        const stateChange = {\n            [key]: value,\n        };\n        if (key === 'newAccountId') {\n            value = value.toLowerCase().replace(/[^a-z0-9\\-_.]/, '');\n            stateChange[key] = value;\n            stateChange.newAccountExists = false;\n            if (this.isValidAccount(value)) {\n                stateChange.accountLoading = true;\n                this._near.connection.provider.query(`account/${value + this._accountSuffix}`, '').then((_a) => {\n                    if (this.state.newAccountId === value) {\n                        this.setState({\n                            accountLoading: false,\n                            newAccountExists: true,\n                        })\n                    }\n                }).catch((e) => {\n                    if (this.state.newAccountId === value) {\n                        this.setState({\n                            accountLoading: false,\n                            newAccountExists: false,\n                        })\n                    }\n                })\n            }\n        }\n        this.setState(stateChange);\n    }\n\n    isValidAccount(newAccountId) {\n        if (newAccountId.includes('.')) {\n            return false;\n        }\n        const accountId = newAccountId + this._accountSuffix;\n        return accountId.length >= MinAccountIdLen &&\n            accountId.length <= MaxAccountIdLen &&\n            accountId.match(ValidAccountRe);\n    }\n\n    newAccountClass() {\n        if (!this.state.newAccountId || this.state.accountLoading) {\n            return \"form-control form-control-large\";\n        } else if (!this.state.newAccountExists && this.isValidAccount(this.state.newAccountId)) {\n            return \"form-control form-control-large is-valid\";\n        } else {\n            return \"form-control form-control-large is-invalid\";\n        }\n    }\n\n    async computeProofOfWork(accountId, publicKey) {\n        let msg = [...new TextEncoder('utf-8').encode(accountId + ':')];\n        // curve\n        msg.push(0);\n        // key\n        msg.push(...publicKey.data);\n        // separator\n        msg.push(':'.charCodeAt(0));\n        // salt\n        msg.push(0, 0, 0, 0, 0, 0, 0, 0);\n        msg = new Uint8Array(msg);\n        const len = msg.length;\n        let bestDifficulty = 0;\n        for (let salt = 0; ; ++salt) {\n            // compute hash\n            const hashBuffer = new Uint8Array(await crypto.subtle.digest('SHA-256', msg));\n            // compute number of leading zero bits\n            let totalNumZeros = 0;\n            for (let i = 0; i < hashBuffer.length; ++i) {\n                let numZeros = Math.clz32(hashBuffer[i]) - 24;\n                totalNumZeros += numZeros;\n                if (numZeros < 8) {\n                    break;\n                }\n            }\n            // checking difficulty\n            if (totalNumZeros >= this._minDifficulty) {\n                this.setState({\n                    computingProofOfWork: false,\n                });\n                return salt;\n            } else if (totalNumZeros > bestDifficulty) {\n                bestDifficulty = totalNumZeros;\n                this.setState({\n                    proofOfWorkProgress: Math.trunc(bestDifficulty * 100 / this._minDifficulty),\n                    proofOfWorkDifficulty: bestDifficulty,\n                    proofOfWorkSalt: salt,\n                });\n            } else if (salt % 10000 === 0) {\n                this.setState({\n                    proofOfWorkSalt: salt\n                });\n            }\n            // incrementing salt\n            for (let i = len - 8; i < len; ++i) {\n                if (msg[i] === 255) {\n                    msg[i] = 0;\n                } else {\n                    ++msg[i];\n                    break;\n                }\n            }\n        }\n    }\n\n    async createAccount() {\n        this.setState({\n            creating: true,\n            computingProofOfWork: true,\n            proofOfWorkProgress: 0,\n            proofOfWorkDifficulty: 0,\n            proofOfWorkSalt: 0,\n        })\n        const newAccountId = this.state.newAccountId + this._accountSuffix;\n        const seed = generateSeedPhrase();\n        const newKeyPair = nearlib.KeyPair.fromString(seed.secretKey);\n        const salt = await this.computeProofOfWork(newAccountId, newKeyPair.getPublicKey());\n        await this._faucetContract.create_account({\n            account_id: newAccountId,\n            public_key: [0, ...newKeyPair.getPublicKey().data],\n            salt,\n        });\n        await this._keyStore.setKey(this._nearConfig.networkId, newAccountId, newKeyPair);\n        this._authData = {\n            accountId: newAccountId,\n            seed,\n        };\n        window.localStorage.setItem(AuthDataKey, JSON.stringify(this._authData));\n        this.setState({\n            signedIn: true,\n            accountId: newAccountId,\n            creating: false,\n            numCreatedAccounts: await this._faucetContract.get_num_created_accounts(),\n        })\n        this.props.onLogin(this._authData);\n    }\n\n    moveAccountToWallet() {\n        window.location = `https://wallet.nearprotocol.com/recover-with-link/${this._authData.accountId}/${this._authData.seed.seedPhrase}`;\n    }\n\n    logout() {\n        window.localStorage.removeItem(AuthDataKey);\n        this._authData = {};\n        this.setState({\n            signedIn: false,\n            accountId: null,\n            newAccountId: \"\",\n            creating: false,\n            accountLoading: false,\n            newAccountExists: false,\n            computingProofOfWork: false,\n        });\n    }\n\n    render() {\n        const content = !this.state.connected ? (\n            <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n        ) : (this.state.signedIn ? (\n            <div>\n                <h3>Hello, {this.state.accountId}</h3>\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-success\"\n                        onClick={() => this.moveAccountToWallet()}\n                    >\n                        Move account to NEAR Wallet\n                    </button>\n                </div>\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-danger\"\n                        onClick={() => this.logout()}\n                    >\n                        Logout from Faucet\n                    </button>\n                </div>\n            </div>\n        ) : (\n            <div>\n                <div className=\"form-group\">\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <div className=\"input-group-text\">{\"@\"}</div>\n                        </div>\n                        <input\n                            placeholder=\"bob\"\n                            id=\"accountId\"\n                            className={this.newAccountClass()}\n                            value={this.state.newAccountId}\n                            onChange={(e) => this.handleChange('newAccountId', e.target.value)}\n                            disabled={this.state.creating}\n                        />\n                        <div className=\"input-group-append\">\n                            <div className=\"input-group-text\">{this._accountSuffix}</div>\n                        </div>\n                    </div>\n                </div>\n                {this.state.newAccountExists && (\n                    <div className=\"alert alert-warning\" role=\"alert\">\n                        Account {'\"' + this.state.newAccountId + this._accountSuffix + '\"'} already exists!\n                    </div>\n                )}\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-primary\"\n                        disabled={this.state.creating || this.state.accountLoading || this.state.newAccountExists || !this.isValidAccount(this.state.newAccountId)}\n                        onClick={() => this.createAccount()}\n                    >\n                        {(this.state.creating || this.state.accountLoading) && (\n                            <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                        )} Create Account {this.isValidAccount(this.state.newAccountId) ? ('\"' + this.state.newAccountId + this._accountSuffix + '\"') : \"\"}\n                    </button>\n                </div>\n                {this.state.creating && (\n                    <div>\n                        {this.state.computingProofOfWork ? (\n                            <div>\n                                Computing Proof of Work. Done {this.state.proofOfWorkSalt} operations.\n                                <div className=\"progress\">\n                                    <div className=\"progress-bar\" role=\"progressbar\" style={{width: this.state.proofOfWorkProgress + '%'}} aria-valuenow={this.state.proofOfWorkProgress} aria-valuemin=\"0\"\n                                         aria-valuemax=\"100\">{this.state.proofOfWorkDifficulty} out of {this._minDifficulty}\n                                    </div>\n                                </div>\n                            </div>\n                        ) : (\n                            <div>\n                                Proof of Work is Done! Creating account {'\"' + this.state.newAccountId + this._accountSuffix + '\"'}\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        ));\n        return (\n            <div>\n                <h3>or create a new account</h3>\n                {content}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport nearlogo from './assets/gray_near_logo.svg';\nimport './css/App.css';\nimport * as nearlib from \"nearlib\";\nimport { OpenWebApp } from 'near-openweb-js';\nimport { ProfileApp } from \"./apps/ProfileApp\";\nimport { ChatApp } from \"./apps/Chat/ChatApp\";\nimport { MailApp } from \"./apps/MailApp\";\n// import { KeysApp } from \"./apps/KeysApp\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { PowFaucet, AuthDataKey}  from \"./components/PowFaucet\";\nimport {Channel} from \"./apps/Chat/Channel\";\n\nconst GAS = 2_000_000_000_000_000;\nconst TITLE = \"Meta NEAR - User-centric web\"\nconst DefaultTabIndexKey = \"metanearDefaultTabIndex\";\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: false,\n      apps: {},\n      logs: [],\n      mailUnread: 0,\n      chatUnread: 0,\n      loading: false,\n      defaultTabIndex: JSON.parse(window.localStorage.getItem(DefaultTabIndexKey) || '0'),\n      offlineChatApp: null,\n    }\n    this.signedInFlow = this.signedInFlow.bind(this);\n    this.requestSignIn = this.requestSignIn.bind(this);\n    this.requestSignOut = this.requestSignOut.bind(this);\n    this.signedOutFlow = this.signedOutFlow.bind(this);\n    this.checkSignIn = this.checkSignIn.bind(this);\n    this.initOpenWebApp = this.initOpenWebApp.bind(this);\n    window.nearlib = nearlib;\n  }\n\n  componentDidMount() {\n    this.checkSignIn();\n  }\n\n  async checkSignIn() {\n    let loggedIn = window.walletAccount.isSignedIn();\n    let authData = JSON.parse(window.localStorage.getItem(AuthDataKey) || '{}');\n    if (loggedIn || authData.accountId) {\n      await this.signedInFlow(authData);\n    } else {\n      this.signedOutFlow();\n    }\n  }\n\n  log(message) {\n    console.log(message);\n    this.setState({\n      logs: this.state.logs.concat([message])\n    })\n  }\n\n  async signedInFlow(authData) {\n    const accountId = authData.accountId || await this.props.wallet.getAccountId();\n    this.setState({\n      login: true,\n      loading: true,\n      accountId,\n    })\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    if (window.location.search.includes(\"all_keys\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    // Initializing our contract APIs by contract name and configuration.\n\n    this.log(\"Connecting to account...\");\n    const account = await new nearlib.Account(window.near.connection, accountId);\n    this.log(\"Querying state...\");\n    let state = await account.state();\n    /*\n    await new Promise((resolve, reject) =>{\n      setTimeout(() => {\n        resolve();\n      }, 5000);\n    })\n     */\n    console.log(state);\n    if (state.code_hash !== 'C8UmYSqATkuyhheJ7i7ryxPjfZL4nV8PfkovdMKitsmJ') {\n      this.log(\"Going to deploy the code\");\n      // no code. Need to deploy.\n      this.log(\"Downloading started...\");\n      let data = await fetch('/open_web.wasm');\n      let buf = await data.arrayBuffer();\n      this.log(\"Downloading done. Deploying contract...\");\n      await account.deployContract(new Uint8Array(buf));\n      if (state.code_hash === '11111111111111111111111111111111') {\n        this.log(\"Deploying done. Initializing contract...\");\n        // Gotta init it.\n        let contract = await new nearlib.Contract(account, accountId, {\n          viewMethods: [],\n          // Change methods can modify the state. But you don't receive the returned value when called.\n          changeMethods: ['new'],\n          // Sender is the account ID to initialize transactions.\n          sender: accountId\n        });\n        console.log(await contract.new());\n      }\n      this.log(\"The contract is deployed\");\n    }\n\n    const masterContract = await new nearlib.Contract(account, accountId, {\n      // View methods are read only. They don't modify the state, but usually return some value.\n      viewMethods: ['apps'],\n      // Change methods can modify the state. But you don't receive the returned value when called.\n      changeMethods: ['add_app_key', 'remove_app_key'],\n      // Sender is the account ID to initialize transactions.\n      sender: accountId\n    });\n\n    this.masterContract = masterContract;\n    window.masterContract = masterContract;\n    this.log(\"Fetching authorized apps...\");\n    console.log(\"Apps:\", await masterContract.apps());\n\n    // this.initOpenWebApp = this.initOpenWebApp.bind(this);\n\n    this.log(\"Initializing local apps...\");\n    const apps = {\n      profile: await this.initOpenWebApp('profile', accountId),\n      chat: await this.initOpenWebApp('chat', accountId),\n      mail: await this.initOpenWebApp('mail', accountId),\n      // keys: await this.initOpenWebApp('keys', accountId)\n    };\n    window.apps = apps;\n    this.apps = apps;\n    this.setState({\n      apps,\n      loading: false,\n    })\n  }\n\n  async initOpenWebApp(appId, accountId) {\n    this.log(\"Initializing app: \" + appId + \" ...\");\n    const app = new OpenWebApp(appId, accountId, window.nearConfig);\n    await app.init();\n    if (!await app.ready()) {\n      let pk = await app.getAccessPublicKey();\n      this.log(\"Authorizing app for key \" + pk.toString() + \" ...\");\n      const serializedPk = await app.getSerializedAccessPublicKey();\n      const args = {\n        public_key: [...serializedPk],\n        app_id: appId,\n      };\n      await this.masterContract.add_app_key(args, GAS);\n      await app.onKeyAdded();\n    }\n    return app;\n  }\n\n  async requestSignIn() {\n    const appTitle = 'Open Web Home';\n    await this.props.wallet.requestSignIn(\n      \"\",\n      appTitle\n    )\n  }\n\n  requestSignOut() {\n    this.props.wallet.signOut();\n    setTimeout(this.signedOutFlow, 500);\n    console.log(\"after sign out\", this.props.wallet.isSignedIn())\n  }\n\n\n  async signedOutFlow() {\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    this.setState({\n      login: false,\n    })\n    if (!this.state.offlineChatApp) {\n      const app = new OpenWebApp(\"chat\", null, window.nearConfig);\n      await app.init();\n      this.setState({\n        offlineChatApp: app,\n      })\n    }\n  }\n\n  selectTab = (index) => {\n    window.localStorage.setItem(DefaultTabIndexKey, JSON.stringify(index));\n    this.setState({\n      defaultTabIndex: index,\n    })\n  }\n\n  render() {\n    const unread = this.state.mailUnread + this.state.chatUnread;\n    document.title = (unread ? `(${unread}) ` : \"\") + TITLE;\n    if (!this.state.login) {\n      return <div className=\"App-header\">\n        <div>\n          <div className=\"image-wrapper\">\n            <img className=\"logo\" src={nearlogo} alt=\"NEAR logo\"/>\n          </div>\n          <div>\n            <button\n                className=\"btn btn-primary\"\n                onClick={this.requestSignIn}>Log in with NEAR Wallet</button>\n          </div>\n          <PowFaucet onLogin={this.signedInFlow}/>\n          <hr/>\n          <div>\n            <h3>To join #public chat </h3>\n            <Channel channelId=\"public\" app={this.state.offlineChatApp}/>\n          </div>\n        </div>\n      </div>\n    } else if (this.state.loading) {\n      return <div className=\"loading-div\">\n        <div className=\"spinner-grow loading-spinner\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <pre className=\"text-left\">\n          {this.state.logs.join(\"\\n\")}\n        </pre>\n      </div>\n    } else {\n      return <div className={\"h100 apps\" + (this.state.loading ? \" d-none\" : \"\")}>\n        <Tabs className=\"h100 cflex\" forceRenderTabPanel={true} defaultIndex={this.state.defaultTabIndex} onSelect={(i) => this.selectTab(i)}>\n          <TabList>\n            <Tab>Profile</Tab>\n            <Tab>Public Chat {this.state.chatUnread ? `(${this.state.chatUnread})` : \"\"}</Tab>\n            <Tab>Mail {this.state.mailUnread ? `(${this.state.mailUnread})` : \"\"}</Tab>\n            {/*<Tab>Keys</Tab>*/}\n          </TabList>\n\n          <TabPanel>\n            <ProfileApp app={this.state.apps.profile} logOut={this.requestSignOut}/>\n          </TabPanel>\n          <TabPanel style={{flexGrow: '1'}}>\n            <ChatApp app={this.state.apps.chat} onUnread={(chatUnread) => this.setState({chatUnread})}/>\n          </TabPanel>\n          <TabPanel>\n            <MailApp app={this.state.apps.mail} onUnread={(mailUnread) => this.setState({mailUnread})}/>\n          </TabPanel>\n          {/*<TabPanel>\n            <KeysApp app={this.state.apps.keys}/>\n          </TabPanel>*/}\n        </Tabs>\n      </div>\n    }\n  }\n}\n","import React from \"react\";\nimport queryString from 'query-string';\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    const values = queryString.parse(this.props.location.search);\n    let {app_id, pub_key} = values;\n    if (app_id && pub_key) {\n      this.state = {\n        authorized:false,\n        new_app_id:app_id,\n        new_pub_key:pub_key\n      };\n    } else {\n      this.state = {\n        authorized:false,\n        new_app_id:\"\",\n        new_pub_key:\"\"\n      }\n    }\n  }\n\n componentDidMount() {\n    if (!this.props.loading && this.state.new_app_id && this.state.new_pub_key) {\n      this.props.initOpenWebApp(this.state.new_app_id, this.state.new_pub_key)\n        .then(res => {\n          this.setState({\n            authorized: true\n          })\n        });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      // this.init();\n    }\n  }\n  \n  // async fetchProfile(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  // async registerNewApp(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  render() {\n    return (\n      <div>\n        {this.state.authorized ? \n        <div>\n          <p>App <strong>{this.state.new_app_id}</strong> was added</p>\n          <p> Using the public key: {this.state.new_pub_key} </p>\n        </div> :\n        \"You need pass a key in order to add an app\"\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport { Home } from './Home';\nimport { Auth } from './Auth';\n\nclass Router extends Component {\n  render() {\n    return (\n      <HashRouter basename={process.env.PUBLIC_URL} hashType=\"noslash\">\n        <Switch>\n          <Route exact path=\"/\" component={() => <Home {...this.props}/>} />\n          <Route path=\"/auth\" component={() => <Auth {...this.props}/>} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport getConfig from './near/config.js';\nimport * as nearlib from 'nearlib';\n\n// Initializing contract\nasync function InitContract() {\n    window.nearConfig = getConfig('development')\n\n    // Initializing connection to the NEAR DevNet.\n    window.near = await nearlib.connect(Object.assign({ deps: { keyStore: new nearlib.keyStores.BrowserLocalStorageKeyStore() } }, window.nearConfig));\n    \n    // Needed to access wallet login\n    window.walletAccount = new nearlib.WalletAccount(window.near);\n    \n    // Getting the Account ID. If unauthorized yet, it's just empty string.\n    window.accountId = window.walletAccount.getAccountId();\n\n}\n\nwindow.nearInitPromise = InitContract().then(() => {\n    ReactDOM.render(<Router contract={window.contract} wallet={window.walletAccount}/>,\n      document.getElementById('root')\n    );\n  }).catch(console.error)\n","import React from \"react\";\nimport { ChatMessage } from \"./ChatMessage\";\n\nexport const ChatContract = 'metanear-chat';\n\nconst FetchMessagesLimit = 10;\nconst MinTimeDiffForMetaMs = 5 * 60 * 1000;\n\nexport class Channel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            initialized: false,\n            appReady: false,\n            messages: [],\n        };\n        this.channelId = null;\n        this.channelHash = null;\n        this.cachedRanges = null;\n        this.cachedMessages = {};\n        this.fetchingMessages = false;\n        this.fetchTimeoutId = null;\n        this.channelInnerRef = React.createRef();\n        this.mounted = false;\n    }\n\n    async loadCache(channelId) {\n        const textEncoder = new TextEncoder('utf-8');\n        const buf = textEncoder.encode('c:' + channelId);\n\n        this.channelId = channelId;\n        this.cachedMessages = {};\n        this.channelHash =  Buffer.from(await crypto.subtle.digest('SHA-256', buf)).toString('base64');\n\n        this.cachedRanges = JSON.parse(window.localStorage.getItem(this.channelHash + ':cachedRanges') || \"null\") || []\n        this.cachedRanges.forEach((r) => {\n            for (let i = r.first; i < r.last; ++i) {\n                this.cachedMessages[i] = JSON.parse(window.localStorage.getItem(this.channelHash + ':m:' + i) || \"null\");\n            }\n        });\n        this.updateState(true);\n    }\n\n    scrollDown() {\n        this.channelInnerRef.current.scrollTop = this.channelInnerRef.current.scrollHeight;\n    }\n\n    updateState(scrollDown) {\n        if (!this.mounted) {\n            return;\n        }\n        this.setState({\n            messages: Object.values(this.cachedMessages)\n        }, () => {\n            if (scrollDown)  {\n                this.scrollDown();\n            }\n        })\n    }\n\n    maybeInit() {\n        if (this.props.channelId && this.channelId !== this.props.channelId) {\n            const cache = this.loadCache(this.props.channelId);\n            if (this.state.appReady) {\n                cache.then(() => {\n                    this.fetchNewMessages();\n                });\n            }\n        }\n        if (this.props.app && !this.state.initialized) {\n            this.setState({\n                initialized: true,\n                appReady: true,\n            });\n            this.fetchNewMessages();\n        }\n    }\n\n    componentDidMount() {\n        this.maybeInit()\n        this.mounted = true;\n    }\n\n    componentDidUpdate(prevProps) {\n        this.maybeInit()\n        if (this.props.currentMessage) {\n            setTimeout(() => {\n                this.scrollDown();\n            }, 10);\n        }\n        if (!this.props.currentMessage && prevProps.currentMessage) {\n            this.fetchNewMessages();\n        }\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        if (this.fetchTimeoutId) {\n            clearTimeout(this.fetchTimeoutId);\n            this.fetchTimeoutId = null;\n        }\n    }\n\n\n    addNewMessage(channelId, message) {\n        if (channelId !== this.channelId) {\n            return;\n        }\n        const index = message.index;\n        if (index in this.cachedMessages) {\n            return;\n        }\n        this.cachedMessages[index] = message;\n        window.localStorage.setItem(this.channelHash + ':m:' + index, JSON.stringify(message));\n\n        this.cachedRanges.push({\n            first: index,\n            last: index + 1,\n        });\n        this.cachedRanges.sort((a, b) => a.first - b.first);\n        this.cachedRanges = this.cachedRanges.reduce((rs, r) => {\n            if (r.first === r.last) {\n                return rs;\n            }\n            if (!rs.length) {\n                rs.push(r);\n            }\n            if (rs[rs.length - 1].last === r.first) {\n                rs[rs.length - 1].last = r.last;\n            }\n            return rs;\n        }, []);\n        window.localStorage.setItem(this.channelHash + ':cachedRanges', JSON.stringify(this.cachedRanges));\n    }\n\n    async fetchMessages(channelId, fromIndex, toIndex) {\n        fromIndex = Math.max(fromIndex, toIndex - FetchMessagesLimit);\n        let messages = await this.props.app.getFrom(ChatContract, JSON.stringify({\n            ChannelMessages: {\n                channel_id: channelId,\n                from_index: fromIndex,\n                limit: toIndex - fromIndex,\n            }\n        }), {});\n        messages.messages.forEach((m, i) => {\n          this.addNewMessage(channelId, {\n              index: fromIndex + i,\n              senderId: m.sender_id,\n              text: m.text,\n              time: m.time,\n          });\n        })\n    }\n\n    async fetchNewMessages() {\n        if (this.fetchingMessages) {\n            return;\n        }\n        try {\n            this.fetchingMessages = true;\n            if (this.fetchTimeoutId) {\n                clearTimeout(this.fetchTimeoutId);\n                this.fetchTimeoutId = null;\n            }\n            console.log(\"Fetching chat messages\");\n            const channel = this.channelId;\n            let channelStatus = await this.props.app.getFrom(ChatContract, JSON.stringify({\n                ChannelStatus: {\n                    channel_id: channel,\n                }\n            }), {});\n            let numChannelMessages = channelStatus.num_messages;\n            let lastNumMessages = this.cachedRanges.length ? this.cachedRanges[this.cachedRanges.length - 1].last : 0;\n            if (lastNumMessages < numChannelMessages) {\n                await this.fetchMessages(channel, lastNumMessages, numChannelMessages);\n                this.updateState(true);\n            }\n        }\n        finally {\n            this.fetchingMessages = false;\n            if (this.mounted) {\n                this.fetchTimeoutId = setTimeout(() => this.fetchNewMessages(), 2000);\n            }\n        }\n    }\n\n    render() {\n        let lastMessage = null;\n        return (\n            <div className=\"channel fgrow\" ref={this.channelInnerRef}>\n                {this.state.messages.map((message) => {\n                    const chatMessage = <ChatMessage\n                        key={this.channelHash + message.index}\n                        message={message}\n                        onReply={() => this.onReply(message)}\n                        showMeta={!lastMessage || message.senderId !== lastMessage.senderId || message.time - lastMessage.time > MinTimeDiffForMetaMs}\n                    />;\n                    lastMessage = message;\n                    return chatMessage;\n                })}\n                {this.props.currentMessage && (\n                    <ChatMessage\n                        key={\"currentMessage\"}\n                        message={this.props.currentMessage}\n                        pending={true}\n                        showMeta={true}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n","import * as nearlib from \"nearlib\";\nimport * as nacl from \"tweetnacl\";\n\nconst GAS = 2000000000000000;\n\nconst encryptionKey = \"encryptionKey\";\n\n/**\n  a class representing the OpenWebApp API\n\n  this API supports local contract methods\n  - get: gets a value from local storage\n  - set: sets a value on local storage\n  - remove: deletes a value from local storage\n\n  and remote contract methods\n  - pull: reads a message from a remote contract\n  - post / send: sends a message to a remote contract\n */\nclass OpenWebApp {\n  constructor(appId, accountId, nearConfig) {\n    this.appId = appId;\n    this.accountId = accountId;\n    this._nearConfig = nearConfig;\n    this.blocking = Promise.resolve();\n    this.parseEncryptionKey();\n    window.nacl = nacl;\n    window.Buffer = Buffer;\n  }\n\n  /**\n    read private key from local storage\n    - if found, recreate the related key pair\n    - if not found, create a new key pair and save it to local storage\n   */\n  parseEncryptionKey() {\n    const keyKey = \"enc_key:\" + this.accountId + \":\" + this.appId + \":\";\n    let key = localStorage.getItem(keyKey);\n    if (key) {\n      const buf = Buffer.from(key, 'base64');\n      if (buf.length !== nacl.box.secretKeyLength) {\n        throw new Error(\"Given secret key has wrong length\");\n      }\n      key = nacl.box.keyPair.fromSecretKey(buf);\n    } else {\n      key = new nacl.box.keyPair();\n      localStorage.setItem(keyKey, Buffer.from(key.secretKey).toString('base64'));\n    }\n    this._key = key;\n  }\n\n  /**\n   updates local secret key to the new given secret key and stores it to local storage.\n   @param newSecretKey64 base64 encoded secret key\n   */\n  updateEncryptionKey(newSecretKey64) {\n    const buf = Buffer.from(newSecretKey64, 'base64');\n    if (buf.length !== nacl.box.secretKeyLength) {\n      throw new Error(\"Given secret key has wrong length\");\n    }\n    const key = nacl.box.keyPair.fromSecretKey(buf);\n    this._key = key;\n    const keyKey = \"enc_key:\" + this.accountId + \":\" + this.appId + \":\";\n    localStorage.setItem(keyKey, Buffer.from(key.secretKey).toString('base64'));\n  }\n\n  async _innerInit() {\n    this._keyStore = new nearlib.keyStores.BrowserLocalStorageKeyStore(\n      localStorage, \"app:\" + this.appId + \":\",\n    );\n    this._near = await nearlib.connect(Object.assign({ deps: { keyStore:  this._keyStore } }, this._nearConfig));\n    this._account = new nearlib.Account(this._near.connection, this.accountId);\n    this._contract = new nearlib.Contract(this._account, this.accountId, {\n      viewMethods: ['get', 'apps', 'num_messages'],\n      changeMethods: ['set', 'remove', 'pull_message', 'send_message'],\n      sender: this.accountId\n    });\n    this._networkId = this._nearConfig.networkId;\n    return true;\n  }\n\n  /**\n    initialize the client-side application with a BrowserLocalStorageKeyStore\n    and a connection to the NEAR platform, binding OpenWebContract methods:\n\n    - get, set, remove: local invocation methods for controlling the state of local applications\n    - pull_message, send_message: remote invocation methods for communicating with contracts of other users\n    - apps, num_messages: convenience methods for listing all apps on the OpenWeb and messages for a specific app\n   */\n  async init() {\n    return this._init || (this._init = this._innerInit());\n  }\n\n  /**\n    helper method to check if the the user is logged in with the app\n   */\n  async ready() {\n    await this.init();\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    return !!key;\n  }\n\n  /**\n   helper method to wait until the the user is logged in with the app\n   */\n  async waitReady() {\n    return await this.ready() || this._ready || (this._ready = (new Promise((resolve) => {\n      this._keyAwait = resolve;\n    })));\n  }\n\n  /**\n    produce a public key on the user account\n    @return {string} existing (or create new) public key for the current account\n   */\n  async getAccessPublicKey() {\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    if (key) {\n      return key.getPublicKey();\n    }\n    if (this._tmpKey) {\n      return this._tmpKey.getPublicKey();\n    }\n    const accessKey = nearlib.KeyPair.fromRandom('ed25519');\n    this._tmpKey = accessKey;\n    return accessKey.getPublicKey();\n  }\n\n  /**\n    returns a public key on the user account in binary borsh serialized format\n    @returns {Promise<Uint8Array>} public access key\n   */\n  async getSerializedAccessPublicKey() {\n    return nearlib.utils.serialize.serialize(nearlib.transactions.SCHEMA, await this.getAccessPublicKey());\n  }\n\n  /**\n    returns the encryption key stored under given accountId\n\n    @param {string|null} accountId optional accountId to get stored encryption key (your account by default).\n    @param {object} options to specify:\n    - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n    - {string} `appId` the name of the app. Same app by default.\n    @returns {Promise<string|null>} the stored encryption key in base64 format or null\n   */\n  async getStoredEncryptionPublicKey(accountId, options) {\n    return this.getFrom(accountId || this.accountId, encryptionKey, options)\n  }\n\n\n  getEncryptionPublicKey() {\n    return Buffer.from(this._key.publicKey).toString('base64')\n  }\n\n  async storeEncryptionPublicKey() {\n    return this.set(encryptionKey, this.getEncryptionPublicKey());\n  }\n\n  /**\n    capture new keys in the keystore\n   */\n  async onKeyAdded() {\n    if (!this._tmpKey) {\n      throw new Error('The key is not initialized yet');\n    }\n    await this._keyStore.setKey(this._networkId, this.accountId, this._tmpKey);\n    this._tmpKey = null;\n    if (this._keyAwait) {\n      this._keyAwait();\n    }\n  }\n\n  /**\n    enforces that the app is ready\n\n    @returns {Promise<void>}\n   */\n  async forceReady() {\n    if (!await this.ready()) {\n      throw new Error('Not ready yet');\n    }\n  }\n\n  /**\n    wrap a call in a Promise for async handling?\n\n    @param {Function} call the function to be wrapped in a Promise\n    @return {Promise} the Promise to return\n   */\n  wrappedCall(call) {\n    this.blocking = this.blocking.then(() => call()).catch(() => call());\n    return this.blocking;\n  }\n\n  /**\n    unbox encrypted messages with our secret key\n    @param {string} msg64 encrypted message encoded as Base64\n    @return {string} decoded contents of the box\n   */\n  decryptSecretBox(msg64) {\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.secretbox.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.secretbox.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.secretbox.open(box, nonce, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n    box an unencrypted message with our secret key\n    @param {string} str the message to wrap in a box\n    @return {string} base64 encoded box of incoming message\n   */\n  encryptSecretBox(str) {\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.secretbox.nonceLength);\n    const box = nacl.secretbox(buf, nonce, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.secretbox.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.secretbox.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n   unbox encrypted messages with our secret key\n   @param {string} msg64 encrypted message encoded as Base64\n   @param {Uint8Array} theirPublicKey the public key to use to verify the message\n   @return {string} decoded contents of the box\n   */\n  decryptBox(msg64, theirPublicKey) {\n    if (theirPublicKey.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Given encryption public key is invalid.\");\n    }\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.box.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.box.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.box.open(box, nonce, theirPublicKey, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n   box an unencrypted message with their public key and sign it with our secret key\n   @param {string} str the message to wrap in a box\n   @param {Uint8Array} theirPublicKey the public key to use to encrypt the message\n   @returns {string} base64 encoded box of incoming message\n   */\n  encryptBox(str, theirPublicKey) {\n    if (theirPublicKey.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Given encryption public key is invalid.\");\n    }\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.box.nonceLength);\n    const box = nacl.box(buf, nonce, theirPublicKey, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.box.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.box.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n    get data from a local app.  apps can decide whether or not to encrypt their contents\n\n    @param {string} key the key used to store a value in the app\n    @param {object} options to specify:\n    - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n    - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned by the local app\n   */\n  async get(key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    let str = await this._contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    get a value from a remote app installed on another account\n\n    @param {string} accountId account from which to get a value\n    @param {string} key the key to use to identify the value\n    @param {object} options to specify:\n     - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n     - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned from the remote app\n   */\n  async getFrom(accountId, key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    const account = new nearlib.Account(this._near.connection, accountId);\n    const contract = new nearlib.Contract(account, accountId, {\n      viewMethods: ['get'],\n      changeMethods: [],\n      sender: this.accountId\n    });\n\n    let str = await contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    return a list of installed apps\n    @return {object} collection of installed apps\n   */\n  async apps() {\n    return await this._contract.apps();\n  }\n\n  /**\n    set a value in local storage\n\n    @param {string} key identifier for the value to be set\n    @param {string} value the value to be set\n    @param {object} options to specify:\n      - {bool} `encrypted` flag indicating whether to encrypt (box) the value. Default false.\n   */\n  async set(key, value, options) {\n    await this.forceReady();\n    options = Object.assign({\n      encrypted: false,\n    }, options);\n    await this.wrappedCall(() => this._contract.set({\n      key,\n      value: options.encrypted ? this.encryptSecretBox(JSON.stringify(value)) : JSON.stringify(value),\n    }, GAS));\n  }\n\n  /**\n    remove a key-value pair from local storage\n\n    @param {string} key key to be removed\n   */\n  async remove(key) {\n    await this.forceReady();\n    await this.wrappedCall(() => this._contract.remove({\n      key,\n    }, GAS));\n  }\n\n  /**\n    retrieve a message\n\n    @return {any} return async? pull from local storage, null if not found\n   */\n  async pullMessage() {\n    await this.forceReady();\n    if (await this._contract.num_messages({app_id: this.appId}) > 0) {\n      return await this.wrappedCall(() => this._contract.pull_message({}, GAS));\n    } else {\n      return null;\n    }\n  }\n\n  async getTheirPublicKey(options) {\n    options = Object.assign({\n      accountId: null,\n      theirPublicKey: null,\n      theirPublicKey64: null,\n      encryptionKey,\n      appId: this.appId,\n    }, options);\n    if (options.theirPublicKey) {\n      return options.theirPublicKey;\n    }\n    if (!options.theirPublicKey64) {\n      if (!options.accountId) {\n        throw new Error(\"Either accountId or theirPublicKey64 has to be provided\");\n      }\n      options.theirPublicKey64 = await this.getFrom(options.accountId, options.encryptionKey, {\n        appId: options.appId,\n      });\n    }\n    if (!options.theirPublicKey64) {\n      throw new Error(\"Their app doesn't provide the encryption public key.\");\n    }\n    const buf = Buffer.from(options.theirPublicKey64, 'base64');\n    if (buf.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Their encryption public key is invalid.\");\n    }\n    const theirPublicKey = new Uint8Array(nacl.box.publicKeyLength);\n    theirPublicKey.set(buf);\n    return theirPublicKey;\n  }\n\n  /**\n   * Encrypts given content. Typical usage: encryptMessage(\"hello world\", {accountId: bla})\n   *\n   * @param {string} content The message to encrypt\n   * @param options\n   * @returns {Promise<string>}\n   */\n  async encryptMessage(content, options) {\n    const theirPublicKey = await this.getTheirPublicKey(options);\n    return this.encryptBox(content, theirPublicKey);\n  }\n\n  async decryptMessage(msg64, options) {\n    const theirPublicKey = await this.getTheirPublicKey(options);\n    return this.decryptBox(msg64, theirPublicKey);\n  }\n\n  /**\n    send a message to another account\n\n    @param {string} receiverId account id which will receive the message\n    @param {string} message the content of the message\n    @param {object} options to specify:\n      - {string} `appId` the app ID to receive the message. Same app by default.\n   */\n  async sendMessage(receiverId, message, options) {\n    this.forceReady();\n    options = Object.assign({\n      appId: this.appId,\n    }, options);\n    await this.wrappedCall(() => this._contract.send_message({\n      receiver_id: receiverId,\n      app_id: options.appId,\n      message,\n    }, GAS));\n  }\n}\n\nexport {encryptionKey, OpenWebApp}\n"],"sourceRoot":""}