{"version":3,"sources":["../../../near-openweb-js/src/openweb.js","apps/Chat/Channel.js","apps/Chat/ChatMessage.js","assets/gray_near_logo.svg","assets/encryptionOn.png","assets/encryptionOff.png","near/config.js","assets/anon.png","apps/ProfileApp.js","apps/Chat/ChatApp.js","apps/MailApp.js","components/PowFaucet.js","Home.js","Auth.js","Router.js","index.js"],"names":["encryptionKey","OpenWebApp","appId","accountId","nearConfig","this","_nearConfig","blocking","Promise","resolve","parseEncryptionKey","window","nacl","Buffer","keyKey","key","localStorage","getItem","buf","from","length","secretKeyLength","Error","keyPair","fromSecretKey","setItem","secretKey","toString","_key","newSecretKey64","_keyStore","nearlib","BrowserLocalStorageKeyStore","Object","assign","deps","keyStore","_near","_account","connection","_contract","viewMethods","changeMethods","sender","_networkId","networkId","_init","_innerInit","init","getKey","ready","_ready","_keyAwait","getPublicKey","_tmpKey","accessKey","fromRandom","serialize","SCHEMA","getAccessPublicKey","options","getFrom","publicKey","set","getEncryptionPublicKey","setKey","call","then","catch","msg64","nonce","Uint8Array","nonceLength","copy","box","decodedBuf","open","str","fullBuf","theirPublicKey","publicKeyLength","encrypted","get","app_id","JSON","parse","decryptSecretBox","account","contract","apps","value","forceReady","wrappedCall","encryptSecretBox","stringify","remove","num_messages","pull_message","theirPublicKey64","content","getTheirPublicKey","encryptBox","decryptBox","receiverId","message","send_message","receiver_id","ChatContract","Channel","props","state","initialized","appReady","messages","channelId","channelHash","cachedRanges","cachedMessages","fetchingMessages","fetchTimeoutId","channelInnerRef","React","createRef","textEncoder","TextEncoder","encode","crypto","subtle","digest","forEach","r","i","first","last","updateState","scrollDown","setState","values","current","scrollTop","scrollHeight","cache","loadCache","fetchNewMessages","app","waitReady","maybeInit","prevProps","currentMessage","index","push","sort","a","b","reduce","rs","fromIndex","toIndex","Math","max","ChannelMessages","channel_id","from_index","limit","m","addNewMessage","senderId","sender_id","text","time","clearTimeout","console","log","channel","ChannelStatus","channelStatus","numChannelMessages","lastNumMessages","fetchMessages","setTimeout","lastMessage","className","ref","map","chatMessage","onReply","showMeta","pending","Component","ProfileMessageStyle","profile","display","ChatMessage","displayName","profileUrl","anon","p","t","d","Date","getDate","toLocaleTimeString","hour","minute","toLocaleDateString","formatTime","styles","onFetch","onProfile","src","alt","role","aria-hidden","module","exports","getConfig","env","nodeUrl","contractName","walletUrl","keyPath","process","HOME","masterAccount","Cookies","require","cookieConfig","getJSON","nearPages","ProfileApp","keys","acc","chainValues","saving","hasChanges","newState","some","promises","all","f","sourceImage","Image","reader","FileReader","readAsDataURL","onload","canvas","document","createElement","aspect","naturalWidth","naturalHeight","width","round","height","ctx","getContext","imageSmoothingQuality","fillStyle","fillRect","drawImage","toDataURL","handleChange","event","target","result","e","onClick","logOut","bio","defaultProfileUrl","htmlFor","placeholder","id","disabled","onChange","type","onFilesChange","onError","onFilesError","multiple","accepts","minFileSize","clickable","save","ProfileInlineStyle","whiteSpace","profileImage","borderRadius","verticalAlign","marginRight","profileName","profileDisplayName","profileAccountId","ChatApp","sending","textInput","focus","getTime","sendMessage","preventDefault","stopPropagation","onKeyDown","MailApp","subject","numLetters","unread","expandedId","profileFound","profileLoading","keyLoading","inbox","textarea","keyCache","letter","messageId","undefined","filter","read","onUnread","version","num","allMigrations","storeEncryptionPublicKey","migrateFrom","modifyLetter","getStoredEncryptionPublicKey","fetchKey","stateChange","toLowerCase","replace","pullMessage","inner","isEncrypted","fromAppId","decryptMessage","decryptedMessage","trunc","newNumLetters","warn","error","encryptMessage","startsWith","join","split","s","setSelectionRange","scrollLeft","encryptionEnabled","displayEncryptionIcon","encryptionAlt","encryptionIcon","encryptionOn","encryptionOff","title","updateKey","expanded","deleteLetter","replyTo","selectLetter","aria-label","receiverClass","rows","sendMail","Letter","toLocaleString","getHours","getMinutes","padStart","daytime","timeFormat","ValidAccountRe","AuthDataKey","PowFaucet","connected","signedIn","newAccountId","creating","accountLoading","newAccountExists","computingProofOfWork","mounted","initNear","_authData","fromString","_faucetContract","get_account_suffix","_accountSuffix","get_min_difficulty","_minDifficulty","get_num_created_accounts","numCreatedAccounts","near","initFaucet","isValidAccount","provider","query","_a","includes","match","msg","data","charCodeAt","len","bestDifficulty","salt","hashBuffer","totalNumZeros","numZeros","clz32","proofOfWorkProgress","proofOfWorkDifficulty","proofOfWorkSalt","seed","generateSeedPhrase","newKeyPair","computeProofOfWork","create_account","account_id","public_key","onLogin","location","seedPhrase","removeItem","moveAccountToWallet","logout","newAccountClass","createAccount","style","aria-valuenow","aria-valuemin","aria-valuemax","Home","requestSignOut","wallet","signOut","signedOutFlow","isSignedIn","search","origin","pathname","login","selectTab","defaultTabIndex","logs","mailUnread","chatUnread","loading","signedInFlow","bind","requestSignIn","checkSignIn","initOpenWebApp","loggedIn","walletAccount","authData","concat","getAccountId","code_hash","fetch","arrayBuffer","deployContract","new","masterContract","chat","mail","pk","getSerializedAccessPublicKey","serializedPk","args","add_app_key","onKeyAdded","forceRenderTabPanel","defaultIndex","onSelect","flexGrow","nearlogo","Auth","queryString","pub_key","authorized","new_app_id","new_pub_key","res","Router","basename","hashType","exact","path","component","nearInitPromise","InitContract","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d75c8a6f.chunk.js","sourcesContent":["import * as nearlib from \"nearlib\";\nimport * as nacl from \"tweetnacl\";\n\nconst GAS = 2000000000000000;\n\nconst encryptionKey = \"encryptionKey\";\n\n/**\n  a class representing the OpenWebApp API\n\n  this API supports local contract methods\n  - get: gets a value from local storage\n  - set: sets a value on local storage\n  - remove: deletes a value from local storage\n\n  and remote contract methods\n  - pull: reads a message from a remote contract\n  - post / send: sends a message to a remote contract\n */\nclass OpenWebApp {\n  constructor(appId, accountId, nearConfig) {\n    this.appId = appId;\n    this.accountId = accountId;\n    this._nearConfig = nearConfig;\n    this.blocking = Promise.resolve();\n    this.parseEncryptionKey();\n    window.nacl = nacl;\n    window.Buffer = Buffer;\n  }\n\n  /**\n    read private key from local storage\n    - if found, recreate the related key pair\n    - if not found, create a new key pair and save it to local storage\n   */\n  parseEncryptionKey() {\n    const keyKey = \"enc_key:\" + this.accountId + \":\" + this.appId + \":\";\n    let key = localStorage.getItem(keyKey);\n    if (key) {\n      const buf = Buffer.from(key, 'base64');\n      if (buf.length !== nacl.box.secretKeyLength) {\n        throw new Error(\"Given secret key has wrong length\");\n      }\n      key = nacl.box.keyPair.fromSecretKey(buf);\n    } else {\n      key = new nacl.box.keyPair();\n      localStorage.setItem(keyKey, Buffer.from(key.secretKey).toString('base64'));\n    }\n    this._key = key;\n  }\n\n  /**\n   updates local secret key to the new given secret key and stores it to local storage.\n   @param newSecretKey64 base64 encoded secret key\n   */\n  updateEncryptionKey(newSecretKey64) {\n    const buf = Buffer.from(newSecretKey64, 'base64');\n    if (buf.length !== nacl.box.secretKeyLength) {\n      throw new Error(\"Given secret key has wrong length\");\n    }\n    const key = nacl.box.keyPair.fromSecretKey(buf);\n    this._key = key;\n    const keyKey = \"enc_key:\" + this.accountId + \":\" + this.appId + \":\";\n    localStorage.setItem(keyKey, Buffer.from(key.secretKey).toString('base64'));\n  }\n\n  async _innerInit() {\n    this._keyStore = new nearlib.keyStores.BrowserLocalStorageKeyStore(\n      localStorage, \"app:\" + this.appId + \":\",\n    );\n    this._near = await nearlib.connect(Object.assign({ deps: { keyStore:  this._keyStore } }, this._nearConfig));\n    this._account = new nearlib.Account(this._near.connection, this.accountId);\n    this._contract = new nearlib.Contract(this._account, this.accountId, {\n      viewMethods: ['get', 'apps', 'num_messages'],\n      changeMethods: ['set', 'remove', 'pull_message', 'send_message'],\n      sender: this.accountId\n    });\n    this._networkId = this._nearConfig.networkId;\n    return true;\n  }\n\n  /**\n    initialize the client-side application with a BrowserLocalStorageKeyStore\n    and a connection to the NEAR platform, binding OpenWebContract methods:\n\n    - get, set, remove: local invocation methods for controlling the state of local applications\n    - pull_message, send_message: remote invocation methods for communicating with contracts of other users\n    - apps, num_messages: convenience methods for listing all apps on the OpenWeb and messages for a specific app\n   */\n  async init() {\n    return this._init || (this._init = this._innerInit());\n  }\n\n  /**\n    helper method to check if the the user is logged in with the app\n   */\n  async ready() {\n    await this.init();\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    return !!key;\n  }\n\n  /**\n   helper method to wait until the the user is logged in with the app\n   */\n  async waitReady() {\n    return await this.ready() || this._ready || (this._ready = (new Promise((resolve) => {\n      this._keyAwait = resolve;\n    })));\n  }\n\n  /**\n    produce a public key on the user account\n    @return {string} existing (or create new) public key for the current account\n   */\n  async getAccessPublicKey() {\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    if (key) {\n      return key.getPublicKey();\n    }\n    if (this._tmpKey) {\n      return this._tmpKey.getPublicKey();\n    }\n    const accessKey = nearlib.KeyPair.fromRandom('ed25519');\n    this._tmpKey = accessKey;\n    return accessKey.getPublicKey();\n  }\n\n  /**\n    returns a public key on the user account in binary borsh serialized format\n    @returns {Promise<Uint8Array>} public access key\n   */\n  async getSerializedAccessPublicKey() {\n    return nearlib.utils.serialize.serialize(nearlib.transactions.SCHEMA, await this.getAccessPublicKey());\n  }\n\n  /**\n    returns the encryption key stored under given accountId\n\n    @param {string|null} accountId optional accountId to get stored encryption key (your account by default).\n    @param {object} options to specify:\n    - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n    - {string} `appId` the name of the app. Same app by default.\n    @returns {Promise<string|null>} the stored encryption key in base64 format or null\n   */\n  async getStoredEncryptionPublicKey(accountId, options) {\n    return this.getFrom(accountId || this.accountId, encryptionKey, options)\n  }\n\n\n  getEncryptionPublicKey() {\n    return Buffer.from(this._key.publicKey).toString('base64')\n  }\n\n  async storeEncryptionPublicKey() {\n    return this.set(encryptionKey, this.getEncryptionPublicKey());\n  }\n\n  /**\n    capture new keys in the keystore\n   */\n  async onKeyAdded() {\n    if (!this._tmpKey) {\n      throw new Error('The key is not initialized yet');\n    }\n    await this._keyStore.setKey(this._networkId, this.accountId, this._tmpKey);\n    this._tmpKey = null;\n    if (this._keyAwait) {\n      this._keyAwait();\n    }\n  }\n\n  /**\n    enforces that the app is ready\n\n    @returns {Promise<void>}\n   */\n  async forceReady() {\n    if (!await this.ready()) {\n      throw new Error('Not ready yet');\n    }\n  }\n\n  /**\n    wrap a call in a Promise for async handling?\n\n    @param {Function} call the function to be wrapped in a Promise\n    @return {Promise} the Promise to return\n   */\n  wrappedCall(call) {\n    this.blocking = this.blocking.then(() => call()).catch(() => call());\n    return this.blocking;\n  }\n\n  /**\n    unbox encrypted messages with our secret key\n    @param {string} msg64 encrypted message encoded as Base64\n    @return {string} decoded contents of the box\n   */\n  decryptSecretBox(msg64) {\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.secretbox.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.secretbox.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.secretbox.open(box, nonce, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n    box an unencrypted message with our secret key\n    @param {string} str the message to wrap in a box\n    @return {string} base64 encoded box of incoming message\n   */\n  encryptSecretBox(str) {\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.secretbox.nonceLength);\n    const box = nacl.secretbox(buf, nonce, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.secretbox.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.secretbox.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n   unbox encrypted messages with our secret key\n   @param {string} msg64 encrypted message encoded as Base64\n   @param {Uint8Array} theirPublicKey the public key to use to verify the message\n   @return {string} decoded contents of the box\n   */\n  decryptBox(msg64, theirPublicKey) {\n    if (theirPublicKey.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Given encryption public key is invalid.\");\n    }\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.box.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.box.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.box.open(box, nonce, theirPublicKey, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n   box an unencrypted message with their public key and sign it with our secret key\n   @param {string} str the message to wrap in a box\n   @param {Uint8Array} theirPublicKey the public key to use to encrypt the message\n   @returns {string} base64 encoded box of incoming message\n   */\n  encryptBox(str, theirPublicKey) {\n    if (theirPublicKey.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Given encryption public key is invalid.\");\n    }\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.box.nonceLength);\n    const box = nacl.box(buf, nonce, theirPublicKey, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.box.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.box.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n    get data from a local app.  apps can decide whether or not to encrypt their contents\n\n    @param {string} key the key used to store a value in the app\n    @param {object} options to specify:\n    - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n    - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned by the local app\n   */\n  async get(key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    let str = await this._contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    get a value from a remote app installed on another account\n\n    @param {string} accountId account from which to get a value\n    @param {string} key the key to use to identify the value\n    @param {object} options to specify:\n     - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n     - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned from the remote app\n   */\n  async getFrom(accountId, key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    const account = new nearlib.Account(this._near.connection, accountId);\n    const contract = new nearlib.Contract(account, accountId, {\n      viewMethods: ['get'],\n      changeMethods: [],\n      sender: this.accountId\n    });\n\n    let str = await contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    return a list of installed apps\n    @return {object} collection of installed apps\n   */\n  async apps() {\n    return await this._contract.apps();\n  }\n\n  /**\n    set a value in local storage\n\n    @param {string} key identifier for the value to be set\n    @param {string} value the value to be set\n    @param {object} options to specify:\n      - {bool} `encrypted` flag indicating whether to encrypt (box) the value. Default false.\n   */\n  async set(key, value, options) {\n    await this.forceReady();\n    options = Object.assign({\n      encrypted: false,\n    }, options);\n    await this.wrappedCall(() => this._contract.set({\n      key,\n      value: options.encrypted ? this.encryptSecretBox(JSON.stringify(value)) : JSON.stringify(value),\n    }, GAS));\n  }\n\n  /**\n    remove a key-value pair from local storage\n\n    @param {string} key key to be removed\n   */\n  async remove(key) {\n    await this.forceReady();\n    await this.wrappedCall(() => this._contract.remove({\n      key,\n    }, GAS));\n  }\n\n  /**\n    retrieve a message\n\n    @return {any} return async? pull from local storage, null if not found\n   */\n  async pullMessage() {\n    await this.forceReady();\n    if (await this._contract.num_messages({app_id: this.appId}) > 0) {\n      return await this.wrappedCall(() => this._contract.pull_message({}, GAS));\n    } else {\n      return null;\n    }\n  }\n\n  async getTheirPublicKey(options) {\n    options = Object.assign({\n      accountId: null,\n      theirPublicKey: null,\n      theirPublicKey64: null,\n      encryptionKey,\n      appId: this.appId,\n    }, options);\n    if (options.theirPublicKey) {\n      return options.theirPublicKey;\n    }\n    if (!options.theirPublicKey64) {\n      if (!options.accountId) {\n        throw new Error(\"Either accountId or theirPublicKey64 has to be provided\");\n      }\n      options.theirPublicKey64 = await this.getFrom(options.accountId, options.encryptionKey, {\n        appId: options.appId,\n      });\n    }\n    if (!options.theirPublicKey64) {\n      throw new Error(\"Their app doesn't provide the encryption public key.\");\n    }\n    const buf = Buffer.from(options.theirPublicKey64, 'base64');\n    if (buf.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Their encryption public key is invalid.\");\n    }\n    const theirPublicKey = new Uint8Array(nacl.box.publicKeyLength);\n    theirPublicKey.set(buf);\n    return theirPublicKey;\n  }\n\n  /**\n   * Encrypts given content. Typical usage: encryptMessage(\"hello world\", {accountId: bla})\n   *\n   * @param {string} content The message to encrypt\n   * @param options\n   * @returns {Promise<string>}\n   */\n  async encryptMessage(content, options) {\n    const theirPublicKey = await this.getTheirPublicKey(options);\n    return this.encryptBox(content, theirPublicKey);\n  }\n\n  async decryptMessage(msg64, options) {\n    const theirPublicKey = await this.getTheirPublicKey(options);\n    return this.decryptBox(msg64, theirPublicKey);\n  }\n\n  /**\n    send a message to another account\n\n    @param {string} receiverId account id which will receive the message\n    @param {string} message the content of the message\n    @param {object} options to specify:\n      - {string} `appId` the app ID to receive the message. Same app by default.\n   */\n  async sendMessage(receiverId, message, options) {\n    this.forceReady();\n    options = Object.assign({\n      appId: this.appId,\n    }, options);\n    await this.wrappedCall(() => this._contract.send_message({\n      receiver_id: receiverId,\n      app_id: options.appId,\n      message,\n    }, GAS));\n  }\n}\n\nexport {encryptionKey, OpenWebApp}\n","import React from \"react\";\nimport { ChatMessage } from \"./ChatMessage\";\n\nexport const ChatContract = 'metanear-chat';\n\nconst FetchMessagesLimit = 10;\nconst MinTimeDiffForMetaMs = 5 * 60 * 1000;\n\nexport class Channel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            initialized: false,\n            appReady: false,\n            messages: [],\n        };\n        this.channelId = null;\n        this.channelHash = null;\n        this.cachedRanges = null;\n        this.cachedMessages = {};\n        this.fetchingMessages = false;\n        this.fetchTimeoutId = null;\n        this.channelInnerRef = React.createRef();\n    }\n\n    async loadCache(channelId) {\n        const textEncoder = new TextEncoder('utf-8');\n        const buf = textEncoder.encode('c:' + channelId);\n\n        this.channelId = channelId;\n        this.cachedMessages = {};\n        this.channelHash =  Buffer.from(await crypto.subtle.digest('SHA-256', buf)).toString('base64');\n\n        this.cachedRanges = JSON.parse(window.localStorage.getItem(this.channelHash + ':cachedRanges') || \"null\") || []\n        this.cachedRanges.forEach((r) => {\n            for (let i = r.first; i < r.last; ++i) {\n                this.cachedMessages[i] = JSON.parse(window.localStorage.getItem(this.channelHash + ':m:' + i) || \"null\");\n            }\n        });\n        this.updateState(true);\n    }\n\n    updateState(scrollDown) {\n        this.setState({\n            messages: Object.values(this.cachedMessages)\n        }, () => {\n            if (scrollDown) {\n                this.channelInnerRef.current.scrollTop = this.channelInnerRef.current.scrollHeight;\n            }\n        })\n    }\n\n    maybeInit() {\n        if (this.props.channelId && this.channelId !== this.props.channelId) {\n            const cache = this.loadCache(this.props.channelId);\n            if (this.state.appReady) {\n                cache.then(() => {\n                    this.fetchNewMessages();\n                });\n            }\n        }\n        if (this.props.app && !this.state.initialized) {\n            this.setState({\n                initialized: true,\n            });\n            this.props.app.waitReady().then(() => {\n                this.setState({\n                    appReady: true,\n                });\n                this.fetchNewMessages();\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.maybeInit()\n    }\n\n    componentDidUpdate(prevProps) {\n        this.maybeInit()\n        if (!this.props.currentMessage && prevProps.currentMessage) {\n            this.fetchNewMessages();\n        }\n    }\n\n    addNewMessage(channelId, message) {\n        if (channelId !== this.channelId) {\n            return;\n        }\n        const index = message.index;\n        if (index in this.cachedMessages) {\n            return;\n        }\n        this.cachedMessages[index] = message;\n        window.localStorage.setItem(this.channelHash + ':m:' + index, JSON.stringify(message));\n\n        this.cachedRanges.push({\n            first: index,\n            last: index + 1,\n        });\n        this.cachedRanges.sort((a, b) => a.first - b.first);\n        this.cachedRanges = this.cachedRanges.reduce((rs, r) => {\n            if (r.first === r.last) {\n                return rs;\n            }\n            if (!rs.length) {\n                rs.push(r);\n            }\n            if (rs[rs.length - 1].last === r.first) {\n                rs[rs.length - 1].last = r.last;\n            }\n            return rs;\n        }, []);\n        window.localStorage.setItem(this.channelHash + ':cachedRanges', JSON.stringify(this.cachedRanges));\n    }\n\n    async fetchMessages(channelId, fromIndex, toIndex) {\n        fromIndex = Math.max(fromIndex, toIndex - FetchMessagesLimit);\n        let messages = await this.props.app.getFrom(ChatContract, JSON.stringify({\n            ChannelMessages: {\n                channel_id: channelId,\n                from_index: fromIndex,\n                limit: toIndex - fromIndex,\n            }\n        }), {});\n        messages.messages.forEach((m, i) => {\n          this.addNewMessage(channelId, {\n              index: fromIndex + i,\n              senderId: m.sender_id,\n              text: m.text,\n              time: m.time,\n          });\n        })\n    }\n\n    async fetchNewMessages() {\n        if (this.fetchingMessages) {\n            return;\n        }\n        try {\n            this.fetchingMessages = true;\n            if (this.fetchTimeoutId) {\n                clearTimeout(this.fetchTimeoutId);\n                this.fetchTimeoutId = null;\n            }\n            console.log(\"Fetching chat messages\");\n            const channel = this.channelId;\n            let channelStatus = await this.props.app.getFrom(ChatContract, JSON.stringify({\n                ChannelStatus: {\n                    channel_id: channel,\n                }\n            }), {});\n            let numChannelMessages = channelStatus.num_messages;\n            let lastNumMessages = this.cachedRanges.length ? this.cachedRanges[this.cachedRanges.length - 1].last : 0;\n            if (lastNumMessages < numChannelMessages) {\n                await this.fetchMessages(channel, lastNumMessages, numChannelMessages);\n                this.updateState();\n            }\n        }\n        finally {\n            this.fetchingMessages = false;\n            this.fetchTimeoutId = setTimeout(() => this.fetchNewMessages(), 2000);\n        }\n    }\n\n    render() {\n        let lastMessage = null;\n        return (\n            <div className=\"channel fgrow\" ref={this.channelInnerRef}>\n                {this.state.messages.map((message) => {\n                    const chatMessage = <ChatMessage\n                        key={this.channelHash + message.index}\n                        message={message}\n                        onReply={() => this.onReply(message)}\n                        showMeta={!lastMessage || message.senderId !== lastMessage.senderId || message.time - lastMessage.time > MinTimeDiffForMetaMs}\n                    />;\n                    lastMessage = message;\n                    return chatMessage;\n                })}\n                {this.props.currentMessage && (\n                    <ChatMessage\n                        key={\"currentMessage\"}\n                        message={this.props.currentMessage}\n                        pending={true}\n                        showMeta={true}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport anon from \"../../assets/anon.png\";\nimport {Profile} from \"react-near-openweb\";\n\nconst ProfileMessageStyle = {\n    profile: {\n        display: 'none',\n    },\n};\n\nconst formatTime = (t) => {\n    const d = new Date(t);\n    const c = new Date();\n    if (c.getDate() === d.getDate()) {\n        return d.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n    } else {\n        return d.toLocaleDateString()\n    }\n}\n\nexport class ChatMessage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayName: \"\",\n            profileUrl: anon,\n        };\n    }\n\n\n    onProfile(p) {\n        this.setState({\n            displayName: (p && p.displayName) || \"\",\n            profileUrl: (p && p.profileUrl) || anon,\n        })\n    }\n\n    render() {\n        const message = this.props.message;\n        const content = message.text;\n        const senderId = message.senderId;\n        const time = formatTime(message.time);\n        const p = this.props.showMeta && <Profile accountId={senderId} styles={ProfileMessageStyle} onFetch={(p) => this.onProfile(p)}/>;\n        return (\n            <div className={\"chat-message\" + (this.props.pending ? \" chat-message-pending\" : \"\") + (!this.props.showMeta ? \" chat-message-no-meta\" : \"\")}>\n                {p}\n                <img className=\"chat-message-profile\" src={this.state.profileUrl} alt={`Profile @${senderId}`}/>\n                <div className=\"chat-message-content\">\n                    <div className=\"chat-message-meta\">\n                        <div className=\"chat-message-sender-name\">{this.state.displayName || (\"@\" + senderId)}</div>\n                        {this.state.displayName && <div className=\"chat-message-sender-id\">{\"(@\" + senderId + \")\"}</div>}\n                        {this.props.pending ?\n                            <div className=\"chat-message-time\"><span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span> sending</div> :\n                            <div className=\"chat-message-time\">{time}</div>\n                        }\n                    </div>\n                    {content}\n                </div>\n            </div>\n        )\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/gray_near_logo.55517b93.svg\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOn.23e3b306.png\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOff.475ce496.png\";","(function() {\n    const CONTRACT_NAME = 'react-template'; /* TODO: fill this in!*/\n    const DEFAULT_ENV = 'development'; \n    \n    function getConfig(env) {\n        switch (env) {\n\n        case 'production':\n        case 'development':\n            return {\n                networkId: 'default',\n                nodeUrl: 'https://rpc.nearprotocol.com',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://wallet.nearprotocol.com',\n            };\n        case 'staging':\n            return {\n                networkId: 'staging',\n                nodeUrl: 'https://staging-rpc.nearprotocol.com/',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://near-wallet-staging.onrender.com',\n            };\n        case 'local':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                keyPath: `${process.env.HOME}/.near/validator_key.json`,\n                walletUrl: 'http://localhost:4000/wallet',\n                contractName: CONTRACT_NAME,\n            };\n        case 'test':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'test-remote':\n        case 'ci':\n            return {\n                networkId: 'shared-test',\n                nodeUrl: 'http://shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'ci-staging':\n            return {\n                networkId: 'shared-test-staging',\n                nodeUrl: 'http://staging-shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        default:\n            throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n        }\n    }\n    \n    let Cookies = require('js-cookie');\n    const cookieConfig = typeof Cookies != 'undefined' && Cookies.getJSON('fiddleConfig');\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = getConfig;\n    } else {\n        window.nearConfig =  cookieConfig && cookieConfig.nearPages ? cookieConfig : getConfig(DEFAULT_ENV);\n    }\n})();\n","module.exports = __webpack_public_path__ + \"static/media/anon.5cbbd243.png\";","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport Files from \"react-files\";\nimport { Profile } from \"react-near-openweb\";\n\nconst uploadResizeWidth = 96;\nconst uploadResizeHeight = 96;\n\nexport class ProfileApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const keys = [\n      \"displayName\",\n      \"profileUrl\",\n      \"bio\",\n    ];\n    this.state = keys.reduce((acc, key) => {\n      acc[key] = \"\";\n      acc.chainValues[key] = null;\n      return acc;\n    }, {\n      keys,\n      chainValues: {},\n      initialized: false,\n      saving: false,\n      hasChanges: false,\n      appReady: false,\n    });\n  }\n\n  async init(profile) {\n    if (!profile) {\n      return;\n    }\n    const newState = this.state.keys.reduce((state, key) => {\n      state[key] = profile[key] || \"\";\n      state.chainValues[key] = state[key];\n      return state;\n    }, {\n      chainValues: {}\n    });\n    this.setState(newState);\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => {\n        this.setState({\n          appReady: true,\n        })\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  handleChange(key, value) {\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  hasChanges() {\n    return this.state.keys.some(key => this.state.chainValues[key] !== this.state[key]);\n  }\n\n  async save() {\n    this.setState({\n      saving: true,\n    });\n    console.log(\"Saving\");\n    const chainValues = Object.assign({}, this.state.chainValues);\n    const promises = [];\n    this.state.keys.forEach(key => {\n      if (this.state.chainValues[key] !== this.state[key]) {\n        chainValues[key] = this.state[key];\n        promises.push(this.props.app.set(key, this.state[key]).then(() => {\n          console.log(\"Updated key `\" + key + \"` to value `\" + this.state[key] + '`');\n        }));\n      }\n    });\n    Promise.all(promises).then(() => {\n      this.setState({\n        chainValues,\n        saving: false,\n      })\n    });\n  }\n\n  async onFilesChange(f) {\n    let sourceImage = new Image();\n    let reader = new FileReader();\n\n    reader.readAsDataURL(f[0]);\n\n    sourceImage.onload = () => {\n      // Create a canvas with the desired dimensions\n      let canvas = document.createElement(\"canvas\");\n      const aspect = sourceImage.naturalWidth / sourceImage.naturalHeight;\n      const width = Math.round(uploadResizeWidth * Math.max(1, aspect));\n      const height = Math.round(uploadResizeHeight * Math.max(1, 1 / aspect));\n      canvas.width = uploadResizeWidth;\n      canvas.height = uploadResizeHeight;\n      const ctx = canvas.getContext(\"2d\");\n\n      // Scale and draw the source image to the canvas\n      ctx.imageSmoothingQuality = \"high\";\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, uploadResizeWidth, uploadResizeHeight);\n      ctx.drawImage(sourceImage, (uploadResizeWidth - width) / 2, (uploadResizeHeight - height) / 2, width, height);\n\n      // Convert the canvas to a data URL in PNG format\n      const options = [\n        canvas.toDataURL('image/jpeg', 0.92),\n        // Disabling webp because it doesn't work on iOS.\n        // canvas.toDataURL('image/webp', 0.92),\n        canvas.toDataURL('image/png')\n      ];\n      options.sort((a, b) => a.length - b.length);\n\n      this.handleChange('profileUrl', options[0]);\n    }\n\n    reader.onload = function(event) {\n      sourceImage.src = event.target.result;\n    };\n  }\n\n  async onFilesError(e, f) {\n    console.log(e, f);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <button className=\"float-right\" onClick={this.props.logOut}>Log out</button>\n          <Profile\n            accountId={this.props.app && this.props.app.accountId}\n            profileUrl={this.state.profileUrl}\n            displayName={this.state.displayName}\n            bio={this.state.bio}\n            defaultProfileUrl={anon}\n            onFetch={(profile) => this.init(profile)}\n          />\n        </div>\n        <hr/>\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"displayName\">Display Name</label>\n            <input placeholder=\"The REAL Satoshi\" id=\"displayName\" className=\"form-control\" disabled={!this.props.app} value={this.state.displayName} onChange={(e) => this.handleChange('displayName', e.target.value)} />\n          </div>\n          <label htmlFor=\"profileUrl\">Profile URL</label>\n          <div className=\"input-group\">\n            <input placeholder={\"https://metanear.com\" + anon} id=\"profileUrl\" className=\"form-control\" disabled={!this.props.app} value={this.state.profileUrl}\n                   onChange={(e) => this.handleChange('profileUrl', e.target.value)}/>\n            <div className=\"input-group-append\">\n              <Files\n                type=\"button\"\n                className='btn btn-outline-primary'\n                onChange={(f) => this.onFilesChange(f)}\n                onError={(e, f) => this.onFilesError(e, f)}\n                multiple={false}\n                accepts={['image/*']}\n                minFileSize={1}\n                clickable\n              >\n                Click to upload\n              </Files>\n            </div>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"bio\">Bio</label>\n            <textarea placeholder=\"I'm working on Bitcoin, so bankers can go home.\" id=\"bio\" className=\"form-control\" disabled={!this.props.app} value={this.state.bio} onChange={(e) => this.handleChange('bio', e.target.value)} />\n          </div>\n          <div className=\"form-group\">\n            <button\n                className=\"btn btn-primary\"\n                disabled={this.state.saving || !this.hasChanges()}\n                onClick={() => this.save()}\n            >\n              {this.state.saving && (\n                  <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n              )} Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport anon from \"../../assets/anon.png\";\nimport { Profile } from \"react-near-openweb\";\nimport { Channel, ChatContract } from \"./Channel\";\nimport './Chat.css';\n\nconst ProfileInlineStyle = {\n  profile: {\n    whiteSpace: 'nowrap',\n    display: 'inline-block',\n  },\n  profileImage: {\n    height: '2em',\n    width: '2em',\n    borderRadius: '50%',\n    verticalAlign: 'middle',\n    marginRight: '0.5em',\n  },\n  profileName: {\n    display: 'none',\n  },\n  profileDisplayName: {},\n  profileAccountId: {},\n};\n\nexport class ChatApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      appReady: false,\n      text: \"\",\n      channelId: \"public\",\n      sending: false,\n      currentMessage: null,\n    };\n    this.textInput = React.createRef();\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => {\n        this.setState({\n          appReady: true,\n        }, () => {\n          this.textInput.current.focus();\n        })\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  handleChange(key, value) {\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  async sendMessage() {\n    console.log(\"Sending chat message\");\n    let text = this.state.text;\n    this.setState({\n      sending: true,\n      text: \"\",\n      currentMessage: {\n        text,\n        senderId: this.props.app.accountId,\n        time: new Date().getTime(),\n      }\n    });\n    try {\n      let message = JSON.stringify({\n        ChatMessage: {\n          channel_id: this.state.channelId,\n          text,\n        }\n      });\n      await this.props.app.sendMessage(ChatContract, message);\n      text = \"\";\n    } catch (e) {\n      console.log(\"Failed to send the chat message\", e);\n    } finally {\n      this.setState({\n        text,\n        sending: false,\n        currentMessage: null,\n      });\n    };\n  }\n\n  onKeyDown(event) {\n    // 'keypress' event misbehaves on mobile so we track 'Enter' key via 'keydown' event\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendMessage();\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"chat-app h100 cflex\">\n        <div className=\"channels\">\n          <div className=\"current-channel\">#{this.state.channelId}</div>\n        </div>\n        <Channel channelId={this.state.channelId} app={this.props.app} currentMessage={this.state.currentMessage}/>\n        <br/>\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            {this.state.appReady && (<Profile accountId={this.props.app.accountId} defaultProfileUrl={anon} styles={ProfileInlineStyle}/>)}\n          </div>\n          <input ref={this.textInput}\n                 id=\"text\"\n                 placeholder={\"Message #\" + this.state.channelId}\n                 className=\"form-control form-control\"\n                 disabled={!this.state.appReady || this.state.sending}\n                 value={this.state.text}\n                 onKeyDown={(e) => this.onKeyDown(e)}\n                 onChange={(e) => this.handleChange('text', e.target.value)}/>\n          <div className=\"input-group-append\">\n            <button\n                className='btn btn-primary'\n                disabled={!this.state.appReady || this.state.sending}\n                onClick={() => this.sendMessage()}\n            >\n              {this.state.sending && (\n                  <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n              )} Send\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport encryptionOn from \"../assets/encryptionOn.png\";\nimport encryptionOff from \"../assets/encryptionOff.png\";\nimport { Profile } from \"react-near-openweb\";\n\nconst RE = \"Re: \";\nconst currentVersion = 2;\n\nexport class MailApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      receiverId: \"\",\n      subject: \"\",\n      content: \"\",\n      sending: false,\n      numLetters: 0,\n      unread: 0,\n      expandedId: -1,\n      profileFound: false,\n      profileLoading: false,\n      keyLoading: false,\n      theirPublicKey64: null,\n      inbox: [],\n    }\n    this.textarea = React.createRef();\n    this.keyCache = {};\n  }\n\n  modifyLetter(letter, messageId) {\n    if (messageId === undefined) {\n      if (!letter) {\n        return;\n      }\n      messageId = letter.messageId;\n    }\n    const inbox = this.state.inbox.filter((a) => a.messageId !== messageId);\n    if (letter) {\n      inbox.push(letter);\n    }\n    inbox.sort((a, b) => b.time - a.time);\n    const unread = inbox.reduce((acc, letter) => acc + (letter.read ? 0: 1), 0);\n    this.setState({\n      inbox,\n      unread,\n    });\n    this.props.onUnread(unread);\n  }\n\n  async migrateFrom(version) {\n    if (version === 0) {\n      console.log(\"Migrating from version #0\");\n      let num = 0;\n      try {\n        num = await this.props.app.get('numLetters');\n      } catch (e) {\n        // whatever. Probably died during migration.\n      }\n      const allMigrations = [];\n      for (let i = 0; i < num; ++i) {\n        allMigrations.push(this.props.app.get('letter_' + i).then((letter) => {\n          if (letter) {\n            return this.props.app.set('letter_' + i, letter, {encrypted: true}).then(() => {\n              console.log(\"Migrated letter #\" + i);\n            })\n          }\n          return Promise.resolve();\n        }).catch((e) => console.log(\"Can't migrate letter #\", i, e)));\n      }\n      await Promise.all(allMigrations);\n      await this.props.app.set('numLetters', num, { encrypted: true });\n      version++;\n    }\n    if (version === 1) {\n      console.log(\"Migrating from version #1\");\n      await this.props.app.storeEncryptionPublicKey();\n      version++;\n    }\n    await this.props.app.set('version', version, { encrypted: true });\n  }\n\n  async init() {\n    let version;\n    try {\n      version = await this.props.app.get('version', {encrypted: true}) || 0;\n    } catch (e) {\n      // likely mismatched keys\n      console.log(e);\n      return;\n    }\n    if (version < currentVersion) {\n      await this.migrateFrom(version);\n    }\n    const num = await this.props.app.get('numLetters', { encrypted: true }) || 0;\n    this.setState({\n      numLetters: num,\n    });\n    for (let i = Math.max(0, num - 10); i < num; ++i) {\n      this.props.app.get('letter_' + i, {encrypted: true}).then((letter) => this.modifyLetter(letter));\n    }\n    this.fetchMessages();\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => this.init());\n    }\n  }\n\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  async fetchKey(accountId) {\n    if (accountId in this.keyCache) {\n      return await this.keyCache[accountId];\n    } else {\n      console.log(\"Fetching key for \" + accountId);\n      this.keyCache[accountId] = this.props.app.getStoredEncryptionPublicKey(accountId, {}).catch((e) => false);\n      return await this.keyCache[accountId];\n    }\n  }\n\n  updateKey(profile) {\n    if (!this.props.app) {\n      return;\n    }\n    this.setState({\n      profileLoading: false,\n      profileFound: !!profile,\n    });\n    if (!profile) {\n      return;\n    }\n    this.setState({\n      keyLoading: true,\n    })\n    this.fetchKey(profile.accountId).then((theirPublicKey64) => {\n      this.setState({\n        keyLoading: false,\n        theirPublicKey64,\n      })\n    });\n  }\n\n  handleChange(key, value) {\n    const stateChange = {\n      [key]: value,\n    };\n    if (key === 'receiverId') {\n      value = value.toLowerCase().replace(/[^a-z0-9\\-_.]/, '');\n      stateChange[key] = value;\n      stateChange.profileLoading = true;\n      stateChange.theirPublicKey64 = false;\n    }\n    this.setState(stateChange);\n  }\n\n  async fetchMessages() {\n    if (!this.props.app) {\n      return;\n    }\n    if (this.fetchTimeoutId) {\n      clearTimeout(this.fetchTimeoutId);\n      this.fetchTimeoutId = null;\n    }\n    console.log(\"Fetching messages\");\n    const message = await this.props.app.pullMessage();\n    if (!message) {\n      this.fetchTimeoutId = setTimeout(() => { this.fetchMessages() }, 60 * 1000);\n      return;\n    }\n    try {\n      console.log(message);\n      let inner = JSON.parse(message.message);\n      const isEncrypted = inner.type === 'encrypted';\n      const fromAppId = inner.fromAppId || this.props.app.appId;\n      if (isEncrypted) {\n        const decryptedMessage = await this.props.app.decryptMessage(inner.content, {\n          accountId: message.sender,\n          appId: inner.fromAppId,\n        });\n        inner = JSON.parse(decryptedMessage);\n      }\n      if (inner.type === 'mail') {\n        const letter = {\n          messageId: this.state.numLetters,\n          isEncrypted,\n          fromAppId,\n          sender: message.sender,\n          subject: inner.subject,\n          content: inner.content,\n          time: Math.trunc(message.time / 1000000),\n        }\n        const newNumLetters = this.state.numLetters + 1;\n        this.setState({\n          numLetters: newNumLetters,\n        });\n\n        this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n          console.log(\"Saved the letter: \", letter);\n        });\n        this.props.app.set(\"numLetters\", newNumLetters, {encrypted: true}).then(() => {\n            console.log(\"Saved the new number of letters: \", newNumLetters);\n        });\n        this.modifyLetter(letter);\n      } else {\n        console.warn(\"Unknown message\", message);\n      }\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.fetchMessages()\n    }\n  }\n\n  async sendMail() {\n    if (!this.state.profileFound) {\n      return;\n    }\n    console.log(\"Sending mail\");\n    this.setState({\n      sending: true,\n    });\n    try {\n      let message = JSON.stringify({\n        type: \"mail\",\n        subject: this.state.subject,\n        content: this.state.content,\n      });\n      if (this.state.theirPublicKey64) {\n        const content = await this.props.app.encryptMessage(message, {\n          theirPublicKey64: this.state.theirPublicKey64,\n        });\n        message = JSON.stringify({\n          type: \"encrypted\",\n          fromAppId: this.props.app.appId,\n          content,\n        })\n      }\n      await this.props.app.sendMessage(this.state.receiverId, message);\n      this.setState({\n        subject: \"\",\n        content: \"\",\n      })\n    } catch (e) {\n      console.log(\"Failed to send the message\", e);\n    } finally {\n      this.setState({\n        sending: false,\n      });\n      setTimeout(() => this.fetchMessages(), 2000);\n    };\n  }\n\n  receiverClass() {\n    if (!this.state.receiverId || this.state.profileLoading) {\n      return \"form-control\";\n    } else if (this.state.profileFound) {\n      return \"form-control is-valid\";\n    } else {\n      return \"form-control is-invalid\";\n    }\n  }\n\n  replyTo(letter, displayName) {\n    this.handleChange(\"receiverId\", letter.sender);\n    this.setState({\n      subject: (letter.subject.startsWith(RE) ? \"\" : RE) + letter.subject,\n      content: [\n        \"\",\n        \"\",\n        [\"On\", new Date(letter.time).toLocaleDateString(), displayName, \"@\" + letter.sender, \"wrote:\"].join(' '),\n        ...letter.content.split(/\\r?\\n/).map(s => \"| \" + s)\n      ].join(\"\\n\"),\n    }, () => {\n      this.textarea.current.focus();\n      this.textarea.current.setSelectionRange(0, 0);\n      this.textarea.current.scrollLeft = 0;\n      this.textarea.current.scrollTop = 0;\n    });\n  }\n\n  selectLetter(letter) {\n    this.setState({\n      expandedId: (this.state.expandedId === letter.messageId) ? -1 : letter.messageId,\n    });\n    if (!letter.read) {\n      letter = JSON.parse(JSON.stringify(letter));\n      letter.read = true;\n      this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n        console.log(\"Saved the letter: \", letter);\n      });\n      this.modifyLetter(letter);\n    }\n  }\n\n  deleteLetter(letter) {\n    this.props.app.remove(\"letter_\" + letter.messageId).then(() => {\n      console.log(\"Deleted the letter: \", letter);\n    });\n    this.modifyLetter(null, letter.messageId);\n  }\n\n  render() {\n    const encryptionEnabled = this.state.theirPublicKey64;\n    const displayEncryptionIcon = this.state.profileFound && !this.state.keyLoading;\n    const encryptionAlt = encryptionEnabled ? \"Encryption is ON\" : \"Not secure! Encryption is OFF\";\n    const encryptionIcon = displayEncryptionIcon &&\n      <img className=\"encryption-icon\" src={encryptionEnabled ? encryptionOn : encryptionOff}\n          title={encryptionAlt} alt={encryptionAlt}/>;\n    const profile = <Profile accountId={this.state.receiverId} onFetch={(profile) => this.updateKey(profile)} defaultProfileUrl={anon}/>;\n    const inbox = this.state.inbox.map((letter, i) => (\n      <Letter\n        key={letter.messageId}\n        letter={letter}\n        expanded={letter.messageId === this.state.expandedId}\n        deleteLetter={(letter) => this.deleteLetter(letter)}\n        replyTo={(letter, displayName) => this.replyTo(letter, displayName)}\n        selectLetter={(letter) => this.selectLetter(letter)} />\n    ));\n    return (\n      <div>\n        Inbox <button className=\"btn btn-sm\" onClick={() => this.fetchMessages()}><span role=\"img\" aria-label=\"Refresh\">🔄</span></button>\n        <div>\n          {inbox}\n        </div>\n        <h3>Send</h3>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label className=\"sr-only\" htmlFor=\"toAccountId\">To Account ID</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">@</div>\n                </div>\n                <input type=\"text\" className={this.receiverClass()} id=\"toAccountId\" placeholder=\"To Account ID\" value={this.state.receiverId} disabled={!this.props.app} onChange={(e) => this.handleChange('receiverId', e.target.value)} />\n              </div>\n            </div>\n          </div>\n          {profile}\n        </div>\n        <div className=\"form-group\">\n          <label className=\"sr-only\" htmlFor=\"subject\">Subject</label>\n          <input type=\"text\" className=\"form-control\" id=\"subject\" placeholder=\"Subject\" disabled={!this.props.app} value={this.state.subject} onChange={(e) => this.handleChange('subject', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <textarea ref={this.textarea} id=\"content\" className=\"form-control\" rows=\"7\" disabled={!this.props.app} value={this.state.content} onChange={(e) => this.handleChange('content', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <button className={\"form-control form-control-lg btn \" + (displayEncryptionIcon && !encryptionEnabled ? \"btn-danger\" : \"btn-primary\")} disabled={!this.state.profileFound || this.state.sending} onClick={() => this.sendMail()}>\n            Send {encryptionIcon}</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport class Letter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: {\n        profileUrl: null,\n        displayName: '@' + props.letter.sender,\n      },\n    };\n  }\n\n  onClick() {\n    this.props.selectLetter(this.props.letter);\n  }\n\n  render() {\n    const profile = (\n      <div className=\"col-sm-6 col-md-4 col-lg-4 letter-profile\">\n        <Profile accountId={this.props.letter.sender} onFetch={(profile) => profile && this.setState({displayName: profile.displayName})} defaultProfileUrl={anon}/>\n      </div>\n    );\n    const subject = (\n      <div className=\"col-sm-4 col-md\">\n        <div className=\"letter-subject\">{this.props.letter.subject}</div>\n      </div>\n    );\n    const time = this.props.expanded ? (\n      <div className=\"col-sm-2 col-lg-2\">\n        <div className=\"letter-time\">{longTimeFormat(this.props.letter.time)}</div>\n      </div>\n    ) : (\n      <div className=\"col-sm-2 col-lg-1 d-none d-md-block\">\n        <div className=\"letter-time\">{timeFormat(this.props.letter.time)}</div>\n      </div>\n    );\n    if (this.props.expanded) {\n      return (\n        <div className=\"letter letter-expanded\">\n          <div className=\"row letter-expanded-header\" onClick={() => this.onClick()}>\n            {profile}\n            {subject}\n            {time}\n          </div>\n          <div className=\"letter-content-expanded\">\n            <pre>{this.props.letter.content}</pre>\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <button className=\"btn btn-primary\" onClick={() => this.props.replyTo(this.props.letter, this.state.displayName)}>Reply</button>\n              </div>\n              <div className=\"col-sm\">\n                <button className=\"btn btn-danger float-right\" onClick={() => this.props.deleteLetter(this.props.letter)}>DELETE THIS!</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={\"row letter letter-small\" + (this.props.letter.read ? \" letter-read\" : \" letter-unread\")} onClick={() => this.onClick()}>\n          {profile}\n          {subject}\n          <div className=\"col-sm d-none d-lg-block\">\n            <div className=\"letter-content\">{this.props.letter.content}</div>\n          </div>\n          {time}\n        </div>\n      );\n    }\n  }\n}\n\nfunction longTimeFormat(t) {\n  return new Date(t).toLocaleString();\n}\n\nfunction timeFormat(t) {\n  const d = new Date(t);\n  const now = new Date();\n  if (now.getDate() === d.getDate()) {\n    const hour = d.getHours() % 12;\n    const minute = d.getMinutes().toString().padStart(2, '0');\n    const daytime = d.getHours() >= 12 ? \"PM\" : \"AM\";\n    return `${hour}:${minute} ${daytime}`;\n  } else {\n    return d.toLocaleDateString();\n  }\n}\n","import React from 'react';\nimport * as nearlib from 'nearlib';\nimport { generateSeedPhrase } from 'near-seed-phrase';\n\nconst FaucetPrivateKey = 'ed25519:2Rtn6ms22rCRMgmGgLRSPPd6gYDCgWDuFrX6gERknSA8GKiCHE5L9Rksc1ihsSCDvMSptfbipzq29H7cDZhR1Ze3';\nconst FaucetName = 'meta';\nconst MinAccountIdLen = 2;\nconst MaxAccountIdLen = 64;\nconst ValidAccountRe = /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\nexport const AuthDataKey = \"meta-faucet-auth-data\";\n\nexport class PowFaucet extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            connected: false,\n            signedIn: false,\n            accountId: null,\n            newAccountId: \"\",\n            creating: false,\n            accountLoading: false,\n            newAccountExists: false,\n            computingProofOfWork: false,\n        };\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.initNear().then(() => {\n            this.mounted && this.setState({\n                connected: true,\n                signedIn: !!this._authData.accountId,\n                accountId: this._authData.accountId,\n            })\n        })\n    }\n\n    async initFaucet() {\n        let key = await this._keyStore.getKey(this._nearConfig.networkId, FaucetName);\n        if (!key) {\n            const keyPair = nearlib.KeyPair.fromString(FaucetPrivateKey);\n            await this._keyStore.setKey(this._nearConfig.networkId, FaucetName, keyPair);\n        }\n        const account = new nearlib.Account(this._near.connection, FaucetName);\n        this._faucetContract =  new nearlib.Contract(account, FaucetName, {\n            viewMethods: ['get_min_difficulty', 'get_account_suffix', 'get_num_created_accounts'],\n            changeMethods: ['create_account'],\n            sender: FaucetName\n        });\n        this._accountSuffix = await this._faucetContract.get_account_suffix();\n        this._minDifficulty = await this._faucetContract.get_min_difficulty();\n        this.mounted && this.setState({\n            numCreatedAccounts: await this._faucetContract.get_num_created_accounts(),\n        });\n        // console.log(JSON.stringify([...key.getPublicKey().data]));\n    }\n\n    async initNear() {\n        const nearConfig = {\n            networkId: 'default',\n            nodeUrl: 'https://rpc.nearprotocol.com',\n            contractName: FaucetName,\n            walletUrl: 'https://wallet.nearprotocol.com',\n        };\n        const keyStore = new nearlib.keyStores.BrowserLocalStorageKeyStore();\n        const near = await nearlib.connect(Object.assign({ deps: { keyStore } }, nearConfig));\n        this._keyStore = keyStore;\n        this._nearConfig = nearConfig;\n        this._near = near;\n\n        this._authData = JSON.parse(window.localStorage.getItem(AuthDataKey) || '{}');\n        await this.initFaucet();\n    }\n\n    handleChange(key, value) {\n        const stateChange = {\n            [key]: value,\n        };\n        if (key === 'newAccountId') {\n            value = value.toLowerCase().replace(/[^a-z0-9\\-_.]/, '');\n            stateChange[key] = value;\n            stateChange.newAccountExists = false;\n            if (this.isValidAccount(value)) {\n                stateChange.accountLoading = true;\n                this._near.connection.provider.query(`account/${value + this._accountSuffix}`, '').then((_a) => {\n                    if (this.state.newAccountId === value) {\n                        this.setState({\n                            accountLoading: false,\n                            newAccountExists: true,\n                        })\n                    }\n                }).catch((e) => {\n                    if (this.state.newAccountId === value) {\n                        this.setState({\n                            accountLoading: false,\n                            newAccountExists: false,\n                        })\n                    }\n                })\n            }\n        }\n        this.setState(stateChange);\n    }\n\n    isValidAccount(newAccountId) {\n        if (newAccountId.includes('.')) {\n            return false;\n        }\n        const accountId = newAccountId + this._accountSuffix;\n        return accountId.length >= MinAccountIdLen &&\n            accountId.length <= MaxAccountIdLen &&\n            accountId.match(ValidAccountRe);\n    }\n\n    newAccountClass() {\n        if (!this.state.newAccountId || this.state.accountLoading) {\n            return \"form-control form-control-large\";\n        } else if (!this.state.newAccountExists && this.isValidAccount(this.state.newAccountId)) {\n            return \"form-control form-control-large is-valid\";\n        } else {\n            return \"form-control form-control-large is-invalid\";\n        }\n    }\n\n    async computeProofOfWork(accountId, publicKey) {\n        let msg = [...new TextEncoder('utf-8').encode(accountId + ':')];\n        // curve\n        msg.push(0);\n        // key\n        msg.push(...publicKey.data);\n        // separator\n        msg.push(':'.charCodeAt(0));\n        // salt\n        msg.push(0, 0, 0, 0, 0, 0, 0, 0);\n        msg = new Uint8Array(msg);\n        const len = msg.length;\n        let bestDifficulty = 0;\n        for (let salt = 0; ; ++salt) {\n            // compute hash\n            const hashBuffer = new Uint8Array(await crypto.subtle.digest('SHA-256', msg));\n            // compute number of leading zero bits\n            let totalNumZeros = 0;\n            for (let i = 0; i < hashBuffer.length; ++i) {\n                let numZeros = Math.clz32(hashBuffer[i]) - 24;\n                totalNumZeros += numZeros;\n                if (numZeros < 8) {\n                    break;\n                }\n            }\n            // checking difficulty\n            if (totalNumZeros >= this._minDifficulty) {\n                this.setState({\n                    computingProofOfWork: false,\n                });\n                return salt;\n            } else if (totalNumZeros > bestDifficulty) {\n                bestDifficulty = totalNumZeros;\n                this.setState({\n                    proofOfWorkProgress: Math.trunc(bestDifficulty * 100 / this._minDifficulty),\n                    proofOfWorkDifficulty: bestDifficulty,\n                    proofOfWorkSalt: salt,\n                });\n            } else if (salt % 10000 === 0) {\n                this.setState({\n                    proofOfWorkSalt: salt\n                });\n            }\n            // incrementing salt\n            for (let i = len - 8; i < len; ++i) {\n                if (msg[i] === 255) {\n                    msg[i] = 0;\n                } else {\n                    ++msg[i];\n                    break;\n                }\n            }\n        }\n    }\n\n    async createAccount() {\n        this.setState({\n            creating: true,\n            computingProofOfWork: true,\n            proofOfWorkProgress: 0,\n            proofOfWorkDifficulty: 0,\n            proofOfWorkSalt: 0,\n        })\n        const newAccountId = this.state.newAccountId + this._accountSuffix;\n        const seed = generateSeedPhrase();\n        const newKeyPair = nearlib.KeyPair.fromString(seed.secretKey);\n        const salt = await this.computeProofOfWork(newAccountId, newKeyPair.getPublicKey());\n        await this._faucetContract.create_account({\n            account_id: newAccountId,\n            public_key: [0, ...newKeyPair.getPublicKey().data],\n            salt,\n        });\n        await this._keyStore.setKey(this._nearConfig.networkId, newAccountId, newKeyPair);\n        this._authData = {\n            accountId: newAccountId,\n            seed,\n        };\n        window.localStorage.setItem(AuthDataKey, JSON.stringify(this._authData));\n        this.setState({\n            signedIn: true,\n            accountId: newAccountId,\n            creating: false,\n            numCreatedAccounts: await this._faucetContract.get_num_created_accounts(),\n        })\n        this.props.onLogin(this._authData);\n    }\n\n    moveAccountToWallet() {\n        window.location = `https://wallet.nearprotocol.com/recover-with-link/${this._authData.accountId}/${this._authData.seed.seedPhrase}`;\n    }\n\n    logout() {\n        window.localStorage.removeItem(AuthDataKey);\n        this._authData = {};\n        this.setState({\n            signedIn: false,\n            accountId: null,\n            newAccountId: \"\",\n            creating: false,\n            accountLoading: false,\n            newAccountExists: false,\n            computingProofOfWork: false,\n        });\n    }\n\n    render() {\n        const content = !this.state.connected ? (\n            <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n        ) : (this.state.signedIn ? (\n            <div>\n                <h3>Hello, {this.state.accountId}</h3>\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-success\"\n                        onClick={() => this.moveAccountToWallet()}\n                    >\n                        Move account to NEAR Wallet\n                    </button>\n                </div>\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-danger\"\n                        onClick={() => this.logout()}\n                    >\n                        Logout from Faucet\n                    </button>\n                </div>\n            </div>\n        ) : (\n            <div>\n                <div className=\"form-group\">\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <div className=\"input-group-text\">{\"@\"}</div>\n                        </div>\n                        <input\n                            placeholder=\"bob\"\n                            id=\"accountId\"\n                            className={this.newAccountClass()}\n                            value={this.state.newAccountId}\n                            onChange={(e) => this.handleChange('newAccountId', e.target.value)}\n                            disabled={this.state.creating}\n                        />\n                        <div className=\"input-group-append\">\n                            <div className=\"input-group-text\">{this._accountSuffix}</div>\n                        </div>\n                    </div>\n                </div>\n                {this.state.newAccountExists && (\n                    <div className=\"alert alert-warning\" role=\"alert\">\n                        Account {'\"' + this.state.newAccountId + this._accountSuffix + '\"'} already exists!\n                    </div>\n                )}\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-primary\"\n                        disabled={this.state.creating || this.state.accountLoading || this.state.newAccountExists || !this.isValidAccount(this.state.newAccountId)}\n                        onClick={() => this.createAccount()}\n                    >\n                        {(this.state.creating || this.state.accountLoading) && (\n                            <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                        )} Create Account {this.isValidAccount(this.state.newAccountId) ? ('\"' + this.state.newAccountId + this._accountSuffix + '\"') : \"\"}\n                    </button>\n                </div>\n                {this.state.creating && (\n                    <div>\n                        {this.state.computingProofOfWork ? (\n                            <div>\n                                Computing Proof of Work. Done {this.state.proofOfWorkSalt} operations.\n                                <div className=\"progress\">\n                                    <div className=\"progress-bar\" role=\"progressbar\" style={{width: this.state.proofOfWorkProgress + '%'}} aria-valuenow={this.state.proofOfWorkProgress} aria-valuemin=\"0\"\n                                         aria-valuemax=\"100\">{this.state.proofOfWorkDifficulty} out of {this._minDifficulty}\n                                    </div>\n                                </div>\n                            </div>\n                        ) : (\n                            <div>\n                                Proof of Work is Done! Creating account {'\"' + this.state.newAccountId + this._accountSuffix + '\"'}\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        ));\n        return (\n            <div>\n                <h3>or create a new account</h3>\n                {content}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport nearlogo from './assets/gray_near_logo.svg';\nimport './css/App.css';\nimport * as nearlib from \"nearlib\";\nimport { OpenWebApp } from 'near-openweb-js';\nimport { ProfileApp } from \"./apps/ProfileApp\";\nimport { ChatApp } from \"./apps/Chat/ChatApp\";\nimport { MailApp } from \"./apps/MailApp\";\n// import { KeysApp } from \"./apps/KeysApp\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { PowFaucet, AuthDataKey}  from \"./components/PowFaucet\";\n\nconst GAS = 2_000_000_000_000_000;\nconst TITLE = \"Meta NEAR - User-centric web\"\nconst DefaultTabIndexKey = \"metanearDefaultTabIndex\";\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: false,\n      apps: {},\n      logs: [],\n      mailUnread: 0,\n      chatUnread: 0,\n      loading: false,\n      defaultTabIndex: JSON.parse(window.localStorage.getItem(DefaultTabIndexKey) || '0'),\n    }\n    this.signedInFlow = this.signedInFlow.bind(this);\n    this.requestSignIn = this.requestSignIn.bind(this);\n    this.requestSignOut = this.requestSignOut.bind(this);\n    this.signedOutFlow = this.signedOutFlow.bind(this);\n    this.checkSignIn = this.checkSignIn.bind(this);\n    this.initOpenWebApp = this.initOpenWebApp.bind(this);\n    window.nearlib = nearlib;\n  }\n\n  componentDidMount() {\n    this.checkSignIn();\n  }\n\n  async checkSignIn() {\n    let loggedIn = window.walletAccount.isSignedIn();\n    let authData = JSON.parse(window.localStorage.getItem(AuthDataKey) || '{}');\n    if (loggedIn || authData.accountId) {\n      await this.signedInFlow(authData);\n    } else {\n      this.signedOutFlow();\n    }\n  }\n\n  log(message) {\n    console.log(message);\n    this.setState({\n      logs: this.state.logs.concat([message])\n    })\n  }\n\n  async signedInFlow(authData) {\n    const accountId = authData.accountId || await this.props.wallet.getAccountId();\n    this.setState({\n      login: true,\n      loading: true,\n      accountId,\n    })\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    if (window.location.search.includes(\"all_keys\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    // Initializing our contract APIs by contract name and configuration.\n\n    this.log(\"Connecting to account...\");\n    const account = await new nearlib.Account(window.near.connection, accountId);\n    this.log(\"Querying state...\");\n    let state = await account.state();\n    /*\n    await new Promise((resolve, reject) =>{\n      setTimeout(() => {\n        resolve();\n      }, 5000);\n    })\n     */\n    console.log(state);\n    if (state.code_hash !== 'C8UmYSqATkuyhheJ7i7ryxPjfZL4nV8PfkovdMKitsmJ') {\n      this.log(\"Going to deploy the code\");\n      // no code. Need to deploy.\n      this.log(\"Downloading started...\");\n      let data = await fetch('/open_web.wasm');\n      let buf = await data.arrayBuffer();\n      this.log(\"Downloading done. Deploying contract...\");\n      await account.deployContract(new Uint8Array(buf));\n      if (state.code_hash === '11111111111111111111111111111111') {\n        this.log(\"Deploying done. Initializing contract...\");\n        // Gotta init it.\n        let contract = await new nearlib.Contract(account, accountId, {\n          viewMethods: [],\n          // Change methods can modify the state. But you don't receive the returned value when called.\n          changeMethods: ['new'],\n          // Sender is the account ID to initialize transactions.\n          sender: accountId\n        });\n        console.log(await contract.new());\n      }\n      this.log(\"The contract is deployed\");\n    }\n\n    const masterContract = await new nearlib.Contract(account, accountId, {\n      // View methods are read only. They don't modify the state, but usually return some value.\n      viewMethods: ['apps'],\n      // Change methods can modify the state. But you don't receive the returned value when called.\n      changeMethods: ['add_app_key', 'remove_app_key'],\n      // Sender is the account ID to initialize transactions.\n      sender: accountId\n    });\n\n    this.masterContract = masterContract;\n    window.masterContract = masterContract;\n    this.log(\"Fetching authorized apps...\");\n    console.log(\"Apps:\", await masterContract.apps());\n\n    // this.initOpenWebApp = this.initOpenWebApp.bind(this);\n\n    this.log(\"Initializing local apps...\");\n    const apps = {\n      profile: await this.initOpenWebApp('profile', accountId),\n      chat: await this.initOpenWebApp('chat', accountId),\n      mail: await this.initOpenWebApp('mail', accountId),\n      // keys: await this.initOpenWebApp('keys', accountId)\n    };\n    window.apps = apps;\n    this.apps = apps;\n    this.setState({\n      apps,\n      loading: false,\n    })\n  }\n\n  async initOpenWebApp(appId, accountId) {\n    this.log(\"Initializing app: \" + appId + \" ...\");\n    const app = new OpenWebApp(appId, accountId, window.nearConfig);\n    await app.init();\n    if (!await app.ready()) {\n      let pk = await app.getAccessPublicKey();\n      this.log(\"Authorizing app for key \" + pk.toString() + \" ...\");\n      const serializedPk = await app.getSerializedAccessPublicKey();\n      const args = {\n        public_key: [...serializedPk],\n        app_id: appId,\n      };\n      await this.masterContract.add_app_key(args, GAS);\n      await app.onKeyAdded();\n    }\n    return app;\n  }\n\n  async requestSignIn() {\n    const appTitle = 'Open Web Home';\n    await this.props.wallet.requestSignIn(\n      \"\",\n      appTitle\n    )\n  }\n\n  requestSignOut = () => {\n    this.props.wallet.signOut();\n    setTimeout(this.signedOutFlow, 500);\n    console.log(\"after sign out\", this.props.wallet.isSignedIn())\n  }\n\n\n  signedOutFlow = () => {\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    this.setState({\n      login: false,\n    })\n  }\n\n  selectTab = (index) => {\n    window.localStorage.setItem(DefaultTabIndexKey, JSON.stringify(index));\n    this.setState({\n      defaultTabIndex: index,\n    })\n  }\n\n  render() {\n    const unread = this.state.mailUnread + this.state.chatUnread;\n    document.title = (unread ? `(${unread}) ` : \"\") + TITLE;\n    if (!this.state.login) {\n      return <div className=\"App-header\">\n        <div>\n          <div className=\"image-wrapper\">\n            <img className=\"logo\" src={nearlogo} alt=\"NEAR logo\"/>\n          </div>\n          <h1>Hello ?</h1>\n          <div>\n            <button\n                className=\"btn btn-primary\"\n                onClick={this.requestSignIn}>Log in with NEAR Wallet</button>\n          </div>\n          <PowFaucet onLogin={this.signedInFlow}/>\n        </div>\n      </div>\n    } else if (this.state.loading) {\n      return <div className=\"loading-div\">\n        <div className=\"spinner-grow loading-spinner\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <pre className=\"text-left\">\n          {this.state.logs.join(\"\\n\")}\n        </pre>\n      </div>\n    } else {\n      return <div className={\"h100 apps\" + (this.state.loading ? \" d-none\" : \"\")}>\n        <Tabs className=\"h100 cflex\" forceRenderTabPanel={true} defaultIndex={this.state.defaultTabIndex} onSelect={(i) => this.selectTab(i)}>\n          <TabList>\n            <Tab>Profile</Tab>\n            <Tab>Public Chat {this.state.chatUnread ? `(${this.state.chatUnread})` : \"\"}</Tab>\n            <Tab>Mail {this.state.mailUnread ? `(${this.state.mailUnread})` : \"\"}</Tab>\n            {/*<Tab>Keys</Tab>*/}\n          </TabList>\n\n          <TabPanel>\n            <ProfileApp app={this.state.apps.profile} logOut={this.requestSignOut}/>\n          </TabPanel>\n          <TabPanel style={{flexGrow: '1'}}>\n            <ChatApp app={this.state.apps.chat} onUnread={(chatUnread) => this.setState({chatUnread})}/>\n          </TabPanel>\n          <TabPanel>\n            <MailApp app={this.state.apps.mail} onUnread={(mailUnread) => this.setState({mailUnread})}/>\n          </TabPanel>\n          {/*<TabPanel>\n            <KeysApp app={this.state.apps.keys}/>\n          </TabPanel>*/}\n        </Tabs>\n      </div>\n    }\n  }\n}\n","import React from \"react\";\nimport queryString from 'query-string';\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    const values = queryString.parse(this.props.location.search);\n    let {app_id, pub_key} = values;\n    if (app_id && pub_key) {\n      this.state = {\n        authorized:false,\n        new_app_id:app_id,\n        new_pub_key:pub_key\n      };\n    } else {\n      this.state = {\n        authorized:false,\n        new_app_id:\"\",\n        new_pub_key:\"\"\n      }\n    }\n  }\n\n componentDidMount() {\n    if (!this.props.loading && this.state.new_app_id && this.state.new_pub_key) {\n      this.props.initOpenWebApp(this.state.new_app_id, this.state.new_pub_key)\n        .then(res => {\n          this.setState({\n            authorized: true\n          })\n        });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      // this.init();\n    }\n  }\n  \n  // async fetchProfile(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  // async registerNewApp(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  render() {\n    return (\n      <div>\n        {this.state.authorized ? \n        <div>\n          <p>App <strong>{this.state.new_app_id}</strong> was added</p>\n          <p> Using the public key: {this.state.new_pub_key} </p>\n        </div> :\n        \"You need pass a key in order to add an app\"\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport { Home } from './Home';\nimport { Auth } from './Auth';\n\nclass Router extends Component {\n  render() {\n    return (\n      <HashRouter basename={process.env.PUBLIC_URL} hashType=\"noslash\">\n        <Switch>\n          <Route exact path=\"/\" component={() => <Home {...this.props}/>} />\n          <Route path=\"/auth\" component={() => <Auth {...this.props}/>} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport getConfig from './near/config.js';\nimport * as nearlib from 'nearlib';\n\n// Initializing contract\nasync function InitContract() {\n    window.nearConfig = getConfig('development')\n\n    // Initializing connection to the NEAR DevNet.\n    window.near = await nearlib.connect(Object.assign({ deps: { keyStore: new nearlib.keyStores.BrowserLocalStorageKeyStore() } }, window.nearConfig));\n    \n    // Needed to access wallet login\n    window.walletAccount = new nearlib.WalletAccount(window.near);\n    \n    // Getting the Account ID. If unauthorized yet, it's just empty string.\n    window.accountId = window.walletAccount.getAccountId();\n\n}\n\nwindow.nearInitPromise = InitContract().then(() => {\n    ReactDOM.render(<Router contract={window.contract} wallet={window.walletAccount}/>,\n      document.getElementById('root')\n    );\n  }).catch(console.error)\n"],"sourceRoot":""}