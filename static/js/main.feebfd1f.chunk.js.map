{"version":3,"sources":["assets/gray_near_logo.svg","assets/encryptionOn.png","assets/encryptionOff.png","near/config.js","../../react-near-openweb/dist-modules/Profile.js","apps/ProfileApp.js","apps/MailApp.js","Home.js","Auth.js","Router.js","index.js","assets/anon.png","../../react-near-openweb/dist-modules/index.js","../../../near-openweb-js/src/openweb.js"],"names":["module","exports","getConfig","env","networkId","nodeUrl","contractName","walletUrl","keyPath","process","HOME","masterAccount","Error","Cookies","require","cookieConfig","getJSON","window","nearConfig","nearPages","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react2","_interopRequireDefault","_nearOpenwebJs","_propTypes2","obj","__esModule","default","propTypes","accountId","string","isRequired","defaultProfileUrl","displayName","profileUrl","bio","onFetch","func","forceShow","bool","Profile","_React$Component","instance","TypeError","_classCallCheck","this","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","state","loading","found","profileComponentCache","profileCache","app","OpenWebApp","init","subClass","superClass","create","constructor","setPrototypeOf","_inherits","_this2","then","updateProfile","fn","_ref","mark","_callee","wrap","_context","prev","next","abrupt","sent","console","log","Promise","all","getFrom","values","catch","e","stop","gen","apply","arguments","resolve","reject","step","arg","info","error","done","err","_x","_this3","setState","fetchProfile","profile","prevProps","_this4","styles","createElement","style","className","role","title","profileImage","src","alt","profileName","profileDisplayName","profileAccountId","Component","defaultProps","whiteSpace","display","height","width","borderRadius","verticalAlign","overflowY","marginLeft","color","ProfileApp","keys","reduce","acc","chainValues","initialized","saving","hasChanges","appReady","newState","waitReady","maybeInit","some","assign","promises","forEach","push","set","f","sourceImage","Image","reader","FileReader","readAsDataURL","onload","canvas","document","aspect","naturalWidth","naturalHeight","Math","round","max","ctx","getContext","imageSmoothingQuality","fillStyle","fillRect","drawImage","options","toDataURL","sort","a","b","handleChange","event","result","onClick","logOut","anon","htmlFor","placeholder","id","disabled","onChange","type","onFilesChange","onError","onFilesError","multiple","accepts","minFileSize","clickable","save","aria-hidden","React","MailApp","receiverId","subject","content","sending","numLetters","unread","expandedId","profileFound","profileLoading","keyLoading","theirPublicKey64","inbox","textarea","createRef","keyCache","letter","messageId","undefined","filter","time","read","onNewMail","version","num","get","allMigrations","encrypted","storeEncryptionPublicKey","migrateFrom","modifyLetter","fetchMessages","getStoredEncryptionPublicKey","fetchKey","stateChange","toLowerCase","replace","fetchTimeoutId","clearTimeout","pullMessage","message","setTimeout","inner","JSON","parse","isEncrypted","fromAppId","appId","decryptMessage","sender","decryptedMessage","trunc","newNumLetters","warn","stringify","encryptMessage","sendMessage","startsWith","Date","toLocaleDateString","join","split","map","s","current","focus","setSelectionRange","scrollLeft","scrollTop","remove","encryptionEnabled","displayEncryptionIcon","encryptionAlt","encryptionIcon","encryptionOn","encryptionOff","updateKey","expanded","deleteLetter","replyTo","selectLetter","aria-label","receiverClass","ref","rows","sendMail","Letter","t","toLocaleString","d","getDate","hour","getHours","minute","getMinutes","toString","padStart","daytime","timeFormat","Home","requestSignOut","wallet","signOut","signedOutFlow","isSignedIn","location","search","includes","origin","pathname","login","apps","logs","signedInFlow","bind","requestSignIn","checkSignIn","initOpenWebApp","nearlib","walletAccount","concat","getAccountId","near","connection","account","code_hash","fetch","data","arrayBuffer","buf","deployContract","Uint8Array","viewMethods","changeMethods","contract","new","masterContract","mail","ready","getAccessPublicKey","pk","getSerializedAccessPublicKey","serializedPk","args","public_key","app_id","add_app_key","onKeyAdded","forceRenderTabPanel","nearlogo","Auth","queryString","pub_key","authorized","new_app_id","new_pub_key","res","Router","basename","hashType","exact","path","component","deps","keyStore","BrowserLocalStorageKeyStore","nearInitPromise","InitContract","ReactDOM","render","getElementById","_Profile","_Profile2","encryptionKey","_nearConfig","blocking","parseEncryptionKey","nacl","Buffer","keyKey","localStorage","getItem","from","secretKeyLength","keyPair","fromSecretKey","setItem","secretKey","_key","newSecretKey64","_keyStore","_near","_account","_contract","_networkId","_init","_innerInit","getKey","_ready","_keyAwait","getPublicKey","_tmpKey","accessKey","fromRandom","serialize","SCHEMA","publicKey","getEncryptionPublicKey","setKey","msg64","nonce","nonceLength","copy","box","decodedBuf","open","str","fullBuf","theirPublicKey","publicKeyLength","decryptSecretBox","forceReady","wrappedCall","encryptSecretBox","num_messages","pull_message","getTheirPublicKey","encryptBox","decryptBox","send_message","receiver_id"],"mappings":"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","file":"static/js/main.feebfd1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gray_near_logo.55517b93.svg\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOn.23e3b306.png\";","module.exports = __webpack_public_path__ + \"static/media/encryptionOff.475ce496.png\";","(function() {\n    const CONTRACT_NAME = 'react-template'; /* TODO: fill this in!*/\n    const DEFAULT_ENV = 'development'; \n    \n    function getConfig(env) {\n        switch (env) {\n\n        case 'production':\n        case 'development':\n            return {\n                networkId: 'default',\n                nodeUrl: 'https://rpc.nearprotocol.com',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://wallet.nearprotocol.com',\n            };\n        case 'staging':\n            return {\n                networkId: 'staging',\n                nodeUrl: 'https://staging-rpc.nearprotocol.com/',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://near-wallet-staging.onrender.com',\n            };\n        case 'local':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                keyPath: `${process.env.HOME}/.near/validator_key.json`,\n                walletUrl: 'http://localhost:4000/wallet',\n                contractName: CONTRACT_NAME,\n            };\n        case 'test':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'test-remote':\n        case 'ci':\n            return {\n                networkId: 'shared-test',\n                nodeUrl: 'http://shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        case 'ci-staging':\n            return {\n                networkId: 'shared-test-staging',\n                nodeUrl: 'http://staging-shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near',\n            };\n        default:\n            throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n        }\n    }\n    \n    let Cookies = require('js-cookie');\n    const cookieConfig = typeof Cookies != 'undefined' && Cookies.getJSON('fiddleConfig');\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = getConfig;\n    } else {\n        window.nearConfig =  cookieConfig && cookieConfig.nearPages ? cookieConfig : getConfig(DEFAULT_ENV);\n    }\n})();\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _nearOpenwebJs = require('near-openweb-js');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  accountId: _propTypes2.default.string.isRequired,\n  defaultProfileUrl: _propTypes2.default.string,\n  displayName: _propTypes2.default.string,\n  profileUrl: _propTypes2.default.string,\n  bio: _propTypes2.default.string,\n  onFetch: _propTypes2.default.func,\n  forceShow: _propTypes2.default.bool\n};\n\nvar defaultProps = {\n  defaultProfileUrl: null,\n  styles: {\n    profile: {\n      whiteSpace: 'nowrap',\n      display: 'inline-block'\n    },\n    profileImage: {\n      height: '3em',\n      width: '3em',\n      borderRadius: '50%',\n      verticalAlign: 'middle'\n    },\n    profileName: {\n      overflowY: 'hidden',\n      marginLeft: '0.5em',\n      verticalAlign: 'middle'\n    },\n    profileDisplayName: {},\n    profileAccountId: {\n      color: '#999'\n    }\n  }\n};\n\nvar profileAppId = 'profile';\n\nvar Profile = function (_React$Component) {\n  _inherits(Profile, _React$Component);\n\n  function Profile(props) {\n    _classCallCheck(this, Profile);\n\n    var _this = _possibleConstructorReturn(this, (Profile.__proto__ || Object.getPrototypeOf(Profile)).call(this, props));\n\n    _this.state = {\n      displayName: '',\n      profileUrl: null,\n      bio: '',\n      loading: false,\n      found: false\n    };\n    var nearConfig = _this.props.nearConfig || window.nearConfig || {\n      networkId: 'default',\n      nodeUrl: 'https://rpc.nearprotocol.com',\n      walletUrl: 'https://wallet.nearprotocol.com'\n    };\n\n    if (!window.profileComponentCache) {\n      window.profileComponentCache = {\n        profileCache: {},\n        app: new _nearOpenwebJs.OpenWebApp(profileAppId, null, nearConfig)\n      };\n      window.profileComponentCache.app.init();\n    }\n\n    _this.profileCache = window.profileComponentCache.profileCache;\n    _this.app = window.profileComponentCache.app;\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.accountId && this.app.init().then(function () {\n        return _this2.updateProfile(_this2.props.accountId);\n      });\n    }\n  }, {\n    key: 'fetchProfile',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(accountId) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(accountId in this.profileCache)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.profileCache[accountId];\n\n              case 3:\n                return _context.abrupt('return', _context.sent);\n\n              case 6:\n                console.log(\"Fetching profile for \" + accountId);\n                this.profileCache[accountId] = Promise.all([this.app.getFrom(accountId, 'displayName'), this.app.getFrom(accountId, 'profileUrl'), this.app.getFrom(accountId, 'bio')]).then(function (values) {\n                  return {\n                    accountId: accountId,\n                    displayName: values[0] || \"\",\n                    profileUrl: values[1],\n                    bio: values[2] || \"\"\n                  };\n                }).catch(function (e) {\n                  return false;\n                });\n                _context.next = 10;\n                return this.profileCache[accountId];\n\n              case 10:\n                return _context.abrupt('return', _context.sent);\n\n              case 11:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchProfile(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return fetchProfile;\n    }()\n  }, {\n    key: 'updateProfile',\n    value: function updateProfile(accountId) {\n      var _this3 = this;\n\n      this.setState({\n        displayName: \"\",\n        profileUrl: null,\n        bio: \"\",\n        loading: true,\n        found: false\n      });\n      this.fetchProfile(this.props.accountId).then(function (profile) {\n        if (profile) {\n          _this3.setState({\n            displayName: profile.displayName,\n            profileUrl: profile.profileUrl,\n            bio: profile.bio,\n            loading: false,\n            found: true\n          });\n        } else {\n          _this3.setState({\n            loading: false,\n            found: false\n          });\n        }\n        _this3.props.onFetch && _this3.props.onFetch(profile);\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var _this4 = this;\n\n      if (this.props.accountId !== prevProps.accountId) {\n        this.app.init().then(function () {\n          return _this4.updateProfile(_this4.props.accountId);\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var displayName = this.props.displayName || this.state.displayName;\n      var profileUrl = this.props.profileUrl || this.state.profileUrl || this.props.defaultProfileUrl;\n      var bio = this.props.bio || this.state.bio;\n      var accountId = this.props.accountId;\n      var styles = this.props.styles;\n\n      return this.state.loading ? _react2.default.createElement(\n        'div',\n        { style: styles.profile },\n        _react2.default.createElement(\n          'div',\n          { className: 'spinner-grow', role: 'status' },\n          _react2.default.createElement(\n            'span',\n            { className: 'sr-only' },\n            'Loading...'\n          )\n        )\n      ) : this.state.found || this.props.forceShow ? _react2.default.createElement(\n        'div',\n        { style: styles.profile, title: bio },\n        _react2.default.createElement('img', { style: styles.profileImage, src: profileUrl, alt: 'Profile @' + accountId }),\n        _react2.default.createElement(\n          'span',\n          { style: styles.profileName },\n          _react2.default.createElement(\n            'span',\n            { style: styles.profileDisplayName },\n            displayName\n          ),\n          _react2.default.createElement(\n            'span',\n            { style: styles.profileAccountId },\n            \"(@\" + accountId + \")\"\n          )\n        )\n      ) : null;\n    }\n  }]);\n\n  return Profile;\n}(_react2.default.Component);\n\nProfile.propTypes = propTypes;\nProfile.defaultProps = defaultProps;\n\nexports.default = Profile;","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport Files from \"react-files\";\nimport { Profile } from \"react-near-openweb\";\n\nconst uploadResizeWidth = 96;\nconst uploadResizeHeight = 96;\n\nexport class ProfileApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const keys = [\n      \"displayName\",\n      \"profileUrl\",\n      \"bio\",\n    ];\n    this.state = keys.reduce((acc, key) => {\n      acc[key] = \"\";\n      acc.chainValues[key] = null;\n      return acc;\n    }, {\n      keys,\n      chainValues: {},\n      initialized: false,\n      saving: false,\n      hasChanges: false,\n      appReady: false,\n    });\n  }\n\n  async init(profile) {\n    if (!profile) {\n      return;\n    }\n    const newState = this.state.keys.reduce((state, key) => {\n      state[key] = profile[key] || \"\";\n      state.chainValues[key] = state[key];\n      return state;\n    }, {\n      chainValues: {}\n    });\n    this.setState(newState);\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => {\n        this.setState({\n          appReady: true,\n        })\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  handleChange(key, value) {\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  hasChanges() {\n    return this.state.keys.some(key => this.state.chainValues[key] !== this.state[key]);\n  }\n\n  async save() {\n    this.setState({\n      saving: true,\n    });\n    console.log(\"Saving\");\n    const chainValues = Object.assign({}, this.state.chainValues);\n    const promises = [];\n    this.state.keys.forEach(key => {\n      if (this.state.chainValues[key] !== this.state[key]) {\n        chainValues[key] = this.state[key];\n        promises.push(this.props.app.set(key, this.state[key]).then(() => {\n          console.log(\"Updated key `\" + key + \"` to value `\" + this.state[key] + '`');\n        }));\n      }\n    });\n    Promise.all(promises).then(() => {\n      this.setState({\n        chainValues,\n        saving: false,\n      })\n    });\n  }\n\n  async onFilesChange(f) {\n    let sourceImage = new Image();\n    let reader = new FileReader();\n\n    reader.readAsDataURL(f[0]);\n\n    sourceImage.onload = () => {\n      // Create a canvas with the desired dimensions\n      let canvas = document.createElement(\"canvas\");\n      const aspect = sourceImage.naturalWidth / sourceImage.naturalHeight;\n      const width = Math.round(uploadResizeWidth * Math.max(1, aspect));\n      const height = Math.round(uploadResizeHeight * Math.max(1, 1 / aspect));\n      canvas.width = uploadResizeWidth;\n      canvas.height = uploadResizeHeight;\n      const ctx = canvas.getContext(\"2d\");\n\n      // Scale and draw the source image to the canvas\n      ctx.imageSmoothingQuality = \"high\";\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, uploadResizeWidth, uploadResizeHeight);\n      ctx.drawImage(sourceImage, (uploadResizeWidth - width) / 2, (uploadResizeHeight - height) / 2, width, height);\n\n      // Convert the canvas to a data URL in PNG format\n      const options = [\n        canvas.toDataURL('image/jpeg', 0.92),\n        canvas.toDataURL('image/webp', 0.92),\n        canvas.toDataURL('image/png')\n      ];\n      options.sort((a, b) => a.length - b.length);\n\n      this.handleChange('profileUrl', options[0]);\n    }\n\n    reader.onload = function(event) {\n      sourceImage.src = event.target.result;\n    };\n  }\n\n  async onFilesError(e, f) {\n    console.log(e, f);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <button className=\"float-right\" onClick={this.props.logOut}>Log out</button>\n          <Profile\n            accountId={this.props.app && this.props.app.accountId}\n            profileUrl={this.state.profileUrl}\n            displayName={this.state.displayName}\n            bio={this.state.bio}\n            defaultProfileUrl={anon}\n            onFetch={(profile) => this.init(profile)}\n          />\n        </div>\n        <hr/>\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"displayName\">Display Name</label>\n            <input placeholder=\"The REAL Satoshi\" id=\"displayName\" className=\"form-control\" disabled={!this.props.app} value={this.state.displayName} onChange={(e) => this.handleChange('displayName', e.target.value)} />\n          </div>\n          <label htmlFor=\"profileUrl\">Profile URL</label>\n          <div className=\"input-group\">\n            <input placeholder={\"https://metanear.com\" + anon} id=\"profileUrl\" className=\"form-control\" disabled={!this.props.app} value={this.state.profileUrl}\n                   onChange={(e) => this.handleChange('profileUrl', e.target.value)}/>\n            <div className=\"input-group-append\">\n              <Files\n                type=\"button\"\n                className='btn btn-outline-primary'\n                onChange={(f) => this.onFilesChange(f)}\n                onError={(e, f) => this.onFilesError(e, f)}\n                multiple={false}\n                accepts={['image/*']}\n                minFileSize={1}\n                clickable\n              >\n                Click to upload\n              </Files>\n            </div>\n\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"bio\">Bio</label>\n            <textarea placeholder=\"I'm working on Bitcoin, so bankers can go home.\" id=\"bio\" className=\"form-control\" disabled={!this.props.app} value={this.state.bio} onChange={(e) => this.handleChange('bio', e.target.value)} />\n          </div>\n          <div className=\"form-group\">\n            <button\n                className=\"btn btn-primary\"\n                disabled={this.state.saving || !this.hasChanges()}\n                onClick={() => this.save()}\n            >\n              {this.state.saving && (\n                  <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n              )} Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport anon from \"../assets/anon.png\";\nimport encryptionOn from \"../assets/encryptionOn.png\";\nimport encryptionOff from \"../assets/encryptionOff.png\";\nimport { Profile } from \"react-near-openweb\";\n\nconst RE = \"Re: \";\nconst currentVersion = 2;\n\nexport class MailApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      receiverId: \"\",\n      subject: \"\",\n      content: \"\",\n      sending: false,\n      numLetters: 0,\n      unread: 0,\n      expandedId: -1,\n      profileFound: false,\n      profileLoading: false,\n      keyLoading: false,\n      theirPublicKey64: null,\n      inbox: [],\n    }\n    this.textarea = React.createRef();\n    this.keyCache = {};\n  }\n\n  modifyLetter(letter, messageId) {\n    if (messageId === undefined) {\n      if (!letter) {\n        return;\n      }\n      messageId = letter.messageId;\n    }\n    const inbox = this.state.inbox.filter((a) => a.messageId !== messageId);\n    if (letter) {\n      inbox.push(letter);\n    }\n    inbox.sort((a, b) => b.time - a.time);\n    const unread = inbox.reduce((acc, letter) => acc + (letter.read ? 0: 1), 0);\n    this.setState({\n      inbox,\n      unread,\n    });\n    this.props.onNewMail(unread);\n  }\n\n  async migrateFrom(version) {\n    if (version === 0) {\n      console.log(\"Migrating from version #0\");\n      let num = 0;\n      try {\n        num = await this.props.app.get('numLetters');\n      } catch (e) {\n        // whatever. Probably died during migration.\n      }\n      const allMigrations = [];\n      for (let i = 0; i < num; ++i) {\n        allMigrations.push(this.props.app.get('letter_' + i).then((letter) => {\n          if (letter) {\n            return this.props.app.set('letter_' + i, letter, {encrypted: true}).then(() => {\n              console.log(\"Migrated letter #\" + i);\n            })\n          }\n          return Promise.resolve();\n        }).catch((e) => console.log(\"Can't migrate letter #\", i, e)));\n      }\n      await Promise.all(allMigrations);\n      await this.props.app.set('numLetters', num, { encrypted: true });\n      version++;\n    }\n    if (version === 1) {\n      console.log(\"Migrating from version #1\");\n      await this.props.app.storeEncryptionPublicKey();\n      version++;\n    }\n    await this.props.app.set('version', version, { encrypted: true });\n  }\n\n  async init() {\n    let version;\n    try {\n      version = await this.props.app.get('version', {encrypted: true}) || 0;\n    } catch (e) {\n      // likely mismatched keys\n      console.log(e);\n      return;\n    }\n    if (version < currentVersion) {\n      await this.migrateFrom(version);\n    }\n    const num = await this.props.app.get('numLetters', { encrypted: true }) || 0;\n    this.setState({\n      numLetters: num,\n    });\n    for (let i = Math.max(0, num - 10); i < num; ++i) {\n      this.props.app.get('letter_' + i, {encrypted: true}).then((letter) => this.modifyLetter(letter));\n    }\n    this.fetchMessages();\n  }\n\n  maybeInit() {\n    if (this.props.app && !this.state.initialized) {\n      this.setState({\n        initialized: true,\n      });\n      this.props.app.waitReady().then(() => this.init());\n    }\n  }\n\n\n  componentDidMount() {\n    this.maybeInit()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.maybeInit()\n  }\n\n  async fetchKey(accountId) {\n    if (accountId in this.keyCache) {\n      return await this.keyCache[accountId];\n    } else {\n      console.log(\"Fetching key for \" + accountId);\n      this.keyCache[accountId] = this.props.app.getStoredEncryptionPublicKey(accountId, {}).catch((e) => false);\n      return await this.keyCache[accountId];\n    }\n  }\n\n  updateKey(profile) {\n    if (!this.props.app) {\n      return;\n    }\n    this.setState({\n      profileLoading: false,\n      profileFound: !!profile,\n    });\n    if (!profile) {\n      return;\n    }\n    this.setState({\n      keyLoading: true,\n    })\n    this.fetchKey(profile.accountId).then((theirPublicKey64) => {\n      this.setState({\n        keyLoading: false,\n        theirPublicKey64,\n      })\n    });\n  }\n\n  handleChange(key, value) {\n    const stateChange = {\n      [key]: value,\n    };\n    if (key === 'receiverId') {\n      value = value.toLowerCase().replace(/[^a-z0-9\\-_.]/, '');\n      stateChange[key] = value;\n      stateChange.profileLoading = true;\n      stateChange.theirPublicKey64 = false;\n    }\n    this.setState(stateChange);\n  }\n\n  async fetchMessages() {\n    if (!this.props.app) {\n      return;\n    }\n    if (this.fetchTimeoutId) {\n      clearTimeout(this.fetchTimeoutId);\n      this.fetchTimeoutId = null;\n    }\n    console.log(\"Fetching messages\");\n    const message = await this.props.app.pullMessage();\n    if (!message) {\n      this.fetchTimeoutId = setTimeout(() => { this.fetchMessages() }, 60 * 1000);\n      return;\n    }\n    try {\n      console.log(message);\n      let inner = JSON.parse(message.message);\n      const isEncrypted = inner.type === 'encrypted';\n      const fromAppId = inner.fromAppId || this.props.app.appId;\n      if (isEncrypted) {\n        const decryptedMessage = await this.props.app.decryptMessage(inner.content, {\n          accountId: message.sender,\n          appId: inner.fromAppId,\n        });\n        inner = JSON.parse(decryptedMessage);\n      }\n      if (inner.type === 'mail') {\n        const letter = {\n          messageId: this.state.numLetters,\n          isEncrypted,\n          fromAppId,\n          sender: message.sender,\n          subject: inner.subject,\n          content: inner.content,\n          time: Math.trunc(message.time / 1000000),\n        }\n        const newNumLetters = this.state.numLetters + 1;\n        this.setState({\n          numLetters: newNumLetters,\n        });\n\n        this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n          console.log(\"Saved the letter: \", letter);\n        });\n        this.props.app.set(\"numLetters\", newNumLetters, {encrypted: true}).then(() => {\n            console.log(\"Saved the new number of letters: \", newNumLetters);\n        });\n        this.modifyLetter(letter);\n      } else {\n        console.warn(\"Unknown message\", message);\n      }\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.fetchMessages()\n    }\n  }\n\n  async sendMail() {\n    if (!this.state.profileFound) {\n      return;\n    }\n    console.log(\"Sending mail\");\n    this.setState({\n      sending: true,\n    });\n    try {\n      let message = JSON.stringify({\n        type: \"mail\",\n        subject: this.state.subject,\n        content: this.state.content,\n      });\n      if (this.state.theirPublicKey64) {\n        const content = await this.props.app.encryptMessage(message, {\n          theirPublicKey64: this.state.theirPublicKey64,\n        });\n        message = JSON.stringify({\n          type: \"encrypted\",\n          fromAppId: this.props.app.appId,\n          content,\n        })\n      }\n      await this.props.app.sendMessage(this.state.receiverId, message);\n      this.setState({\n        subject: \"\",\n        content: \"\",\n      })\n    } catch (e) {\n      console.log(\"Failed to send the message\", e);\n    } finally {\n      this.setState({\n        sending: false,\n      });\n      this.fetchMessages();\n    };\n  }\n\n  receiverClass() {\n    if (!this.state.receiverId || this.state.profileLoading) {\n      return \"form-control\";\n    } else if (this.state.profileFound) {\n      return \"form-control is-valid\";\n    } else {\n      return \"form-control is-invalid\";\n    }\n  }\n\n  replyTo(letter, displayName) {\n    this.handleChange(\"receiverId\", letter.sender);\n    this.setState({\n      subject: (letter.subject.startsWith(RE) ? \"\" : RE) + letter.subject,\n      content: [\n        \"\",\n        \"\",\n        [\"On\", new Date(letter.time).toLocaleDateString(), displayName, \"@\" + letter.sender, \"wrote:\"].join(' '),\n        ...letter.content.split(/\\r?\\n/).map(s => \"| \" + s)\n      ].join(\"\\n\"),\n    }, () => {\n      this.textarea.current.focus();\n      this.textarea.current.setSelectionRange(0, 0);\n      this.textarea.current.scrollLeft = 0;\n      this.textarea.current.scrollTop = 0;\n    });\n  }\n\n  selectLetter(letter) {\n    this.setState({\n      expandedId: (this.state.expandedId === letter.messageId) ? -1 : letter.messageId,\n    });\n    if (!letter.read) {\n      letter = JSON.parse(JSON.stringify(letter));\n      letter.read = true;\n      this.props.app.set(\"letter_\" + letter.messageId, letter, {encrypted: true}).then(() => {\n        console.log(\"Saved the letter: \", letter);\n      });\n      this.modifyLetter(letter);\n    }\n  }\n\n  deleteLetter(letter) {\n    this.props.app.remove(\"letter_\" + letter.messageId).then(() => {\n      console.log(\"Deleted the letter: \", letter);\n    });\n    this.modifyLetter(null, letter.messageId);\n  }\n\n  render() {\n    const encryptionEnabled = this.state.theirPublicKey64;\n    const displayEncryptionIcon = this.state.profileFound && !this.state.keyLoading;\n    const encryptionAlt = encryptionEnabled ? \"Encryption is ON\" : \"Not secure! Encryption is OFF\";\n    const encryptionIcon = displayEncryptionIcon &&\n      <img className=\"encryption-icon\" src={encryptionEnabled ? encryptionOn : encryptionOff}\n          title={encryptionAlt} alt={encryptionAlt}/>;\n    const profile = <Profile accountId={this.state.receiverId} onFetch={(profile) => this.updateKey(profile)} defaultProfileUrl={anon}/>;\n    const inbox = this.state.inbox.map((letter, i) => (\n      <Letter\n        key={letter.messageId}\n        letter={letter}\n        expanded={letter.messageId === this.state.expandedId}\n        deleteLetter={(letter) => this.deleteLetter(letter)}\n        replyTo={(letter, displayName) => this.replyTo(letter, displayName)}\n        selectLetter={(letter) => this.selectLetter(letter)} />\n    ));\n    return (\n      <div>\n        Inbox <button className=\"btn btn-sm\" onClick={() => this.fetchMessages()}><span role=\"img\" aria-label=\"Refresh\">🔄</span></button>\n        <div>\n          {inbox}\n        </div>\n        <h3>Send</h3>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <div className=\"form-group\">\n              <label className=\"sr-only\" htmlFor=\"toAccountId\">To Account ID</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">@</div>\n                </div>\n                <input type=\"text\" className={this.receiverClass()} id=\"toAccountId\" placeholder=\"To Account ID\" value={this.state.receiverId} disabled={!this.props.app} onChange={(e) => this.handleChange('receiverId', e.target.value)} />\n              </div>\n            </div>\n          </div>\n          {profile}\n        </div>\n        <div className=\"form-group\">\n          <label className=\"sr-only\" htmlFor=\"subject\">Subject</label>\n          <input type=\"text\" className=\"form-control\" id=\"subject\" placeholder=\"Subject\" disabled={!this.props.app} value={this.state.subject} onChange={(e) => this.handleChange('subject', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <textarea ref={this.textarea} id=\"content\" className=\"form-control\" rows=\"7\" disabled={!this.props.app} value={this.state.content} onChange={(e) => this.handleChange('content', e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n          <button className={\"form-control form-control-lg btn \" + (displayEncryptionIcon && !encryptionEnabled ? \"btn-danger\" : \"btn-primary\")} disabled={!this.state.profileFound || this.state.sending} onClick={() => this.sendMail()}>\n            Send {encryptionIcon}</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport class Letter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: {\n        profileUrl: null,\n        displayName: '@' + props.letter.sender,\n      },\n    };\n  }\n\n  onClick() {\n    this.props.selectLetter(this.props.letter);\n  }\n\n  render() {\n    const profile = (\n      <div className=\"col-sm-6 col-md-4 col-lg-4 letter-profile\">\n        <Profile accountId={this.props.letter.sender} onFetch={(profile) => profile && this.setState({displayName: profile.displayName})} defaultProfileUrl={anon}/>\n      </div>\n    );\n    const subject = (\n      <div className=\"col-sm-4 col-md\">\n        <div className=\"letter-subject\">{this.props.letter.subject}</div>\n      </div>\n    );\n    const time = this.props.expanded ? (\n      <div className=\"col-sm-2 col-lg-2\">\n        <div className=\"letter-time\">{longTimeFormat(this.props.letter.time)}</div>\n      </div>\n    ) : (\n      <div className=\"col-sm-2 col-lg-1 d-none d-md-block\">\n        <div className=\"letter-time\">{timeFormat(this.props.letter.time)}</div>\n      </div>\n    );\n    if (this.props.expanded) {\n      return (\n        <div className=\"letter letter-expanded\">\n          <div className=\"row letter-expanded-header\" onClick={() => this.onClick()}>\n            {profile}\n            {subject}\n            {time}\n          </div>\n          <div className=\"letter-content-expanded\">\n            <pre>{this.props.letter.content}</pre>\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <button className=\"btn btn-primary\" onClick={() => this.props.replyTo(this.props.letter, this.state.displayName)}>Reply</button>\n              </div>\n              <div className=\"col-sm\">\n                <button className=\"btn btn-danger float-right\" onClick={() => this.props.deleteLetter(this.props.letter)}>DELETE THIS!</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={\"row letter letter-small\" + (this.props.letter.read ? \" letter-read\" : \" letter-unread\")} onClick={() => this.onClick()}>\n          {profile}\n          {subject}\n          <div className=\"col-sm d-none d-lg-block\">\n            <div className=\"letter-content\">{this.props.letter.content}</div>\n          </div>\n          {time}\n        </div>\n      );\n    }\n  }\n}\n\nfunction longTimeFormat(t) {\n  return new Date(t).toLocaleString();\n}\n\nfunction timeFormat(t) {\n  const d = new Date(t);\n  const now = new Date();\n  if (now.getDate() === d.getDate()) {\n    const hour = d.getHours() % 12;\n    const minute = d.getMinutes().toString().padStart(2, '0');\n    const daytime = d.getHours() >= 12 ? \"PM\" : \"AM\";\n    return `${hour}:${minute} ${daytime}`;\n  } else {\n    return d.toLocaleDateString();\n  }\n}\n","import React, { Component } from 'react';\nimport nearlogo from './assets/gray_near_logo.svg';\nimport './css/App.css';\nimport * as nearlib from \"nearlib\";\nimport { OpenWebApp } from 'near-openweb-js';\nimport { ProfileApp } from \"./apps/ProfileApp\";\nimport { MailApp } from \"./apps/MailApp\";\n// import { KeysApp } from \"./apps/KeysApp\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nconst GAS = 2_000_000_000_000_000;\nconst TITLE = \"Open Web Home - NEAR\"\n\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: false,\n      apps: {},\n      logs: [],\n      unread: 0,\n      loading: false,\n    }\n    this.signedInFlow = this.signedInFlow.bind(this);\n    this.requestSignIn = this.requestSignIn.bind(this);\n    this.requestSignOut = this.requestSignOut.bind(this);\n    this.signedOutFlow = this.signedOutFlow.bind(this);\n    this.checkSignIn = this.checkSignIn.bind(this);\n    this.initOpenWebApp = this.initOpenWebApp.bind(this);\n    window.nearlib = nearlib;\n  }\n\n  componentDidMount() {\n    this.checkSignIn();\n  }\n\n  async checkSignIn() {\n    let loggedIn = window.walletAccount.isSignedIn();\n    if (loggedIn) {\n      await this.signedInFlow();\n    } else {\n      this.signedOutFlow();\n    }\n  }\n\n  log(message) {\n    console.log(message);\n    this.setState({\n      logs: this.state.logs.concat([message])\n    })\n  }\n\n  async signedInFlow() {\n    const accountId = await this.props.wallet.getAccountId()\n    this.setState({\n      login: true,\n      loading: true,\n      accountId,\n    })\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    if (window.location.search.includes(\"all_keys\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    // Initializing our contract APIs by contract name and configuration.\n\n    this.log(\"Connecting to account...\");\n    const account = await new nearlib.Account(window.near.connection, accountId);\n    this.log(\"Querying state...\");\n    let state = await account.state();\n    /*\n    await new Promise((resolve, reject) =>{\n      setTimeout(() => {\n        resolve();\n      }, 5000);\n    })\n     */\n    console.log(state);\n    if (state.code_hash !== 'C8UmYSqATkuyhheJ7i7ryxPjfZL4nV8PfkovdMKitsmJ') {\n      this.log(\"Going to deploy the code\");\n      // no code. Need to deploy.\n      this.log(\"Downloading started...\");\n      let data = await fetch('/open_web.wasm');\n      let buf = await data.arrayBuffer();\n      this.log(\"Downloading done. Deploying contract...\");\n      await account.deployContract(new Uint8Array(buf));\n      if (state.code_hash === '11111111111111111111111111111111') {\n        this.log(\"Deploying done. Initializing contract...\");\n        // Gotta init it.\n        let contract = await new nearlib.Contract(account, accountId, {\n          viewMethods: [],\n          // Change methods can modify the state. But you don't receive the returned value when called.\n          changeMethods: ['new'],\n          // Sender is the account ID to initialize transactions.\n          sender: accountId\n        });\n        console.log(await contract.new());\n      }\n      this.log(\"The contract is deployed\");\n    }\n\n    const masterContract = await new nearlib.Contract(account, accountId, {\n      // View methods are read only. They don't modify the state, but usually return some value.\n      viewMethods: ['apps'],\n      // Change methods can modify the state. But you don't receive the returned value when called.\n      changeMethods: ['add_app_key', 'remove_app_key'],\n      // Sender is the account ID to initialize transactions.\n      sender: accountId\n    });\n\n    this.masterContract = masterContract;\n    window.masterContract = masterContract;\n    this.log(\"Fetching authorized apps...\");\n    console.log(\"Apps:\", await masterContract.apps());\n\n    // this.initOpenWebApp = this.initOpenWebApp.bind(this);\n\n    this.log(\"Initializing local apps...\");\n    const apps = {\n      profile: await this.initOpenWebApp('profile', accountId),\n      // graph: await this.initOpenWebApp('graph', accountId),\n      mail: await this.initOpenWebApp('mail', accountId),\n      // keys: await this.initOpenWebApp('keys', accountId)\n    };\n    window.apps = apps;\n    this.apps = apps;\n    this.setState({\n      apps,\n      loading: false,\n    })\n  }\n\n  async initOpenWebApp(appId, accountId) {\n    this.log(\"Initializing app: \" + appId + \" ...\");\n    const app = new OpenWebApp(appId, accountId, window.nearConfig);\n    await app.init();\n    if (!await app.ready()) {\n      let pk = await app.getAccessPublicKey();\n      this.log(\"Authorizing app for key \" + pk.toString() + \" ...\");\n      const serializedPk = await app.getSerializedAccessPublicKey();\n      const args = {\n        public_key: [...serializedPk],\n        app_id: appId,\n      };\n      await this.masterContract.add_app_key(args, GAS);\n      await app.onKeyAdded();\n    }\n    return app;\n  }\n\n  async requestSignIn() {\n    const appTitle = 'Open Web Home';\n    await this.props.wallet.requestSignIn(\n      \"\",\n      appTitle\n    )\n  }\n\n  requestSignOut = () => {\n    this.props.wallet.signOut();\n    setTimeout(this.signedOutFlow, 500);\n    console.log(\"after sign out\", this.props.wallet.isSignedIn())\n  }\n\n\n  signedOutFlow = () => {\n    if (window.location.search.includes(\"account_id\")) {\n      window.location.replace(window.location.origin + window.location.pathname)\n    }\n    this.setState({\n      login: false,\n    })\n  }\n\n  render() {\n    document.title = (this.state.unread ? `(${this.state.unread}) ` : \"\") + TITLE;\n    if (!this.state.login) {\n      return <div className=\"App-header\">\n        <div>\n          <div className=\"image-wrapper\">\n            <img className=\"logo\" src={nearlogo} alt=\"NEAR logo\"/>\n          </div>\n          <h1>Hello ?</h1>\n          <div>\n            <button onClick={this.requestSignIn}>Log in with NEAR</button>\n          </div>\n        </div>\n      </div>\n    } else if (this.state.loading) {\n      return <div className=\"loading-div\">\n        <div className=\"spinner-grow loading-spinner\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <pre className=\"text-left\">\n          {this.state.logs.join(\"\\n\")}\n        </pre>\n      </div>\n    } else {\n      return <div className={\"apps\" + (this.state.loading ? \" d-none\" : \"\")}>\n        <Tabs forceRenderTabPanel={true}>\n          <TabList>\n            <Tab>Profile</Tab>\n            <Tab>Mail {this.state.unread ? `(${this.state.unread})` : \"\"}</Tab>\n            {/*<Tab>Keys</Tab>*/}\n          </TabList>\n\n          <TabPanel>\n            <ProfileApp app={this.state.apps.profile} logOut={this.requestSignOut}/>\n          </TabPanel>\n          <TabPanel>\n            <MailApp app={this.state.apps.mail} onNewMail={(unread) => this.setState({unread})}/>\n          </TabPanel>\n          {/*<TabPanel>\n            <KeysApp app={this.state.apps.keys}/>\n          </TabPanel>*/}\n        </Tabs>\n      </div>\n    }\n  }\n}\n","import React from \"react\";\nimport queryString from 'query-string';\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    const values = queryString.parse(this.props.location.search);\n    let {app_id, pub_key} = values;\n    if (app_id && pub_key) {\n      this.state = {\n        authorized:false,\n        new_app_id:app_id,\n        new_pub_key:pub_key\n      };\n    } else {\n      this.state = {\n        authorized:false,\n        new_app_id:\"\",\n        new_pub_key:\"\"\n      }\n    }\n  }\n\n componentDidMount() {\n    if (!this.props.loading && this.state.new_app_id && this.state.new_pub_key) {\n      this.props.initOpenWebApp(this.state.new_app_id, this.state.new_pub_key)\n        .then(res => {\n          this.setState({\n            authorized: true\n          })\n        });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.app && !this.state.initialized) {\n      // this.init();\n    }\n  }\n  \n  // async fetchProfile(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  // async registerNewApp(accountId) {\n  //   if (accountId in this.profileCache) {\n  //     return this.profileCache[accountId];\n  //   } else {\n  //     console.log(\"Fetching profile for \" + accountId);\n  //     try {\n  //       const values = await Promise.all([\n  //         this.props.app.getFrom(accountId, 'displayName', 'profile'),\n  //         this.props.app.getFrom(accountId, 'profileUrl', 'profile'),\n  //       ]);\n  //       this.profileCache[accountId] = {\n  //         displayName: values[0] || \"\",\n  //         profileUrl: values[1],\n  //       };\n  //     } catch (e) {\n  //       this.profileCache[accountId] = false;\n  //     }\n  //     return this.profileCache[accountId];\n  //   }\n  // }\n\n  render() {\n    return (\n      <div>\n        {this.state.authorized ? \n        <div>\n          <p>App <strong>{this.state.new_app_id}</strong> was added</p>\n          <p> Using the public key: {this.state.new_pub_key} </p>\n        </div> :\n        \"You need pass a key in order to add an app\"\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport { Home } from './Home';\nimport { Auth } from './Auth';\n\nclass Router extends Component {\n  render() {\n    return (\n      <HashRouter basename={process.env.PUBLIC_URL} hashType=\"noslash\">\n        <Switch>\n          <Route exact path=\"/\" component={() => <Home {...this.props}/>} />\n          <Route path=\"/auth\" component={() => <Auth {...this.props}/>} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport getConfig from './near/config.js';\nimport * as nearlib from 'nearlib';\n\n// Initializing contract\nasync function InitContract() {\n    window.nearConfig = getConfig('development')\n\n    // Initializing connection to the NEAR DevNet.\n    window.near = await nearlib.connect(Object.assign({ deps: { keyStore: new nearlib.keyStores.BrowserLocalStorageKeyStore() } }, window.nearConfig));\n    \n    // Needed to access wallet login\n    window.walletAccount = new nearlib.WalletAccount(window.near);\n    \n    // Getting the Account ID. If unauthorized yet, it's just empty string.\n    window.accountId = window.walletAccount.getAccountId();\n\n}\n\nwindow.nearInitPromise = InitContract().then(() => {\n    ReactDOM.render(<Router contract={window.contract} wallet={window.walletAccount}/>,\n      document.getElementById('root')\n    );\n  }).catch(console.error)","module.exports = __webpack_public_path__ + \"static/media/anon.5cbbd243.png\";","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Profile = undefined;\n\nvar _Profile = require('./Profile.js');\n\nvar _Profile2 = _interopRequireDefault(_Profile);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Profile = _Profile2.default;","import * as nearlib from \"nearlib\";\nimport * as nacl from \"tweetnacl\";\n\nconst GAS = 2000000000000000;\n\nconst encryptionKey = \"encryptionKey\";\n\n/**\n  a class representing the OpenWebApp API\n\n  this API supports local contract methods\n  - get: gets a value from local storage\n  - set: sets a value on local storage\n  - remove: deletes a value from local storage\n\n  and remote contract methods\n  - pull: reads a message from a remote contract\n  - post / send: sends a message to a remote contract\n */\nclass OpenWebApp {\n  constructor(appId, accountId, nearConfig) {\n    this.appId = appId;\n    this.accountId = accountId;\n    this._nearConfig = nearConfig;\n    this.blocking = Promise.resolve();\n    this.parseEncryptionKey();\n    window.nacl = nacl;\n    window.Buffer = Buffer;\n  }\n\n  /**\n    read private key from local storage\n    - if found, recreate the related key pair\n    - if not found, create a new key pair and save it to local storage\n   */\n  parseEncryptionKey() {\n    const keyKey = \"enc_key:\" + this.accountId + \":\" + this.appId + \":\";\n    let key = localStorage.getItem(keyKey);\n    if (key) {\n      const buf = Buffer.from(key, 'base64');\n      if (buf.length !== nacl.box.secretKeyLength) {\n        throw new Error(\"Given secret key has wrong length\");\n      }\n      key = nacl.box.keyPair.fromSecretKey(buf);\n    } else {\n      key = new nacl.box.keyPair();\n      localStorage.setItem(keyKey, Buffer.from(key.secretKey).toString('base64'));\n    }\n    this._key = key;\n  }\n\n  /**\n   updates local secret key to the new given secret key and stores it to local storage.\n   @param newSecretKey64 base64 encoded secret key\n   */\n  updateEncryptionKey(newSecretKey64) {\n    const buf = Buffer.from(newSecretKey64, 'base64');\n    if (buf.length !== nacl.box.secretKeyLength) {\n      throw new Error(\"Given secret key has wrong length\");\n    }\n    const key = nacl.box.keyPair.fromSecretKey(buf);\n    this._key = key;\n    const keyKey = \"enc_key:\" + this.accountId + \":\" + this.appId + \":\";\n    localStorage.setItem(keyKey, Buffer.from(key.secretKey).toString('base64'));\n  }\n\n  async _innerInit() {\n    this._keyStore = new nearlib.keyStores.BrowserLocalStorageKeyStore(\n      localStorage, \"app:\" + this.appId + \":\",\n    );\n    this._near = await nearlib.connect(Object.assign({ deps: { keyStore:  this._keyStore } }, this._nearConfig));\n    this._account = new nearlib.Account(this._near.connection, this.accountId);\n    this._contract = new nearlib.Contract(this._account, this.accountId, {\n      viewMethods: ['get', 'apps', 'num_messages'],\n      changeMethods: ['set', 'remove', 'pull_message', 'send_message'],\n      sender: this.accountId\n    });\n    this._networkId = this._nearConfig.networkId;\n    return true;\n  }\n\n  /**\n    initialize the client-side application with a BrowserLocalStorageKeyStore\n    and a connection to the NEAR platform, binding OpenWebContract methods:\n\n    - get, set, remove: local invocation methods for controlling the state of local applications\n    - pull_message, send_message: remote invocation methods for communicating with contracts of other users\n    - apps, num_messages: convenience methods for listing all apps on the OpenWeb and messages for a specific app\n   */\n  async init() {\n    return this._init || (this._init = this._innerInit());\n  }\n\n  /**\n    helper method to check if the the user is logged in with the app\n   */\n  async ready() {\n    await this.init();\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    return !!key;\n  }\n\n  /**\n   helper method to wait until the the user is logged in with the app\n   */\n  async waitReady() {\n    return await this.ready() || this._ready || (this._ready = (new Promise((resolve) => {\n      this._keyAwait = resolve;\n    })));\n  }\n\n  /**\n    produce a public key on the user account\n    @return {string} existing (or create new) public key for the current account\n   */\n  async getAccessPublicKey() {\n    const key = await this._keyStore.getKey(this._networkId, this.accountId);\n    if (key) {\n      return key.getPublicKey();\n    }\n    if (this._tmpKey) {\n      return this._tmpKey.getPublicKey();\n    }\n    const accessKey = nearlib.KeyPair.fromRandom('ed25519');\n    this._tmpKey = accessKey;\n    return accessKey.getPublicKey();\n  }\n\n  /**\n    returns a public key on the user account in binary borsh serialized format\n    @returns {Promise<Uint8Array>} public access key\n   */\n  async getSerializedAccessPublicKey() {\n    return nearlib.utils.serialize.serialize(nearlib.transactions.SCHEMA, await this.getAccessPublicKey());\n  }\n\n  /**\n    returns the encryption key stored under given accountId\n\n    @param {string|null} accountId optional accountId to get stored encryption key (your account by default).\n    @param {object} options to specify:\n    - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n    - {string} `appId` the name of the app. Same app by default.\n    @returns {Promise<string|null>} the stored encryption key in base64 format or null\n   */\n  async getStoredEncryptionPublicKey(accountId, options) {\n    return this.getFrom(accountId || this.accountId, encryptionKey, options)\n  }\n\n\n  getEncryptionPublicKey() {\n    return Buffer.from(this._key.publicKey).toString('base64')\n  }\n\n  async storeEncryptionPublicKey() {\n    return this.set(encryptionKey, this.getEncryptionPublicKey());\n  }\n\n  /**\n    capture new keys in the keystore\n   */\n  async onKeyAdded() {\n    if (!this._tmpKey) {\n      throw new Error('The key is not initialized yet');\n    }\n    await this._keyStore.setKey(this._networkId, this.accountId, this._tmpKey);\n    this._tmpKey = null;\n    if (this._keyAwait) {\n      this._keyAwait();\n    }\n  }\n\n  /**\n    enforces that the app is ready\n\n    @returns {Promise<void>}\n   */\n  async forceReady() {\n    if (!await this.ready()) {\n      throw new Error('Not ready yet');\n    }\n  }\n\n  /**\n    wrap a call in a Promise for async handling?\n\n    @param {Function} call the function to be wrapped in a Promise\n    @return {Promise} the Promise to return\n   */\n  wrappedCall(call) {\n    this.blocking = this.blocking.then(() => call()).catch(() => call());\n    return this.blocking;\n  }\n\n  /**\n    unbox encrypted messages with our secret key\n    @param {string} msg64 encrypted message encoded as Base64\n    @return {string} decoded contents of the box\n   */\n  decryptSecretBox(msg64) {\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.secretbox.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.secretbox.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.secretbox.open(box, nonce, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n    box an unencrypted message with our secret key\n    @param {string} str the message to wrap in a box\n    @return {string} base64 encoded box of incoming message\n   */\n  encryptSecretBox(str) {\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.secretbox.nonceLength);\n    const box = nacl.secretbox(buf, nonce, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.secretbox.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.secretbox.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n   unbox encrypted messages with our secret key\n   @param {string} msg64 encrypted message encoded as Base64\n   @param {Uint8Array} theirPublicKey the public key to use to verify the message\n   @return {string} decoded contents of the box\n   */\n  decryptBox(msg64, theirPublicKey) {\n    if (theirPublicKey.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Given encryption public key is invalid.\");\n    }\n    const buf = Buffer.from(msg64, 'base64');\n    const nonce = new Uint8Array(nacl.box.nonceLength);\n    buf.copy(nonce, 0, 0, nonce.length);\n    const box = new Uint8Array(buf.length - nacl.box.nonceLength);\n    buf.copy(box, 0, nonce.length);\n    const decodedBuf = nacl.box.open(box, nonce, theirPublicKey, this._key.secretKey);\n    return Buffer.from(decodedBuf).toString()\n  }\n\n  /**\n   box an unencrypted message with their public key and sign it with our secret key\n   @param {string} str the message to wrap in a box\n   @param {Uint8Array} theirPublicKey the public key to use to encrypt the message\n   @returns {string} base64 encoded box of incoming message\n   */\n  encryptBox(str, theirPublicKey) {\n    if (theirPublicKey.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Given encryption public key is invalid.\");\n    }\n    const buf = Buffer.from(str);\n    const nonce = nacl.randomBytes(nacl.box.nonceLength);\n    const box = nacl.box(buf, nonce, theirPublicKey, this._key.secretKey);\n\n    const fullBuf = new Uint8Array(box.length + nacl.box.nonceLength);\n    fullBuf.set(nonce);\n    fullBuf.set(box, nacl.box.nonceLength);\n    return Buffer.from(fullBuf).toString('base64')\n  }\n\n  /**\n    get data from a local app.  apps can decide whether or not to encrypt their contents\n\n    @param {string} key the key used to store a value in the app\n    @param {object} options to specify:\n    - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n    - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned by the local app\n   */\n  async get(key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    let str = await this._contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    get a value from a remote app installed on another account\n\n    @param {string} accountId account from which to get a value\n    @param {string} key the key to use to identify the value\n    @param {object} options to specify:\n     - {bool} `encrypted` flag indicating whether or not the value is box encrypted. Default false.\n     - {string} `appId` the name of the app. Same app by default.\n    @return {string} the value returned from the remote app\n   */\n  async getFrom(accountId, key, options) {\n    options = Object.assign({\n      encrypted: false,  // not supported yet\n      appId: this.appId,\n    }, options);\n    const account = new nearlib.Account(this._near.connection, accountId);\n    const contract = new nearlib.Contract(account, accountId, {\n      viewMethods: ['get'],\n      changeMethods: [],\n      sender: this.accountId\n    });\n\n    let str = await contract.get({\n      app_id: options.appId,\n      key,\n    });\n    if (str) {\n      str = JSON.parse(options.encrypted ? this.decryptSecretBox(str) : str);\n    }\n    return str;\n  }\n\n  /**\n    return a list of installed apps\n    @return {object} collection of installed apps\n   */\n  async apps() {\n    return await this._contract.apps();\n  }\n\n  /**\n    set a value in local storage\n\n    @param {string} key identifier for the value to be set\n    @param {string} value the value to be set\n    @param {object} options to specify:\n      - {bool} `encrypted` flag indicating whether to encrypt (box) the value. Default false.\n   */\n  async set(key, value, options) {\n    await this.forceReady();\n    options = Object.assign({\n      encrypted: false,\n    }, options);\n    await this.wrappedCall(() => this._contract.set({\n      key,\n      value: options.encrypted ? this.encryptSecretBox(JSON.stringify(value)) : JSON.stringify(value),\n    }, GAS));\n  }\n\n  /**\n    remove a key-value pair from local storage\n\n    @param {string} key key to be removed\n   */\n  async remove(key) {\n    await this.forceReady();\n    await this.wrappedCall(() => this._contract.remove({\n      key,\n    }, GAS));\n  }\n\n  /**\n    retrieve a message\n\n    @return {any} return async? pull from local storage, null if not found\n   */\n  async pullMessage() {\n    await this.forceReady();\n    if (await this._contract.num_messages({app_id: this.appId}) > 0) {\n      return await this.wrappedCall(() => this._contract.pull_message({}, GAS));\n    } else {\n      return null;\n    }\n  }\n\n  async getTheirPublicKey(options) {\n    options = Object.assign({\n      accountId: null,\n      theirPublicKey: null,\n      theirPublicKey64: null,\n      encryptionKey,\n      appId: this.appId,\n    }, options);\n    if (options.theirPublicKey) {\n      return options.theirPublicKey;\n    }\n    if (!options.theirPublicKey64) {\n      if (!options.accountId) {\n        throw new Error(\"Either accountId or theirPublicKey64 has to be provided\");\n      }\n      options.theirPublicKey64 = await this.getFrom(options.accountId, options.encryptionKey, {\n        appId: options.appId,\n      });\n    }\n    if (!options.theirPublicKey64) {\n      throw new Error(\"Their app doesn't provide the encryption public key.\");\n    }\n    const buf = Buffer.from(options.theirPublicKey64, 'base64');\n    if (buf.length !== nacl.box.publicKeyLength) {\n      throw new Error(\"Their encryption public key is invalid.\");\n    }\n    const theirPublicKey = new Uint8Array(nacl.box.publicKeyLength);\n    theirPublicKey.set(buf);\n    return theirPublicKey;\n  }\n\n  /**\n   * Encrypts given content. Typical usage: encryptMessage(\"hello world\", {accountId: bla})\n   *\n   * @param {string} content The message to encrypt\n   * @param options\n   * @returns {Promise<string>}\n   */\n  async encryptMessage(content, options) {\n    const theirPublicKey = await this.getTheirPublicKey(options);\n    return this.encryptBox(content, theirPublicKey);\n  }\n\n  async decryptMessage(msg64, options) {\n    const theirPublicKey = await this.getTheirPublicKey(options);\n    return this.decryptBox(msg64, theirPublicKey);\n  }\n\n  /**\n    send a message to another account\n\n    @param {string} receiverId account id which will receive the message\n    @param {string} message the content of the message\n    @param {object} options to specify:\n      - {string} `appId` the app ID to receive the message. Same app by default.\n   */\n  async sendMessage(receiverId, message, options) {\n    this.forceReady();\n    options = Object.assign({\n      appId: this.appId,\n    }, options);\n    await this.wrappedCall(() => this._contract.send_message({\n      receiver_id: receiverId,\n      app_id: options.appId,\n      message,\n    }, GAS));\n  }\n}\n\nexport {encryptionKey, OpenWebApp}\n"],"sourceRoot":""}